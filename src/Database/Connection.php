<?php
 namespace App\Database; use Doctrine\DBAL\Connection as DoctrineConnection; use Doctrine\DBAL\Driver\PDO\MySQL\Driver as PdoMySQLDriver; use App\Entity\DatabaseServer as DatabaseServerEntity; use App\Entity\Database as DatabaseEntity; use App\Entity\DatabaseUser as DatabaseUserEntity; class Connection { const ENGINE_MYSQL = "\115\171\123\121\114"; const ENGINE_MARIA_DB = "\115\x61\x72\x69\141\x44\102"; private DatabaseServerEntity $databaseServerEntity; private ?DoctrineConnection $connection = null; public function __construct(DatabaseServerEntity $databaseServerEntity) { $this->databaseServerEntity = $databaseServerEntity; } public function connect($timeout = 10) { goto bfd8c; Dad42: return $this->connection; goto Bfbfe; de87d: cba52: goto Dad42; bfd8c: if (!(true === is_null($this->connection))) { goto cba52; } goto dcb44; dcb44: try { goto a338c; C20a9: $certificate = $this->databaseServerEntity->getCertificate(); goto Cabde; ed5ef: $driverOptions[\PDO::MYSQL_ATTR_SSL_CA] = $tmpCertificateFile; goto abee4; C3933: $tmpCertificateFile = tempnam(sys_get_temp_dir(), "\x63\x6c\160\x2d\164\x6d\x70\55\143\145\x72\164\x69\x66\151\143\x61\x74\145\55"); goto a9627; D8be4: $params["\144\x72\x69\x76\145\162\x4f\160\x74\151\157\156\x73"] = $driverOptions; goto f3e66; Aac8a: C9a06: goto D8be4; a338c: $params = ["\150\157\x73\164" => $this->databaseServerEntity->getHost(), "\160\157\162\164" => $this->databaseServerEntity->getPort(), "\165\x73\x65\162" => $this->databaseServerEntity->getUserName(), "\160\141\x73\163\167\157\x72\144" => $this->databaseServerEntity->getDecryptedPassword()]; goto eafd0; abee4: $driverOptions[\PDO::MYSQL_ATTR_SSL_VERIFY_SERVER_CERT] = false; goto Aac8a; f3e66: $driver = new PdoMySQLDriver(); goto f8e3f; Cabde: if (!(false === empty($certificate))) { goto C9a06; } goto C3933; eafd0: $driverOptions = [\PDO::ATTR_TIMEOUT => $timeout, \PDO::ATTR_ERRMODE => \PDO::ERRMODE_EXCEPTION]; goto C20a9; ee096: $this->connection->connect(); goto C02e7; f8e3f: $this->connection = new DoctrineConnection($params, $driver); goto ee096; a9627: file_put_contents($tmpCertificateFile, $certificate); goto ed5ef; C02e7: } catch (\Exception $e) { throw $e; } finally { if (!(true === isset($tmpCertificateFile))) { goto F3003; } unlink($tmpCertificateFile); F3003: } goto de87d; Bfbfe: } public function getDatabases() : array { goto d96b9; A9f2f: if (!(count($databasesRows) && true === is_array($databasesRows))) { goto e6357; } goto Bcadb; d96b9: $this->connect(); goto bb220; Fc7a6: return $databases; goto Ce21b; Ad96d: $databasesRows = $databasesResult->fetchAllAssociative(); goto A9f2f; bb220: $databases = []; goto b0fe2; f7d30: e6357: goto Fc7a6; b8a2e: ed224: goto f7d30; b0fe2: $databasesResult = $this->connection->executeQuery("\163\150\157\167\40\144\141\164\141\142\x61\163\145\163"); goto Ad96d; Bcadb: foreach ($databasesRows as $databasesRow) { goto Bd49d; bc66a: $databases[] = $databasesRow["\104\x61\x74\141\x62\x61\163\145"]; goto b5227; D89d8: e9d93: goto cae86; Bd49d: if (!(true == isset($databasesRow["\x44\141\164\141\142\x61\163\145"]) && false === empty($databasesRow["\x44\141\164\141\x62\141\x73\145"]))) { goto Fdb4a; } goto bc66a; b5227: Fdb4a: goto D89d8; cae86: } goto b8a2e; Ce21b: } public function createDatabase(DatabaseEntity $databaseEntity) { goto E0a5b; bf162: $schemaManager->createDatabase($databaseName); goto B0992; c314a: $schemaManager = $this->connection->createSchemaManager(); goto bf162; B0992: Cef6b: goto ec573; b0bc9: if (!(false === $this->hasDatabase($databaseName))) { goto Cef6b; } goto Bba0f; Bba0f: $databaseName = sprintf("\x60\45\x73\140", $databaseName); goto c314a; E0a5b: $databaseName = $databaseEntity->getName(); goto b0bc9; ec573: } public function deleteDatabase(DatabaseEntity $databaseEntity) { goto e730a; f6c51: if (!(true === $this->hasDatabase($databaseName))) { goto a2542; } goto b006e; a3104: $schemaManager->dropDatabase($databaseName); goto e7ef6; A81fd: $schemaManager = $this->connection->createSchemaManager(); goto a3104; b006e: $databaseName = sprintf("\x60\45\163\140", $databaseName); goto A81fd; e730a: $databaseName = $databaseEntity->getName(); goto f6c51; e7ef6: a2542: goto Df7ee; Df7ee: } public function createUser(DatabaseUserEntity $databaseUserEntity) : void { goto D1448; e2f1f: E9705: goto A8b07; b6536: $sqlStatements = []; goto C27c5; e6b1e: foreach ($sqlStatements as $sql) { $this->connection->executeStatement($sql); E131f: } goto F6561; a241f: goto B58ed; goto a9a13; Cbd4b: $sqlStatements[] = sprintf("\107\122\101\x4e\124\40\x53\105\114\x45\x43\124\40\117\116\x20\140\x25\163\140\x2e\52\x20\x54\117\40\x20\47\45\163\47\x40\47\45\45\x27\73", $databaseName, $databaseUserName); goto b694b; C27c5: if (DatabaseUserEntity::PERMISSIONS_READ_WRITE == $databaseUserPermissions) { goto f6322; } goto Cbd4b; b694b: goto D20bb; goto abfb2; cf8fd: if (self::ENGINE_MYSQL == $databaseEngine) { goto d08ca; } goto D4c98; D4c98: $sqlStatements = [sprintf("\x43\x52\x45\101\x54\x45\40\125\123\x45\x52\x20\47\45\163\x27\100\47\x25\45\47\x20\x49\104\105\x4e\x54\111\x46\111\105\104\x20\x42\x59\x20\x27\45\x73\x27\73", $databaseUserName, addslashes($databaseUserPassword)), sprintf("\107\x52\x41\116\x54\x20\125\x53\x41\107\105\x20\117\116\x20\x2a\x2e\x2a\x20\x54\x4f\40\47\x25\163\47\100\x27\45\45\47\x3b", $databaseUserName)]; goto a241f; abfb2: f6322: goto a4757; a4757: $sqlStatements[] = sprintf("\x47\x52\101\116\x54\x20\123\x45\114\x45\x43\x54\54\x20\111\116\123\105\x52\x54\x2c\x20\125\x50\104\101\124\105\54\40\104\105\114\105\124\x45\x2c\x20\103\122\x45\x41\124\x45\x2c\x20\x44\x52\x4f\x50\54\x20\122\105\106\105\x52\105\116\x43\x45\x53\54\x20\111\x4e\104\105\x58\54\40\x41\114\124\x45\x52\x2c\x20\xa\40\40\40\x20\40\x20\40\40\40\x20\x20\40\x20\40\40\40\x43\x52\105\x41\124\105\40\x54\105\115\120\x4f\x52\101\122\x59\x20\x54\x41\102\114\105\123\54\40\114\117\x43\113\x20\x54\101\102\114\x45\123\x2c\40\105\x58\105\x43\x55\x54\x45\x2c\40\x43\x52\105\x41\x54\105\40\x56\x49\x45\x57\x2c\40\123\110\x4f\x57\x20\x56\x49\x45\127\54\x20\103\122\105\x41\x54\105\x20\122\x4f\x55\124\111\x4e\x45\x2c\x20\101\x4c\x54\105\x52\40\122\117\x55\x54\111\x4e\x45\54\x20\105\x56\x45\x4e\x54\54\40\x54\122\x49\x47\107\105\x52\40\x4f\116\x20\140\45\163\x60\56\52\x20\124\117\40\40\47\x25\x73\47\x40\x27\x25\x25\47\73", $databaseName, $databaseUserName); goto Cbd04; Ddda9: D20bb: goto Cb9e3; B3ec7: B58ed: goto e6b1e; Cbd04: $sqlStatements[] = sprintf("\101\114\124\105\122\x20\x55\x53\x45\x52\40\140\45\x73\x60\100\x60\45\x25\x60\x20\122\105\x51\x55\111\x52\105\40\116\117\116\105\x20\127\111\x54\x48\x20\x4d\101\x58\x5f\x51\125\105\122\x49\105\x53\x5f\120\105\x52\x5f\x48\x4f\125\x52\x20\60\40\x4d\101\x58\x5f\103\x4f\x4e\x4e\105\x43\124\x49\x4f\116\123\x5f\120\x45\122\x5f\110\117\125\x52\x20\60\40\x4d\101\130\137\125\120\104\101\124\x45\x53\x5f\120\105\x52\137\x48\117\x55\x52\40\x30\40\x4d\x41\x58\x5f\125\123\105\122\137\103\117\116\116\x45\103\124\111\117\116\123\40\x30\73", $databaseUserName); goto Ddda9; F6561: C1bd3: goto c91ae; a5224: $databaseUserPassword = $databaseUserEntity->getDecryptedPassword(); goto f99d4; D1448: $this->deleteUser($databaseUserEntity); goto Bc8b0; Bc8b0: $databaseEngine = $this->getEngine(); goto Fd34f; a6b4c: $sqlStatements = [sprintf("\103\x52\105\101\x54\x45\x20\125\x53\x45\122\40\x27\x25\163\x27\100\x27\45\x25\47\40\x49\104\x45\116\x54\x49\106\x49\x45\104\x20\127\111\x54\x48\x20\155\171\x73\161\154\x5f\x6e\x61\164\x69\166\x65\137\160\x61\163\x73\167\157\162\144\40\102\131\x20\47\45\x73\47\73", $databaseUserName, addslashes($databaseUserPassword)), sprintf("\107\122\101\x4e\124\40\x55\123\x41\x47\x45\x20\117\116\40\x2a\x2e\52\x20\124\117\40\x27\45\x73\47\100\47\45\x25\x27\73", $databaseUserName)]; goto B3ec7; c91ae: $databaseName = $databaseEntity->getName(); goto b6536; F68e8: $databaseEntity = $databaseUserEntity->getDatabase(); goto cf8fd; A8b07: $this->connection->executeStatement("\x46\x4c\x55\x53\x48\40\x50\122\111\x56\111\114\x45\107\105\x53\x3b"); goto a4f71; a9a13: d08ca: goto a6b4c; Cb9e3: foreach ($sqlStatements as $sql) { $this->connection->executeStatement($sql); b477d: } goto e2f1f; Fd34f: $databaseUserName = $databaseUserEntity->getUserName(); goto a5224; f99d4: $databaseUserPermissions = $databaseUserEntity->getPermissions(); goto F68e8; a4f71: } public function deleteUser(DatabaseUserEntity $databaseUserEntity) { goto c09d5; E611b: $databaseUserName = $databaseUserEntity->getUserName(); goto fee32; fee32: $this->connection->executeStatement(sprintf("\104\122\x4f\x50\40\125\x53\x45\x52\40\x49\106\40\105\x58\111\123\x54\x53\x20\140\x25\163\x60\73", $databaseUserName)); goto c43dd; c43dd: $this->connection->executeStatement("\106\x4c\x55\x53\110\40\120\122\111\126\111\114\105\x47\x45\x53\73"); goto Ae013; c09d5: $this->connect(); goto E611b; Ae013: } public function hasDatabase(string $databaseName) { goto B940f; b03a9: $databases = $this->getDatabases(); goto c7779; c7779: $hasDatabase = in_array($databaseName, $databases); goto C02c7; C02c7: return $hasDatabase; goto C1311; B940f: $this->connect(); goto b03a9; C1311: } public function getEngine() : string { goto Ecac3; D3b27: a9903: goto Ce69d; Af68c: $version = strtolower($this->getVariableValue("\x76\x65\162\x73\151\x6f\x6e")); goto fd58d; Ecac3: $engine = self::ENGINE_MYSQL; goto Af68c; Ce69d: return $engine; goto B1fec; De184: $engine = self::ENGINE_MARIA_DB; goto D3b27; fd58d: if (!(true === \str_contains($version, "\x6d\141\x72\151\141"))) { goto a9903; } goto De184; B1fec: } public function getVersion() : ?string { goto f06f4; Eeca5: $version = sprintf("\x25\x73\56\45\x73", $versionParts["\155\x61\x6a\x6f\162"], $versionParts["\x6d\x69\x6e\x6f\162"]); goto F917a; b2d8d: preg_match("\57\x5e\x28\77\x50\x3c\x6d\141\152\157\162\x3e\134\144\53\x29\x28\x3f\x3a\134\56\x28\77\120\74\x6d\x69\x6e\x6f\162\x3e\134\x64\53\51\50\x3f\x3a\134\x2e\x28\77\120\74\x70\141\x74\x63\x68\76\134\x64\53\51\51\x3f\51\77\57", $version, $versionParts); goto ea6f9; f06f4: $version = $this->getVariableValue("\x69\x6e\156\x6f\x64\x62\x5f\x76\x65\x72\x73\151\x6f\156"); goto Fb1ba; Fb1ba: if (!(false === empty($version))) { goto A0089; } goto b2d8d; ea6f9: if (!(true === isset($versionParts["\x6d\x61\152\157\x72"]) && false === empty($versionParts["\x6d\141\x6a\x6f\162"]) && true === isset($versionParts["\155\151\156\x6f\x72"]) && false === empty($versionParts["\155\151\x6e\157\162"]))) { goto B9157; } goto Eeca5; B442d: A0089: goto bcf4f; bcf4f: return $version; goto a25a0; F917a: B9157: goto B442d; a25a0: } public function getVariableValue(string $key) : ?string { goto Aae74; Ba31c: $result = $statement->execute(["\153\x65\x79" => $key]); goto D1032; Aae74: $this->connect(); goto b96e3; C4ff9: $value = $result["\x56\141\x6c\165\145"] ?? ''; goto da2fa; da2fa: return $value; goto d7b5d; b96e3: $statement = $this->connection->prepare("\x53\110\x4f\x57\40\x56\x41\122\x49\x41\102\114\x45\x53\40\114\x49\x4b\x45\40\x3a\x6b\x65\171"); goto Ba31c; D1032: $result = $result->fetchAssociative(); goto C4ff9; d7b5d: } }
