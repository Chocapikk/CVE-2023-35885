<?php
 namespace App\Form; use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\Form\Extension\Core\Type\TextType; use Symfony\Component\Form\FormEvent; use Symfony\Component\Form\FormEvents; use Symfony\Component\Validator\Constraints as Assert; class SiteFtpUserType extends AbstractType { public function buildForm(FormBuilderInterface $builder, array $options) : void { goto D9064; c88b7: $siteEntity = $ftpUserEntity->getSite(); goto bbcc8; f78e3: $homeDirectory = sprintf("\x2f\150\x6f\x6d\x65\57\x25\x73\x2f\x68\164\x64\157\x63\163\x2f\x25\163\57", $siteEntity->getUser(), rtrim($siteEntity->getRootDirectory(), "\x2f")); goto Ccbee; eb7f2: $builder->add("\x70\x61\163\163\167\157\x72\144", TextType::class, ["\162\145\x71\165\x69\162\145\144" => true, "\155\x61\160\x70\145\144" => false, "\141\x74\164\162" => ["\x63\154\x61\x73\x73" => "\146\x6f\162\155\x2d\143\x6f\x6e\164\162\157\x6c\40\146\x6f\x72\x6d\x2d\143\157\156\164\162\157\154\55\x6c\x67"], "\154\141\x62\145\154" => "\120\x61\x73\163\x77\x6f\162\144", "\x63\157\x6e\x73\x74\x72\x61\151\156\164\163" => [new Assert\NotBlank(), new Assert\Length(["\x6d\x69\x6e" => 8]), new Assert\Length(["\x6d\141\170" => 40])]]); goto f78e3; Ccbee: $builder->add("\x68\157\x6d\145\104\151\162\x65\x63\164\x6f\162\171", TextType::class, ["\162\x65\x71\165\x69\162\x65\x64" => true, "\155\x61\160\x70\145\144" => true, "\x61\164\164\162" => ["\143\154\x61\163\163" => "\146\157\x72\155\x2d\x63\x6f\156\164\162\157\x6c\40\146\x6f\x72\155\x2d\x63\157\156\x74\162\157\x6c\55\x6c\x67"], "\154\141\142\x65\154" => "\110\x6f\x6d\x65\x20\x44\151\162\145\143\x74\157\162\171", "\144\x61\164\x61" => $homeDirectory]); goto bc0de; bc0de: $builder->addEventListener(FormEvents::PRE_SUBMIT, function (FormEvent $event) { goto A69ce; ec7ba: $data["\x68\157\155\x65\104\x69\162\x65\143\x74\157\x72\171"] = true === isset($data["\x68\x6f\x6d\x65\x44\151\x72\x65\143\x74\x6f\x72\171"]) ? sprintf("\x25\163\x2f", rtrim($data["\x68\157\155\x65\104\x69\x72\x65\143\164\x6f\x72\x79"], "\57")) : ''; goto eacd8; ca53d: $data["\165\163\x65\x72\116\141\155\145"] = true === isset($data["\x75\163\145\x72\116\141\x6d\x65"]) ? strtolower($data["\165\163\x65\162\116\x61\x6d\145"]) : ''; goto ec7ba; eacd8: $event->setData($data); goto d6c9d; A69ce: $data = $event->getData(); goto ca53d; d6c9d: }); goto E8a56; bbcc8: $builder->add("\165\163\x65\162\x4e\141\x6d\145", TextType::class, ["\162\x65\161\x75\x69\x72\x65\x64" => true, "\x6d\141\160\x70\145\144" => true, "\x61\x74\x74\x72" => ["\143\x6c\x61\163\x73" => "\x66\x6f\162\155\55\x63\x6f\156\x74\162\157\x6c\x20\x66\157\162\155\x2d\143\x6f\x6e\164\x72\157\154\55\154\x67", "\x70\154\x61\143\145\150\157\x6c\144\145\162" => "\x6a\x6f\x68\156\55\x66\x74\x70"], "\154\x61\x62\x65\154" => "\x55\163\x65\162\x20\x4e\x61\155\x65"]); goto eb7f2; D9064: $ftpUserEntity = $options["\144\x61\x74\x61"]; goto c88b7; E8a56: } public function getName() : string { return "\x63\154\x70\x5f\x73\151\164\145\x5f\146\164\160\x5f\x75\163\145\x72"; } }
