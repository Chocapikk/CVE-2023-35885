<?php
 namespace App\Form; use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\Form\Extension\Core\Type\ChoiceType; use Symfony\Component\Form\Extension\Core\Type\CheckboxType; use Symfony\Component\Form\Extension\Core\Type\TextType; use Symfony\Component\Form\Extension\Core\Type\TextareaType; use App\Validator\Constraints as AppAssert; use App\Backup\Frequency; use App\Aws\Regions as AwsRegions; class AdminRemoteBackupAmazonS3Type extends AbstractType { private const DEFAULT_REGION = "\165\x73\55\x65\x61\163\x74\x2d\61"; public function buildForm(FormBuilderInterface $builder, array $options) : void { goto F4b4e; c22cd: $timeChoices = []; goto A734d; C4fb3: $builder->add("\x61\x63\143\x65\163\163\x4b\145\171", TextType::class, ["\162\145\161\165\x69\162\x65\x64" => true, "\141\164\x74\x72" => ["\x63\154\x61\163\163" => "\146\x6f\x72\155\x2d\x63\157\x6e\x74\x72\157\154\x20\146\157\x72\155\55\143\157\156\x74\x72\x6f\154\55\x6c\x67", "\160\x6c\141\143\x65\x68\157\x6c\144\x65\162" => "\x41\x4b\111\101\112\x50\x58\61\122\110\x48\126\131\x57\x51\64\x35\x4e\x53\101\x38\x37"], "\x6c\x61\x62\145\154" => "\x41\127\123\40\101\x63\x63\145\163\x73\40\113\x65\x79", "\143\x6f\x6e\x73\164\x72\x61\151\156\164\x73" => [new AppAssert\AmazonS3Credentials()]]); goto b0892; F10ef: $builder->add("\x73\164\157\162\141\147\145\x44\151\x72\x65\x63\x74\x6f\162\x79", TextType::class, ["\162\x65\161\165\x69\162\x65\144" => true, "\141\x74\164\x72" => ["\x63\154\141\163\x73" => "\x66\x6f\x72\x6d\x2d\143\157\156\164\x72\x6f\154\x20\146\157\162\x6d\x2d\143\x6f\x6e\164\162\157\x6c\55\154\x67"], "\x6c\141\x62\x65\154" => "\123\164\157\x72\141\x67\145\40\x44\x69\162\x65\x63\x74\x6f\x72\x79", "\x64\141\x74\141" => "\x62\x61\143\153\x75\160\x73"]); goto A2789; A6ec4: d81a8: goto F54a4; F4b4e: $builder->add("\145\156\x61\x62\x6c\145\x52\x65\155\157\164\145\x42\x61\143\153\x75\160", CheckboxType::class, ["\162\145\161\x75\x69\x72\x65\x64" => false, "\x61\164\x74\162" => ["\x63\x6c\141\x73\x73" => "\146\x6f\162\155\55\143\x68\x65\143\x6b\55\x69\x6e\x70\165\x74"], "\154\x61\x62\145\x6c" => "\105\x6e\141\x62\154\x65\x20\122\x65\x6d\157\164\145\40\x42\x61\x63\x6b\x75\x70", "\144\141\x74\141" => true]); goto e2431; ad6a4: $builder->add("\x72\x65\x67\x69\x6f\x6e", ChoiceType::class, ["\162\145\x71\165\x69\x72\x65\144" => true, "\x61\x74\164\162" => ["\x63\154\141\x73\x73" => "\x66\157\x72\x6d\x2d\x73\x65\154\145\x63\x74\x20\x66\x6f\x72\155\55\x73\x65\x6c\145\x63\164\x2d\154\147"], "\x6c\141\x62\x65\x6c" => "\x52\x65\147\151\157\156", "\143\150\x6f\x69\x63\x65\x73" => $regionChoices, "\144\141\164\141" => self::DEFAULT_REGION]); goto F10ef; F54a4: $builder->add("\x65\170\145\143\165\x74\151\x6f\x6e\x54\151\155\x65", ChoiceType::class, ["\x72\x65\x71\165\151\x72\145\144" => false, "\x61\x74\x74\x72" => ["\x63\x6c\x61\163\x73" => "\x66\x6f\162\155\55\163\145\154\x65\x63\x74\40\146\157\162\x6d\x2d\163\145\x6c\x65\143\164\55\154\147"], "\154\x61\x62\x65\154" => "\124\x69\x6d\145", "\x70\x6c\x61\x63\145\150\157\x6c\x64\145\162" => false, "\143\x68\157\x69\x63\145\x73" => $timeChoices, "\144\141\x74\141" => 2]); goto C4fb3; cd53a: $regionChoices = []; goto Fd37b; b0892: $builder->add("\x73\145\143\162\145\164\x41\143\143\x65\163\x73\x4b\x65\x79", TextType::class, ["\162\145\x71\165\x69\x72\145\144" => true, "\141\164\164\162" => ["\143\154\141\163\163" => "\146\157\x72\x6d\x2d\143\x6f\x6e\164\x72\157\x6c\x20\146\x6f\162\155\55\143\157\156\x74\x72\157\x6c\55\x6c\x67", "\160\154\141\143\145\150\x6f\154\x64\145\162" => "\154\x75\142\153\x57\115\x76\x62\x35\x66\x34\x36\x47\127\x6f\156\x69\x58\67\157\x59\x62\150\61\x77\x71\x37\130\x50\x2b\114\125\x4f\142\x79\x6d\53\x48\107\61"], "\154\x61\x62\145\x6c" => "\x41\x57\123\x20\123\x65\143\162\x65\x74\40\x41\143\x63\145\163\x73\40\113\x65\x79"]); goto c4db6; c7c07: $builder->add("\146\162\x65\x71\165\145\156\143\171", ChoiceType::class, ["\x72\145\161\165\151\162\x65\x64" => true, "\141\164\164\162" => ["\x63\154\141\x73\163" => "\146\x6f\162\x6d\x2d\x73\145\x6c\x65\x63\164\40\146\157\162\x6d\55\163\x65\154\145\143\x74\x2d\154\x67"], "\x6c\x61\x62\145\154" => "\106\x72\x65\161\165\x65\156\143\x79", "\143\150\157\151\x63\145\163" => $frequencyChoices]); goto c22cd; d745f: $excludesPlaceholder = ["\57\150\x6f\155\145\x2f\x73\x69\x74\x65\x2d\165\x73\x65\x72\57\150\x74\144\x6f\143\x73\x2f\144\157\x6d\141\x69\156\56\143\157\155\x2f\x63\141\x63\150\145\x2f", "\x2f\x68\157\x6d\145\x2f\163\151\x74\145\55\165\163\145\162\57\x68\164\x64\x6f\143\x73\57\144\x6f\155\x61\151\156\x2e\143\157\x6d\57\146\x69\x6c\145\56\164\x78\x74"]; goto eabff; A2789: $retentionPeriodChoices = ["\x33" => 3, "\67" => 7, "\x31\x34" => 14, "\62\61" => 21, "\63\60" => 30]; goto Fdd52; Fdd52: $builder->add("\x72\x65\x74\x65\156\x74\151\x6f\156\x50\x65\x72\151\x6f\x64", ChoiceType::class, ["\162\145\161\165\151\162\x65\x64" => true, "\x61\164\x74\162" => ["\143\x6c\141\x73\x73" => "\x66\157\162\155\x2d\163\145\154\145\x63\164\40\146\157\162\x6d\x2d\163\145\x6c\x65\143\164\x2d\154\147"], "\154\x61\x62\145\x6c" => "\x52\145\x74\x65\x6e\164\x69\157\156\x20\x50\x65\x72\151\157\x64\x20\50\104\141\171\163\x29", "\143\150\157\x69\x63\145\x73" => $retentionPeriodChoices, "\x64\x61\164\141" => 7]); goto d745f; A734d: foreach (range(0, 23) as $number) { goto D0f72; fe46a: de285: goto A6021; D0f72: $timeFormatted = sprintf("\x25\163\72\x30\x30", $number < 10 ? sprintf("\x30\x25\x73", $number) : $number); goto Bfab8; Bfab8: $timeChoices[$timeFormatted] = $number; goto fe46a; A6021: } goto A6ec4; Af129: a9fca: goto ad6a4; F6dae: $regions = AwsRegions::getRegions(); goto cd53a; Fd37b: foreach ($regions as $region => $name) { $regionChoices[$name] = $region; a221b: } goto Af129; e2431: $frequencyChoices = ["\x44\x61\151\x6c\171" => Frequency::DAILY, "\105\x76\145\162\171\40\124\x68\162\145\145\40\x48\x6f\x75\x72\x73" => Frequency::EVERY_THREE_HOURS, "\x45\166\145\162\x79\40\123\151\x78\x20\x48\157\165\162\163" => Frequency::EVERY_SIX_HOURS, "\x45\x76\145\162\x79\40\124\167\145\154\x76\145\x20\x48\157\x75\162\163" => Frequency::EVERY_TWELVE_HOURS]; goto c7c07; eabff: $builder->add("\x65\x78\143\154\165\144\x65\163", TextareaType::class, ["\x72\x65\x71\165\151\162\145\x64" => false, "\x61\x74\x74\162" => ["\143\154\x61\163\163" => "\x66\x6f\162\155\x2d\x63\157\156\164\x72\x6f\154\x20\x66\x6f\x72\155\55\143\157\156\164\162\157\x6c\55\x6c\x67", "\162\x6f\x77\163" => 5, "\x70\154\141\143\x65\150\157\154\x64\145\x72" => implode(PHP_EOL, $excludesPlaceholder)], "\x6c\141\x62\x65\x6c" => "\x45\x78\143\x6c\165\x64\145\x73", "\143\157\x6e\x73\164\162\x61\151\x6e\164\x73" => [new AppAssert\RemoteBackupExcludes()]]); goto d33c1; c4db6: $builder->add("\142\165\143\153\145\164", TextType::class, ["\x72\145\161\165\x69\x72\145\144" => true, "\x61\164\164\162" => ["\143\x6c\x61\163\163" => "\x66\157\162\155\55\x63\x6f\x6e\164\x72\x6f\x6c\40\146\157\x72\x6d\x2d\143\157\x6e\164\x72\157\154\55\154\x67", "\160\x6c\x61\x63\x65\x68\157\x6c\144\x65\162" => "\102\165\143\153\145\x74\x20\x4e\x61\x6d\145"], "\x6c\141\142\x65\x6c" => "\x42\165\143\x6b\x65\164", "\x63\x6f\156\x73\x74\x72\141\x69\x6e\x74\163" => [new AppAssert\AmazonS3Bucket()]]); goto F6dae; d33c1: } public function getName() : string { return "\143\154\x70\x5f\141\144\155\x69\x6e\x5f\x72\x65\155\x6f\164\x65\137\x62\141\143\153\165\160\137\141\x6d\141\x7a\157\156\x5f\163\63"; } }
