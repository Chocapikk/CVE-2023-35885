<?php
 namespace App\Form; use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\Form\Extension\Core\Type\ChoiceType; use Symfony\Component\Form\Extension\Core\Type\CheckboxType; use Symfony\Component\Form\Extension\Core\Type\TextType; use Symfony\Component\Form\Extension\Core\Type\TextareaType; use App\Validator\Constraints as AppAssert; use App\Backup\Frequency; use App\Aws\Regions as AwsRegions; class AdminRemoteBackupAmazonS3EditType extends AbstractType { public function buildForm(FormBuilderInterface $builder, array $options) : void { goto b0048; fd608: Dcfe0: goto ff4ea; Ded28: $regions = AwsRegions::getRegions(); goto Ba5e3; e0eb6: $builder->add("\163\145\x63\162\x65\164\x41\x63\143\x65\163\163\113\x65\x79", TextType::class, ["\x72\145\x71\x75\x69\162\145\144" => false, "\141\x74\164\x72" => ["\x63\x6c\141\163\x73" => "\146\157\162\155\55\143\x6f\x6e\x74\162\x6f\x6c\40\146\x6f\x72\155\x2d\143\x6f\156\164\x72\x6f\x6c\55\x6c\147"], "\154\141\142\x65\154" => "\101\127\123\40\123\145\143\162\145\164\x20\101\x63\143\145\x73\x73\x20\x4b\x65\x79"]); goto db62e; c2a16: $frequencyChoices = ["\x44\x61\151\154\171" => Frequency::DAILY, "\x45\166\x65\x72\x79\40\124\150\162\145\145\40\110\x6f\165\162\163" => Frequency::EVERY_THREE_HOURS, "\105\166\x65\x72\171\x20\x53\151\170\x20\110\157\165\162\163" => Frequency::EVERY_SIX_HOURS, "\105\x76\145\x72\171\x20\x54\x77\145\154\166\145\x20\x48\157\x75\x72\x73" => Frequency::EVERY_TWELVE_HOURS]; goto Fb82e; ff4ea: $builder->add("\162\x65\147\x69\x6f\x6e", ChoiceType::class, ["\162\145\x71\x75\x69\162\145\x64" => true, "\141\x74\164\162" => ["\143\154\x61\x73\x73" => "\146\157\x72\x6d\55\163\x65\154\x65\x63\164\40\x66\x6f\162\155\55\163\145\154\145\x63\164\x2d\154\147"], "\154\141\142\145\154" => "\x52\145\147\151\x6f\156", "\x63\150\157\151\x63\145\x73" => $regionChoices]); goto F33e5; df0c1: $builder->add("\145\170\x65\143\165\164\151\x6f\x6e\x54\x69\x6d\145", ChoiceType::class, ["\x72\x65\x71\x75\x69\x72\145\x64" => false, "\x61\164\164\162" => ["\143\154\141\x73\163" => "\x66\157\x72\x6d\x2d\x73\x65\154\x65\x63\x74\40\146\157\x72\x6d\x2d\x73\145\x6c\145\143\x74\x2d\154\x67"], "\154\141\142\145\154" => "\x54\x69\155\x65", "\160\154\x61\143\145\x68\x6f\x6c\144\x65\x72" => false, "\x63\x68\157\151\x63\x65\163" => $timeChoices]); goto b3a19; E6e9d: foreach (range(0, 23) as $number) { goto f491c; a09ce: $timeChoices[$timeFormatted] = $number; goto a9c24; a9c24: a56e7: goto Db628; f491c: $timeFormatted = sprintf("\45\163\72\x30\x30", $number < 10 ? sprintf("\x30\x25\163", $number) : $number); goto a09ce; Db628: } goto F519a; db62e: $builder->add("\x62\165\x63\153\145\x74", TextType::class, ["\162\x65\x71\165\151\162\145\144" => true, "\141\164\164\x72" => ["\x63\154\x61\x73\163" => "\146\x6f\162\x6d\55\143\x6f\156\164\162\157\x6c\40\146\x6f\x72\155\x2d\143\x6f\x6e\x74\x72\157\x6c\x2d\x6c\x67"], "\154\x61\x62\145\x6c" => "\102\165\x63\x6b\145\x74", "\143\x6f\156\x73\164\162\x61\151\156\x74\x73" => [new AppAssert\AmazonS3Bucket()]]); goto Ded28; F33e5: $builder->add("\x73\164\157\162\x61\147\145\x44\x69\162\145\x63\x74\x6f\162\x79", TextType::class, ["\162\145\161\x75\x69\162\145\x64" => true, "\141\164\164\162" => ["\143\x6c\x61\163\x73" => "\x66\x6f\x72\155\55\143\x6f\156\x74\162\157\x6c\x20\x66\x6f\162\x6d\x2d\143\x6f\156\164\x72\157\154\55\x6c\x67"], "\x6c\x61\142\145\154" => "\x53\164\x6f\162\x61\147\145\40\104\x69\162\145\x63\x74\x6f\162\171"]); goto dec65; dec65: $retentionPeriodChoices = ["\63" => 3, "\67" => 7, "\61\x34" => 14, "\62\61" => 21, "\63\60" => 30]; goto d05b0; b0048: $builder->add("\x65\156\141\142\154\145\122\x65\155\157\x74\x65\x42\141\143\x6b\165\x70", CheckboxType::class, ["\162\145\x71\x75\x69\162\145\x64" => false, "\x61\164\x74\162" => ["\143\154\141\163\163" => "\x66\157\x72\x6d\55\x63\150\145\x63\x6b\x2d\x69\x6e\160\x75\x74"], "\154\141\142\x65\154" => "\x45\156\141\142\154\x65\x20\x52\x65\x6d\x6f\164\x65\40\102\x61\143\153\x75\x70"]); goto c2a16; b3a19: $builder->add("\x61\143\143\145\x73\x73\113\x65\171", TextType::class, ["\162\145\x71\x75\151\x72\x65\144" => true, "\141\x74\x74\162" => ["\143\x6c\141\x73\x73" => "\x66\157\162\155\x2d\143\157\156\164\162\157\154\x20\x66\157\x72\x6d\55\143\157\x6e\x74\162\157\x6c\55\x6c\147", "\160\154\141\x63\x65\x68\x6f\154\144\x65\162" => "\x41\113\x49\x41\x4a\x50\x58\x31\122\110\110\126\x59\127\x51\64\x35\x4e\x53\101\x38\x37"], "\154\x61\142\x65\154" => "\x41\x57\x53\x20\x41\x63\143\145\163\x73\x20\113\x65\171", "\x63\157\x6e\x73\164\162\141\151\x6e\164\x73" => [new AppAssert\AmazonS3Credentials()]]); goto e0eb6; a1906: $builder->add("\x65\x78\x63\154\165\144\145\163", TextareaType::class, ["\x72\145\x71\165\x69\x72\145\144" => false, "\141\x74\x74\162" => ["\143\154\141\163\x73" => "\x66\x6f\x72\x6d\x2d\x63\x6f\x6e\x74\162\x6f\154\x20\x66\x6f\162\x6d\x2d\143\x6f\156\164\x72\x6f\154\55\x6c\x67", "\162\x6f\x77\x73" => 5, "\x70\154\141\x63\145\x68\157\154\144\145\x72" => implode(PHP_EOL, $excludesPlaceholder)], "\154\x61\142\x65\x6c" => "\x45\x78\x63\x6c\x75\x64\145\x73", "\143\x6f\156\x73\164\162\141\x69\156\164\x73" => [new AppAssert\RemoteBackupExcludes()]]); goto Af26c; Fb82e: $builder->add("\146\x72\145\x71\x75\x65\156\x63\x79", ChoiceType::class, ["\x72\145\x71\x75\151\162\x65\x64" => true, "\141\x74\x74\x72" => ["\x63\x6c\141\x73\x73" => "\x66\x6f\x72\x6d\55\163\x65\x6c\145\x63\x74\x20\146\157\x72\x6d\x2d\163\x65\154\145\x63\x74\x2d\x6c\x67"], "\x6c\x61\142\145\154" => "\106\162\145\x71\x75\145\156\143\171", "\x63\150\x6f\x69\143\x65\x73" => $frequencyChoices]); goto E134c; Ba5e3: $regionChoices = []; goto c931e; E134c: $timeChoices = []; goto E6e9d; F519a: cfc36: goto df0c1; c1614: $excludesPlaceholder = ["\57\150\157\155\x65\x2f\163\x69\x74\145\x2d\165\x73\x65\162\57\x68\164\144\157\x63\163\x2f\144\157\x6d\x61\x69\156\x2e\x63\157\155\x2f\x63\141\143\150\x65\57", "\x2f\150\x6f\x6d\145\x2f\x73\x69\x74\x65\x2d\x75\163\145\x72\x2f\x68\164\x64\157\143\x73\x2f\144\x6f\x6d\x61\x69\156\x2e\143\x6f\x6d\x2f\146\x69\x6c\145\x2e\x74\170\x74"]; goto a1906; c931e: foreach ($regions as $region => $name) { $regionChoices[$name] = $region; B640c: } goto fd608; d05b0: $builder->add("\162\145\x74\145\156\x74\x69\x6f\x6e\120\x65\162\x69\x6f\x64", ChoiceType::class, ["\x72\145\161\x75\x69\x72\145\144" => true, "\x61\164\x74\x72" => ["\143\154\141\x73\x73" => "\x66\x6f\162\155\x2d\163\x65\154\x65\143\x74\x20\146\x6f\162\155\55\x73\x65\154\145\x63\x74\x2d\154\147"], "\154\x61\x62\x65\x6c" => "\x52\x65\164\145\156\164\x69\x6f\156\40\x50\x65\162\x69\x6f\144\x20\50\x44\x61\171\x73\x29", "\143\x68\x6f\x69\x63\x65\x73" => $retentionPeriodChoices]); goto c1614; Af26c: } public function getName() : string { return "\x63\154\x70\x5f\141\x64\155\151\156\137\162\145\x6d\x6f\164\x65\137\142\x61\143\153\x75\x70\137\x61\x6d\x61\x7a\157\156\137\x73\63"; } }
