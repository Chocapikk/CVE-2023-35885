<?php
 namespace App\Form; use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\Form\FormEvents; use Symfony\Component\Form\FormEvent; use Symfony\Component\Form\Extension\Core\Type\TextType; use Symfony\Component\Form\Extension\Core\Type\ChoiceType; use Symfony\Component\Validator\Constraints as Assert; use App\Validator\Constraints as AppAssert; class SiteNewNodejsType extends AbstractType { public function buildForm(FormBuilderInterface $builder, array $options) : void { goto F6954; ca562: $nodejsVersionChoices = ["\x4e\x6f\144\x65\40\61\x38\40\114\x54\x53" => 18, "\116\x6f\x64\145\40\61\x36\x20\114\124\123" => 16, "\x4e\x6f\x64\x65\x20\x31\64\40\114\x54\123" => 14, "\x4e\x6f\144\x65\40\61\x32\40\114\x54\123" => 12]; goto E91b9; F9143: $builder->addEventListener(FormEvents::PRE_SUBMIT, function (FormEvent $event) { goto d8e0b; d8e0b: $data = $event->getData(); goto Dab89; Dab89: $data["\x64\x6f\x6d\x61\151\x6e\x4e\141\155\145"] = true === isset($data["\x64\x6f\155\141\x69\156\x4e\141\155\x65"]) ? strtolower($data["\x64\157\155\x61\x69\x6e\116\x61\x6d\x65"]) : ''; goto D6bdc; E3393: $event->setData($data); goto c7dd3; D6bdc: $data["\x73\x69\164\145\125\163\145\162"] = true === isset($data["\163\151\164\145\x55\x73\145\162"]) ? strtolower($data["\163\x69\x74\x65\125\x73\145\x72"]) : ''; goto E3393; c7dd3: }); goto E7fa7; de7f6: $builder->add("\160\x6f\162\164", TextType::class, ["\x72\x65\x71\165\151\162\145\x64" => true, "\141\x74\164\162" => ["\143\154\x61\x73\x73" => "\x66\157\x72\155\x2d\143\x6f\x6e\164\x72\157\154\x20\146\x6f\x72\x6d\55\143\x6f\x6e\164\x72\157\x6c\55\154\x67"], "\154\x61\x62\x65\x6c" => "\101\160\160\40\120\x6f\x72\x74"]); goto db92b; db92b: $builder->add("\163\x69\164\x65\125\x73\145\162", TextType::class, ["\x72\x65\x71\x75\x69\x72\x65\x64" => true, "\x6d\141\x70\160\x65\144" => false, "\x61\164\164\162" => ["\143\x6c\141\163\x73" => "\x66\157\x72\x6d\55\x63\x6f\x6e\x74\x72\157\x6c\x20\x66\157\x72\155\x2d\x63\x6f\x6e\164\x72\157\154\55\x6c\x67", "\x70\154\x61\x63\x65\150\157\154\144\145\x72" => "\x73\x69\164\145\55\x75\163\145\162"], "\154\141\142\145\x6c" => "\123\x69\164\145\x20\125\x73\x65\x72", "\x63\x6f\x6e\x73\164\x72\x61\151\x6e\164\163" => [new Assert\NotBlank(), new Assert\Regex("\57\x5e\x5b\x61\55\x7a\x5d\133\55\x61\x2d\x7a\60\x2d\71\137\135\x2b\44\x2f\x69\165"), new Assert\Length(["\155\151\156" => 3, "\x6d\x61\x78" => 32]), new AppAssert\UniqueSystemUser()]]); goto C5f36; F6954: $builder->add("\x64\157\x6d\x61\151\156\x4e\141\155\x65", TextType::class, ["\x72\145\x71\165\151\x72\x65\144" => true, "\155\141\160\160\x65\x64" => false, "\x61\x74\x74\162" => ["\x63\154\x61\163\x73" => "\146\x6f\162\x6d\x2d\143\x6f\156\x74\x72\x6f\x6c\40\x66\157\162\x6d\x2d\x63\x6f\x6e\x74\162\157\154\55\x6c\147", "\160\x6c\141\x63\145\150\157\154\x64\x65\x72" => "\167\167\167\56\144\157\155\x61\x69\156\x2e\x63\157\x6d"], "\154\141\142\145\154" => "\x44\157\155\141\x69\x6e\x20\116\x61\155\x65", "\143\x6f\x6e\163\164\x72\x61\x69\156\164\x73" => [new Assert\NotBlank(), new AppAssert\DomainName(), new AppAssert\UniqueDomainName()]]); goto ca562; C5f36: $builder->add("\163\x69\164\x65\x55\163\145\x72\120\x61\163\163\x77\157\x72\144", TextType::class, ["\x72\145\161\165\151\162\x65\144" => true, "\155\x61\x70\160\145\x64" => false, "\141\x74\x74\162" => ["\x63\154\x61\x73\x73" => "\146\x6f\x72\155\x2d\x63\157\x6e\x74\x72\x6f\x6c\40\146\157\x72\x6d\55\x63\157\156\164\x72\x6f\x6c\55\154\147"], "\154\141\142\145\154" => "\x53\151\164\x65\40\125\163\x65\x72\40\120\x61\x73\x73\167\157\x72\x64", "\143\157\x6e\163\x74\162\x61\151\x6e\x74\163" => [new Assert\NotBlank(), new Assert\Length(["\x6d\x69\x6e" => 8, "\x6d\x61\x78" => 200])]]); goto F9143; E91b9: $builder->add("\x6e\x6f\x64\145\152\163\126\x65\162\x73\x69\x6f\156", ChoiceType::class, ["\x72\145\161\x75\x69\162\x65\x64" => true, "\141\x74\164\x72" => ["\x63\x6c\x61\x73\163" => "\146\x6f\162\155\55\x73\145\x6c\x65\x63\164\40\146\x6f\x72\x6d\55\163\145\154\145\143\164\x2d\x6c\147"], "\x6c\141\142\x65\x6c" => "\x4e\x6f\144\145\x2e\x6a\x73\40\126\x65\x72\163\x69\157\x6e", "\x63\150\x6f\151\x63\x65\163" => $nodejsVersionChoices]); goto de7f6; E7fa7: } public function getName() : string { return "\143\x6c\x70\137\163\x69\x74\145\137\x6e\x65\x77\x5f\156\157\x64\x65\152\x73"; } }
