<?php
 namespace App\Form; use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\Extension\Core\Type\TextareaType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\Form\Extension\Core\Type\TextType; use Symfony\Component\Form\FormEvent; use Symfony\Component\Form\FormEvents; use Symfony\Component\Validator\Constraints as Assert; class SiteSshUserType extends AbstractType { public function buildForm(FormBuilderInterface $builder, array $options) : void { goto f5e90; f5e90: $builder->add("\x75\163\145\x72\116\x61\155\x65", TextType::class, ["\x72\x65\x71\x75\151\x72\x65\144" => true, "\x6d\x61\160\x70\145\144" => true, "\141\164\164\x72" => ["\x63\154\141\x73\x73" => "\146\x6f\x72\155\55\x63\x6f\156\x74\x72\x6f\x6c\40\x66\157\162\155\55\x63\x6f\x6e\x74\x72\157\x6c\55\154\147", "\160\154\x61\143\x65\150\157\x6c\144\145\x72" => "\x6a\157\150\156\x2d\x73\x73\150"], "\x6c\x61\x62\145\154" => "\125\163\x65\x72\x20\x4e\x61\x6d\x65"]); goto e441d; B5229: $builder->add("\x73\163\150\x4b\x65\171\x73", TextareaType::class, ["\162\145\x71\x75\151\x72\x65\144" => false, "\141\x74\164\162" => ["\143\154\141\163\163" => "\x66\157\x72\x6d\55\x63\157\x6e\164\162\x6f\154\40\146\x6f\x72\x6d\x2d\143\x6f\156\x74\x72\x6f\x6c\55\x6c\147", "\x72\x6f\x77\163" => 5], "\x6c\141\x62\x65\154" => "\x53\123\x48\x20\113\x65\171\x73"]); goto Dd26b; e441d: $builder->add("\160\141\163\x73\x77\157\162\x64", TextType::class, ["\162\x65\x71\x75\151\162\145\144" => true, "\155\141\160\x70\145\144" => false, "\x61\x74\164\x72" => ["\143\154\x61\163\163" => "\146\157\162\x6d\x2d\143\x6f\x6e\x74\162\157\x6c\x20\x66\x6f\x72\155\55\x63\157\x6e\164\162\x6f\154\x2d\154\147"], "\154\141\142\145\x6c" => "\120\141\x73\163\167\x6f\162\x64", "\143\x6f\156\x73\164\162\x61\x69\x6e\164\163" => [new Assert\NotBlank(), new Assert\Length(["\155\x69\156" => 8]), new Assert\Length(["\x6d\x61\x78" => 40])]]); goto B5229; Dd26b: $builder->addEventListener(FormEvents::PRE_SUBMIT, function (FormEvent $event) { goto ab0ee; ab0ee: $data = $event->getData(); goto a9198; a9198: $data["\165\163\x65\162\x4e\x61\x6d\145"] = true === isset($data["\x75\163\145\162\116\141\155\145"]) ? strtolower($data["\x75\163\x65\162\116\x61\x6d\145"]) : ''; goto F4c9f; F4c9f: $event->setData($data); goto b4f5c; b4f5c: }); goto A899b; A899b: } public function getName() : string { return "\x63\x6c\x70\x5f\x73\151\x74\x65\x5f\x73\x73\150\x5f\x75\x73\145\162"; } }
