<?php
 namespace App\Form; use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; use Symfony\Component\Form\FormEvents; use Symfony\Component\Form\FormEvent; use Symfony\Component\Form\Extension\Core\Type\ChoiceType; use Symfony\Component\Form\Extension\Core\Type\TextType; use Symfony\Component\Validator\Constraints as Assert; use Doctrine\ORM\EntityManagerInterface; use App\Repository\VhostTemplateRepository as VhostTemplateEntityRepository; use App\Entity\VhostTemplate as VhostTemplateEntity; use App\Validator\Constraints as AppAssert; class SiteNewPhpType extends AbstractType { private const IGNORED_TEMPLATES = ["\x6e\x6f\x64\145\x6a\163", "\147\145\x6e\145\162\x69\143", "\160\171\164\150\157\156", "\x72\x65\166\x65\162\x73\x65\x70\162\x6f\170\171", "\x73\164\141\164\x69\x63"]; private const PHP_DIRECTORY = "\x2f\145\x74\143\x2f\x70\150\160\x2f"; private VhostTemplateEntityRepository $vhostTemplateEntityRepository; public function __construct(EntityManagerInterface $entityManager) { $this->vhostTemplateEntityRepository = $entityManager->getRepository(VhostTemplateEntity::class); } public function buildForm(FormBuilderInterface $builder, array $options) : void { goto a1ca3; F2b76: $builder->add("\163\151\x74\145\125\x73\x65\162\x50\141\x73\163\x77\157\x72\x64", TextType::class, ["\x72\145\161\165\151\x72\145\x64" => true, "\141\164\x74\162" => ["\x63\154\x61\163\x73" => "\146\157\162\155\x2d\x63\157\x6e\x74\x72\157\x6c\40\x66\x6f\x72\155\x2d\x63\157\x6e\x74\x72\x6f\x6c\55\154\x67"], "\x6c\141\x62\145\154" => "\x53\151\x74\145\x20\125\x73\x65\x72\x20\x50\x61\163\x73\167\x6f\162\x64", "\x63\157\x6e\163\x74\162\141\x69\156\x74\163" => [new Assert\NotBlank(), new Assert\Length(["\155\151\x6e" => 8, "\155\141\170" => 200])]]); goto d276c; F4962: $builder->add("\x64\157\155\x61\151\x6e\x4e\x61\x6d\x65", TextType::class, ["\162\145\161\x75\x69\x72\145\x64" => true, "\141\x74\x74\x72" => ["\x63\x6c\x61\163\163" => "\x66\157\162\155\x2d\143\x6f\x6e\x74\x72\157\154\40\x66\x6f\162\x6d\55\143\157\156\x74\162\157\x6c\55\x6c\x67", "\x70\154\141\x63\145\150\x6f\154\x64\145\162" => "\x77\x77\167\56\x64\x6f\x6d\x61\151\156\56\x63\157\x6d"], "\154\x61\x62\145\x6c" => "\x44\x6f\x6d\x61\x69\x6e\40\x4e\x61\x6d\145", "\x63\x6f\156\x73\164\x72\x61\x69\156\164\163" => [new Assert\NotBlank(), new AppAssert\DomainName(), new AppAssert\UniqueDomainName()]]); goto Fc005; cfc26: $applicationChoices = ["\x47\145\x6e\x65\x72\151\143" => "\x47\145\x6e\x65\x72\151\143"]; goto d2fd9; A2e97: foreach ($vhostTemplateEntities as $vhostTemplateEntity) { goto A292d; D2ad9: Bf27e: goto Bbb83; be83b: $applicationAttributes[$name] = ["\x64\x61\x74\x61\55\x70\150\160\55\x76\x65\162\163\x69\157\156" => $phpVersion]; goto E633a; d1e58: if (!(false === empty($name) && false === in_array(strtolower($name), self::IGNORED_TEMPLATES))) { goto F9b7f; } goto B1a52; A292d: $name = $vhostTemplateEntity->getName(); goto Efde9; Efde9: $phpVersion = $vhostTemplateEntity->getPhpVersion(); goto d1e58; B1a52: $applicationChoices[$name] = $name; goto be83b; E633a: F9b7f: goto D2ad9; Bbb83: } goto F514d; df8ff: $builder->add("\x73\x69\x74\x65\125\163\145\162", TextType::class, ["\162\145\x71\x75\x69\162\145\144" => true, "\141\x74\x74\162" => ["\143\x6c\141\x73\163" => "\146\x6f\x72\x6d\55\x63\157\x6e\x74\162\x6f\x6c\40\x66\157\x72\155\x2d\143\157\x6e\x74\162\157\154\55\154\147", "\x70\154\141\x63\x65\150\157\154\x64\x65\x72" => "\163\x69\164\x65\x2d\x75\x73\145\x72"], "\x6c\141\x62\x65\x6c" => "\x53\151\164\x65\x20\125\x73\x65\x72", "\143\x6f\x6e\x73\164\x72\x61\x69\x6e\164\163" => [new Assert\NotBlank(), new Assert\Regex("\57\136\x5b\x61\55\x7a\135\x5b\x2d\141\x2d\x7a\60\55\x39\137\x5d\53\x24\x2f\x69\165"), new Assert\Length(["\x6d\151\x6e" => 3, "\x6d\141\170" => 32]), new AppAssert\UniqueSystemUser()]]); goto F2b76; d2fd9: $applicationAttributes = []; goto A2e97; C000c: $builder->add("\x70\150\x70\x56\145\x72\x73\151\x6f\156", ChoiceType::class, ["\162\x65\x71\165\x69\162\145\144" => true, "\x61\x74\164\162" => ["\x63\154\141\x73\163" => "\x66\157\162\155\55\x73\x65\154\x65\x63\164\x20\146\157\x72\x6d\55\163\145\x6c\x65\x63\x74\55\154\x67"], "\x6c\141\142\145\154" => "\x50\110\120\x20\x56\145\162\x73\151\x6f\156", "\143\150\x6f\x69\143\145\x73" => $phpVersionChoices]); goto df8ff; d276c: $builder->addEventListener(FormEvents::PRE_SUBMIT, function (FormEvent $event) { goto fd439; d0613: $data["\144\157\155\x61\x69\156\x4e\141\x6d\x65"] = true === isset($data["\144\x6f\x6d\141\151\156\116\x61\155\x65"]) ? strtolower($data["\x64\157\155\x61\x69\x6e\x4e\x61\x6d\x65"]) : ''; goto Dc242; D4a2c: $event->setData($data); goto D3fab; fd439: $data = $event->getData(); goto d0613; Dc242: $data["\163\151\164\x65\125\163\x65\162"] = true === isset($data["\163\151\164\x65\125\x73\x65\162"]) ? strtolower($data["\163\x69\164\x65\125\163\x65\x72"]) : ''; goto D4a2c; D3fab: }); goto Fefe0; a1ca3: $vhostTemplateEntities = $this->vhostTemplateEntityRepository->findBy([], ["\x6e\141\155\145" => "\101\x53\x43"]); goto cfc26; F514d: d6600: goto C1ce9; Fc005: $phpVersionChoices = $this->getPhpVersionChoices(); goto C000c; C1ce9: $builder->add("\x61\x70\x70\x6c\x69\x63\141\164\x69\157\x6e", ChoiceType::class, ["\162\145\161\165\x69\162\x65\x64" => true, "\x6d\141\160\x70\145\144" => false, "\x61\164\164\162" => ["\x63\154\141\x73\x73" => "\146\x6f\x72\155\x2d\x73\145\x6c\145\x63\164\40\x66\x6f\162\x6d\x2d\x73\x65\x6c\x65\143\164\55\154\147"], "\154\141\x62\x65\154" => "\101\x70\160\x6c\151\x63\x61\164\x69\157\156", "\x63\150\157\x69\x63\145\x73" => $applicationChoices, "\x63\150\157\x69\x63\x65\x5f\141\164\164\x72" => $applicationAttributes, "\x64\x61\x74\141" => "\107\145\x6e\145\x72\x69\143"]); goto F4962; Fefe0: } private function getPhpVersionChoices() : array { goto f6015; fc943: A8517: goto B3a04; B3a04: arsort($phpVersionChoices); goto E4ab9; dffcc: foreach (new \DirectoryIterator(self::PHP_DIRECTORY) as $fileInfo) { goto B4749; A2f3c: $phpVersionChoices[sprintf("\120\110\x50\x20\45\x73", $phpVersion)] = $phpVersion; goto b77c1; B4749: if (!(false === $fileInfo->isDot())) { goto B932c; } goto D5616; ff09e: if (!(true === is_float($phpVersion + 0))) { goto C9f09; } goto A2f3c; E0f1f: C319c: goto a81fa; b77c1: C9f09: goto d0dfe; d0dfe: B932c: goto E0f1f; D5616: $phpVersion = $fileInfo->getBasename(); goto ff09e; a81fa: } goto fc943; f6015: $phpVersionChoices = []; goto dffcc; E4ab9: return $phpVersionChoices; goto Efb9f; Efb9f: } public function getName() : string { return "\143\x6c\160\x5f\x73\151\164\x65\137\156\145\x77\x5f\x70\150\x70"; } }
