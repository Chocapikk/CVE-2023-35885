<?php
 namespace App\Site\Ssl; class ParsedCertificate { private Certificate $source; private array $subject = []; private array $issuers = []; private ?bool $isSelfSigned = true; private ?\DateTime $validFrom = null; private ?\DateTime $validTo = null; private ?string $serialNumber = null; private array $subjectAlternativeNames = []; public function __construct(Certificate $source, $subject = [], $issuers = [], $isSelfSigned = true, \DateTime $validFrom = null, \DateTime $validTo = null, $serialNumber = null, array $subjectAlternativeNames = []) { goto af9ff; c21dc: $this->subject = $subject; goto c27d6; af9ff: $this->source = $source; goto c21dc; Bfd52: $this->isSelfSigned = $isSelfSigned; goto c89cd; ccac0: $this->serialNumber = $serialNumber; goto eb375; eb375: $this->subjectAlternativeNames = $subjectAlternativeNames; goto c9bd2; c27d6: $this->issuers = $issuers; goto Bfd52; f6f30: $this->validTo = $validTo; goto ccac0; c89cd: $this->validFrom = $validFrom; goto f6f30; c9bd2: } public function getSource() : Certificate { return $this->source; } public function getSubject() : array { return $this->subject; } public function getIssuers() : array { return $this->issuers; } public function getIssuerList() : string { goto a99e2; c6d26: foreach ($issuers as $key => $value) { $issuerParts[] = sprintf("\x2f\45\x73\75\x25\163", $key, $value); Befd7: } goto D7dd1; a99e2: $issuerParts = []; goto C1e6a; D7dd1: caf5d: goto E1232; E6a25: return $issuerList; goto F78e0; E1232: $issuerList = implode("\x2c", $issuerParts); goto E6a25; C1e6a: $issuers = $this->getIssuers(); goto c6d26; F78e0: } public function getSubjectList() : string { goto c3ef7; A7b87: foreach ($subjects as $key => $value) { goto Be7ee; aa6ad: $subjectParts[] = sprintf("\57\45\x73\x3d\x25\x73", $key, $value); goto d09ab; d09ab: D13c7: goto e5c41; Be7ee: if (!(true === is_array($value))) { goto E8ede; } goto C4960; C4960: $value = implode("\xa", $value); goto B6f7a; B6f7a: E8ede: goto aa6ad; e5c41: } goto b19db; f0024: $subjectList = implode("\54", $subjectParts); goto Edf63; c3ef7: $subjectParts = []; goto Dc06f; Dc06f: $subjects = $this->getSubject(); goto A7b87; b19db: e5ffa: goto f0024; Edf63: return $subjectList; goto adaac; adaac: } public function isSelfSigned() : ?bool { return $this->isSelfSigned; } public function getValidFrom() : ?\DateTime { return $this->validFrom; } public function getValidTo() : ?\DateTime { return $this->validTo; } public function isExpired() : bool { return $this->validTo < new \DateTime(); } public function getSerialNumber() : ?string { return $this->serialNumber; } public function getSubjectAlternativeNames() : array { return $this->subjectAlternativeNames; } }
