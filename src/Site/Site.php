<?php
 namespace App\Site; use Doctrine\Common\Collections\Collection; use App\Entity\BasicAuth; use App\Entity\Certificate; abstract class Site { protected string $user; protected string $userPassword; protected string $type; protected string $domainName; protected string $registrableDomain; protected ?string $subdomain = null; protected ?string $rootDirectory = null; protected ?BasicAuth $basicAuth = null; protected ?Collection $blockedBots = null; protected ?Collection $blockedIps = null; protected ?Collection $databases = null; protected ?Certificate $certificate = null; protected ?Collection $certificates = null; protected ?Collection $cronJobs = null; protected ?Collection $ftpUsers = null; protected ?Collection $sshUsers = null; protected ?bool $pageSpeedEnabled = false; protected ?string $pageSpeedSettings = null; protected ?bool $allowTrafficFromCloudflareOnly = false; protected ?string $sshKeys = null; protected ?string $vhostTemplate = null; public function getUser() : ?string { return $this->user; } public function setUser(string $user) : void { $this->user = $user; } public function getUserPassword() : string { return $this->userPassword; } public function setUserPassword(string $userPassword) : void { $this->userPassword = $userPassword; } public function getType() : ?string { return $this->type; } public function getDomainName() : string { return $this->domainName; } public function setDomainName(string $domainName) : void { $this->domainName = $domainName; } public function getRegistrableDomain() : string { return $this->registrableDomain; } public function setRegistrableDomain(string $registrableDomain) : void { $this->registrableDomain = $registrableDomain; } public function getSubdomain() : ?string { return $this->subdomain; } public function setSubdomain(?string $subdomain) : void { $this->subdomain = $subdomain; } public function getRootDirectory() : ?string { return $this->rootDirectory; } public function setRootDirectory(string $rootDirectory) : void { $this->rootDirectory = $rootDirectory; } public function getBasicAuth() : ?BasicAuth { return $this->basicAuth; } public function setBasicAuth(?BasicAuth $basicAuth) : void { $this->basicAuth = $basicAuth; } public function setBlockedBots(Collection $blockedBots) : void { $this->blockedBots = $blockedBots; } public function getBlockedBots() : ?Collection { return $this->blockedBots; } public function setBlockedIps(Collection $blockedIps) : void { $this->blockedIps = $blockedIps; } public function getBlockedIps() : ?Collection { return $this->blockedIps; } public function setDatabases(Collection $databases) : void { $this->databases = $databases; } public function getDatabases() : ?Collection { return $this->databases; } public function setCertificate(Certificate $certificate) : void { $this->certificate = $certificate; } public function getCertificate() : ?Certificate { return $this->certificate; } public function setCertificates(Collection $certificates) : void { $this->certificates = $certificates; } public function getCertificates() : ?Collection { return $this->certificates; } public function setCronJobs(Collection $cronJobs) : void { $this->cronJobs = $cronJobs; } public function getCronJobs() : ?Collection { return $this->cronJobs; } public function setFtpUsers(Collection $ftpUsers) : void { $this->ftpUsers = $ftpUsers; } public function getFtpUsers() : ?Collection { return $this->ftpUsers; } public function setSshUsers(Collection $sshUsers) : void { $this->sshUsers = $sshUsers; } public function getSshUsers() : ?Collection { return $this->sshUsers; } public function setSshKeys(?string $sshKeys) : void { $this->sshKeys = $sshKeys; } public function getSshKeys() : ?string { return $this->sshKeys; } public function setVhostTemplate(string $vhostTemplate) : void { $this->vhostTemplate = $vhostTemplate; } public function getVhostTemplate() : ?string { return $this->vhostTemplate; } public function allowTrafficFromCloudflareOnly() : bool { return $this->allowTrafficFromCloudflareOnly; } public function setAllowTrafficFromCloudflareOnly(bool $flag) : void { $this->allowTrafficFromCloudflareOnly = $flag; } public function getPageSpeedEnabled() : ?bool { return $this->pageSpeedEnabled; } public function setPageSpeedEnabled(bool $flag) : void { $this->pageSpeedEnabled = $flag; } public function getPageSpeedSettings() : ?string { return $this->pageSpeedSettings; } public function setPageSpeedSettings(?string $pageSpeedSettings) : void { $this->pageSpeedSettings = $pageSpeedSettings; } }
