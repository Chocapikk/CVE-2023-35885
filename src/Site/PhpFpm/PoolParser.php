<?php
 namespace App\Site\PhpFpm; class PoolParser { private string $file; private ?Pool $pool = null; private array $data = []; public function __construct(string $file) { $this->file = $file; } public function parse() : ?Pool { goto F7b51; df8bf: $port = (int) $listenValue[1]; goto fc3c9; aaa7a: if (!(true === is_array($listenValue) && true === isset($listenValue[0]) && true === isset($listenValue[1]))) { goto D40c5; } goto df8bf; Ef7c9: $lines = explode(PHP_EOL, $fileContent); goto ab58f; c49bb: if (!(false === empty($fileContent))) { goto d3bd7; } goto Ef7c9; D100b: D1659: goto Bc9a1; d861e: $listenValue = explode("\72", $listenValue); goto aaa7a; afed1: D40c5: goto D100b; D92c2: d3bd7: goto b4bdc; D6bee: $pool = new Pool(); goto c1d08; C9ea5: if (!(false === empty($name))) { goto D1659; } goto c0076; Ae064: $pool->setUser($user); goto Edfb7; Edfb7: $pool->setGroup($group); goto ed4bf; Ccaae: b2c55: goto A62d3; A62d3: $listenValue = $this->get("\x6c\x69\x73\x74\x65\156"); goto d861e; b2909: $pool->setPort($port); goto Ae064; c1d08: $pool->setName($name); goto b2909; D7c82: $group = $this->get("\x67\x72\157\165\x70"); goto D6bee; c0076: foreach ($lines as $line) { goto Cdb46; Aef33: F65df: goto Dea12; fab5f: $this->set($line[0], $line[1]); goto Aef33; Cdb46: $line = array_map("\x74\162\x69\155", explode("\75", $line)); goto d919c; d919c: if (!(true === isset($line[0]) && true === isset($line[1]))) { goto F65df; } goto fab5f; Dea12: d1eed: goto D11cd; D11cd: } goto Ccaae; F7b51: $fileContent = \file_get_contents($this->file); goto c49bb; ab58f: if (!(true === is_array($lines) && count($lines))) { goto B2748; } goto D8da3; fc3c9: $user = $this->get("\x75\163\145\x72"); goto D7c82; b4bdc: return null; goto fa8df; Bc9a1: B2748: goto D92c2; ed4bf: return $pool; goto afed1; c49c2: $name = substr($firstLine, 1, -1); goto C9ea5; D8da3: $firstLine = trim(array_shift($lines)); goto c49c2; fa8df: } public function set(string $key, string $value) : void { $this->data[$key] = $value; } public function get(string $key) : ?string { $value = $this->data[$key] ?? null; return $value; } }
