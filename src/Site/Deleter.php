<?php
 namespace App\Site; use App\System\CommandExecutor; use App\System\Command\DeleteFileCommand; use App\System\Command\DeleteUserCommand; use App\System\Command\ServiceReloadCommand; use App\Database\Manager as DatabaseManager; abstract class Deleter { public const NGINX_BASIC_AUTH_DIRECTORY = "\x2f\145\164\143\57\x6e\147\x69\x6e\170\57\x62\141\163\151\143\55\x61\165\164\150\x2f"; public const NGINX_VHOST_DIRECTORY = "\x2f\145\x74\x63\x2f\156\147\151\x6e\x78\x2f\163\151\164\145\x73\x2d\145\x6e\141\x62\154\x65\x64\57"; public const NGINX_SSL_CERTIFICATES_DIRECTORY = "\57\x65\x74\x63\x2f\x6e\x67\151\x6e\170\x2f\x73\x73\x6c\55\x63\x65\x72\x74\151\x66\x69\x63\x61\x74\x65\163\x2f"; public const LOGROTATE_DIRECTORY = "\57\145\x74\143\57\154\x6f\147\162\157\164\141\164\145\56\144\x2f"; public const CRON_DIRECTORY = "\x2f\x65\164\x63\x2f\x63\x72\157\156\x2e\x64\x2f"; protected Site $site; protected CommandExecutor $commandExecutor; public function __construct(Site $site) { $this->site = $site; $this->commandExecutor = new CommandExecutor(); } public function delete() : void { goto Ef36e; c704a: $this->deleteCertificates(); goto bd022; e4743: $this->deleteSiteUser(); goto Cf497; Ade7c: $this->deleteFtpUsers(); goto d592a; bd022: $this->deleteBasicAuthFile(); goto Ade7c; d592a: $this->deleteSshUsers(); goto e4743; D8895: $this->deleteDatabases(); goto df2b7; Ef36e: $this->deleteVhost(); goto c704a; E8400: $this->deleteLogrotateFile(); goto D8895; Cf497: $this->deleteCrontab(); goto E8400; df2b7: } protected function deleteVhost() : void { goto D2179; A3f6a: $vhostFileDeleteCommand = new DeleteFileCommand(); goto F3f94; F3f94: $vhostFileDeleteCommand->setFile($vhostFile); goto E4c3e; A08f0: $this->reloadService("\x6e\x67\x69\156\170"); goto e5461; E4c3e: $this->commandExecutor->execute($vhostFileDeleteCommand); goto A08f0; F818a: $vhostFile = sprintf("\x25\163\x2f\x25\x73\56\x63\157\156\x66", rtrim(self::NGINX_VHOST_DIRECTORY, "\57"), $domainName); goto A3f6a; D2179: $domainName = $this->site->getDomainName(); goto F818a; e5461: } protected function deleteCertificates() : void { goto a1fcb; Ce875: $certificateFiles = sprintf("\45\163\x2f\45\x73\56\x2a", rtrim(self::NGINX_SSL_CERTIFICATES_DIRECTORY, "\57"), $domainName); goto bc281; cf893: $this->commandExecutor->execute($deleteCertificatesFilesCommand); goto D8a78; bc281: $deleteCertificatesFilesCommand = new DeleteFileCommand(); goto cbd97; cbd97: $deleteCertificatesFilesCommand->setFile($certificateFiles); goto cf893; a1fcb: $domainName = $this->site->getDomainName(); goto Ce875; D8a78: } protected function deleteBasicAuthFile() { goto a499b; D73fb: $deleteBasicAuthFileCommand->setFile($basicAuthFile); goto D04c3; a499b: $basicAuthFile = sprintf("\45\163\x2f\x25\x73", rtrim(self::NGINX_BASIC_AUTH_DIRECTORY, "\57"), $this->site->getDomainName()); goto B310a; B310a: $deleteBasicAuthFileCommand = new DeleteFileCommand(); goto D73fb; D04c3: $this->commandExecutor->execute($deleteBasicAuthFileCommand); goto Cc36a; Cc36a: } protected function deleteSiteUser() : void { $siteUser = $this->site->getUser(); $this->deleteUser($siteUser, true); } protected function deleteCrontab() { goto C380d; fdc19: $deleteCrontabFileCommand->setFile($crontabFile); goto B1f93; C89a6: $deleteCrontabFileCommand = new DeleteFileCommand(); goto fdc19; C380d: $siteUser = $this->site->getUser(); goto Ef682; B1f93: $this->commandExecutor->execute($deleteCrontabFileCommand); goto f4729; Ef682: $crontabFile = sprintf("\x25\x73\x2f\45\x73", rtrim(self::CRON_DIRECTORY, "\57"), $siteUser); goto C89a6; f4729: } public function deleteLogrotateFile() { goto A5a22; B0bb3: $deleteLogrotateFileCommand->setFile($logrotateFile); goto Fee08; cd19b: $deleteLogrotateFileCommand = new DeleteFileCommand(); goto B0bb3; E4149: $logrotateFile = sprintf("\x25\163\57\x25\163", rtrim(self::LOGROTATE_DIRECTORY, "\57"), $siteUser); goto cd19b; A5a22: $siteUser = $this->site->getUser(); goto E4149; Fee08: $this->commandExecutor->execute($deleteLogrotateFileCommand); goto Abca5; Abca5: } protected function deleteUser(string $userName, $removeHomeDirectory = true) : void { goto da67a; Db5a3: $deleteUserCommand->setUserName($userName); goto A4b10; A4b10: $deleteUserCommand->setRemoveHomeDirectory($removeHomeDirectory); goto f322f; da67a: $deleteUserCommand = new DeleteUserCommand(); goto Db5a3; f322f: $this->commandExecutor->execute($deleteUserCommand); goto D153e; D153e: } protected function deleteFtpUsers() { goto caf3a; A9d06: foreach ($ftpUsers as $ftpUser) { goto Ec1ab; E07ab: $this->deleteUser($userName, false); goto D7735; D7735: ca70b: goto d866b; Ec1ab: $userName = $ftpUser->getUserName(); goto E07ab; d866b: } goto Ec2db; Ec2db: Fe63f: goto a3271; c4117: if (!count($ftpUsers)) { goto a98ec; } goto A9d06; a3271: a98ec: goto F9148; caf3a: $ftpUsers = $this->site->getFtpUsers(); goto c4117; F9148: } protected function deleteSshUsers() { goto b77e4; c9353: d8f96: goto D27bd; b77e4: $sshUsers = $this->site->getSshUsers(); goto bb639; bb639: if (!count($sshUsers)) { goto d8f96; } goto cecc8; cecc8: foreach ($sshUsers as $sshUser) { goto ce9bd; E5c6f: $this->deleteUser($userName, true); goto ca9f2; ce9bd: $userName = $sshUser->getUserName(); goto E5c6f; ca9f2: Be671: goto Dbeec; Dbeec: } goto e2460; e2460: a5461: goto c9353; D27bd: } protected function deleteDatabases() { goto Cdb3e; Cdb3e: $databases = $this->site->getDatabases(); goto ee8d0; b8f34: E6aac: goto d6cb1; f96a8: foreach ($databases as $database) { goto A299e; dcca7: $databaseManager->deleteDatabase($database, true); goto E2fe0; a0111: $databaseManager = new DatabaseManager($databaseServer); goto dcca7; A299e: $databaseServer = $database->getDatabaseServer(); goto a0111; E2fe0: Cf11c: goto e8d71; e8d71: } goto b8f34; ee8d0: if (!count($databases)) { goto ec03f; } goto f96a8; d6cb1: ec03f: goto B1f2c; B1f2c: } public function reloadNginxService() : void { $this->reloadService("\156\147\x69\156\x78"); } public function reloadService($serviceName) { goto F9c48; C391b: $reloadServiceCommand->setServiceName($serviceName); goto d2855; F9c48: if (!("\144\x65\x76" != $_ENV["\x41\x50\120\137\105\116\x56"])) { goto dd997; } goto Ca7ae; d8f64: dd997: goto c580c; d2855: $this->commandExecutor->execute($reloadServiceCommand); goto d8f64; Ca7ae: $reloadServiceCommand = new ServiceReloadCommand(); goto C391b; c580c: } }
