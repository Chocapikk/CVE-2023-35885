<?php
 namespace App\Controller\Admin; use Symfony\Component\Form\FormError; use Symfony\Component\HttpFoundation\Request; use Symfony\Component\HttpFoundation\Response; use Symfony\Component\Form\Extension\Core\Type\SubmitType; use Symfony\Contracts\Translation\TranslatorInterface; use Symfony\Component\Form\Form; use App\Controller\Controller; use App\Event\EventQueue; use App\Service\Crypto; use App\Service\Logger; use App\Entity\Manager\DatabaseServerManager as DatabaseServerEntityManager; use App\Database\Connection as DatabaseConnection; use App\Entity\Manager\ConfigManager; use App\Entity\Certificate as CertificateEntity; use App\Entity\DatabaseServer as DatabaseServerEntity; use App\Security\Admin\CustomDomain as AdminCustomDomain; use App\Site\Ssl\DistinguishedName; use App\Site\Ssl\Generator\RsaKeyGenerator; use App\Site\Ssl\Generator\CsrGenerator; use App\Site\Ssl\PrivateKey; use App\Site\Ssl\Certificate; use App\Site\Ssl\LetsEncryptClient; use App\Site\Ssl\Util\Openssl; class SettingsController extends Controller { private ConfigManager $configManager; private DatabaseServerEntityManager $databaseServerEntityManager; public function __construct(ConfigManager $configManager, DatabaseServerEntityManager $databaseServerEntityManager, TranslatorInterface $translator, Logger $logger) { goto fb6de; D9d3d: parent::__construct($translator, $logger); goto C8a75; ab5c0: $this->databaseServerEntityManager = $databaseServerEntityManager; goto D9d3d; fb6de: $this->configManager = $configManager; goto ab5c0; C8a75: } public function settings(Request $request) : Response { goto C1fdb; ce156: C9a7f: goto A96a5; D6f6d: if (!(false === is_null($response))) { goto da477; } goto db4b7; f2c01: if (!(true === $request->isMethod("\120\117\x53\124"))) { goto B3608; } goto A2a15; Ce183: $response = $this->handleCustomDomainForm($request, $customDomainForm); goto D6f6d; db4b7: return $response; goto c1139; A2a15: $customDomainForm->handleRequest($request); goto b40a1; Bb8ca: return $response; goto fd3a6; Cf0ce: $customDomainForm = $this->createCustomDomainForm($customDomainData); goto f2c01; c1139: da477: goto ce156; beed0: $customDomainData = ["\144\x6f\x6d\x61\x69\x6e\x4e\141\x6d\x65" => false === is_null($customDomainName) ? $customDomainName : '']; goto Cf0ce; de225: $response = $this->render("\x41\x64\x6d\x69\156\x2f\123\x65\x74\164\x69\x6e\147\163\x2f\x69\x6e\144\x65\170\x2e\x68\164\155\154\56\x74\167\x69\147", ["\x63\165\163\x74\x6f\x6d\104\157\x6d\x61\151\x6e\x46\x6f\162\155" => $customDomainForm->createView(), "\x66\x6f\x72\155\105\162\x72\157\162\163" => $this->formErrors]); goto Bb8ca; A96a5: B3608: goto de225; C1fdb: $customDomainName = $this->configManager->get("\143\165\x73\164\157\155\137\x64\x6f\x6d\141\x69\x6e"); goto beed0; b40a1: if (!(true === $customDomainForm->isSubmitted())) { goto C9a7f; } goto Ce183; fd3a6: } private function createCustomDomainForm(array $data) : Form { goto af724; A93c6: return $form; goto A39ad; E9d93: $form->add("\163\x75\142\155\151\x74", SubmitType::class, ["\x61\164\164\162" => ["\x63\x6c\x61\x73\163" => "\x62\164\156\x20\142\164\x6e\55\142\x6c\165\x65\x20\x62\164\156\55\154\147"], "\154\x61\142\x65\154" => "\123\141\x76\x65"]); goto A93c6; af724: $form = $this->createForm("\x41\160\x70\x5c\x46\157\162\x6d\x5c\x41\x64\x6d\x69\x6e\x43\165\x73\x74\x6f\x6d\x44\157\155\x61\151\x6e\x53\145\164\164\x69\x6e\147\163\124\171\x70\x65", $data, ["\141\x63\x74\151\x6f\x6e" => $this->generateUrl("\x63\154\160\137\141\x64\x6d\x69\156\x5f\163\x65\164\x74\151\156\147\163"), "\x6d\x65\x74\150\x6f\144" => "\120\117\123\124", "\141\x74\x74\162" => []]); goto E9d93; A39ad: } private function handleCustomDomainForm(Request $request, Form $form) { goto Eccb1; eb6f1: b55f3: goto Ab7b2; Eccb1: if (true === $form->isValid()) { goto b55f3; } goto c8572; Ef773: goto Cd8a0; goto eb6f1; c8572: $this->formErrors = $this->getErrorMessages($form); goto Ef773; d9257: Cd8a0: goto Eff69; Ab7b2: try { goto A6873; Fd6e9: $session->getFlashBag()->set("\x73\x75\143\x63\145\163\163", $this->translator->trans("\x43\154\x6f\x75\x64\120\141\156\145\x6c\x20\x43\x75\163\x74\x6f\x6d\40\x44\x6f\x6d\x61\x69\156\x20\x68\x61\163\40\142\x65\145\156\40\163\x61\166\x65\144\56")); goto bda44; c4599: $adminCustomDomain->reloadNginx(); goto f37d8; a381f: return $response; goto c884f; B7b52: foreach ($validationErrors as $domain => $validationErrorMessage) { $form->addError(new FormError(sprintf("\45\x73\72\x20\x25\163", $domain, $validationErrorMessage))); Af22c: } goto b0f62; Ebf98: df0c4: goto A11e0; fc6e2: goto d2571; goto Ebf98; fe062: $certificate = new Certificate(); goto F5276; d79f2: $domains = [$domainName]; goto dd1b3; e9a7a: EventQueue::addEvent(EventQueue::EVENT_ADMIN_CUSTOM_DOMAIN_DISABLE, $user, [], $request); goto Fd6e9; A9650: $csrGenerator = new CsrGenerator($privateKey, $distinguishedName); goto b51c8; c884f: d2571: goto b86ff; bda44: $response = $this->redirect($this->generateUrl("\143\154\160\137\x61\x64\x6d\x69\156\137\x73\x65\x74\x74\x69\156\147\x73")); goto d73ab; b51c8: $csr = $csrGenerator->generate(); goto E41fe; f37d8: $validationErrors = $letsEncryptClient->validateDomains($certificateOrder); goto f54a1; a2b39: $distinguishedName = new DistinguishedName($commonName, $distinguishedNameDomains); goto a5743; b86ff: D54ee: goto a7e75; cc118: goto D54ee; goto f607f; F53f6: $session = $request->getSession(); goto Bd7b8; E8122: $adminCustomDomain->writeMotdFile($domainName); goto E2243; E41fe: $selfSignedCertificate = Openssl::createSelfSignedCertificate($privateKey, $csr); goto fe062; e5cbd: $vhostTemplateFile = realpath(dirname(__FILE__) . "\x2f\56\56\x2f\56\x2e\57\x2e\56\57\x72\145\x73\x6f\165\162\143\145\x73\x2f\x6e\147\x69\156\x78\x2f\166\150\x6f\163\164\137\x74\145\x6d\160\x6c\141\164\145\57\x63\x75\163\x74\x6f\x6d\x2d\144\x6f\155\x61\151\156"); goto Ef316; B3ee6: $adminCustomDomain = new AdminCustomDomain(); goto Ae420; E2243: $adminCustomDomain->reloadNginx(); goto D1210; a6896: $adminCustomDomain = new AdminCustomDomain(); goto e68bf; dd1b3: $letsEncryptPrivateKey = $this->configManager->get("\x6c\145\137\160\x72\151\166\x61\164\145\x5f\x6b\145\x79"); goto C62b0; a5743: $rsaKeyGenerator = new RsaKeyGenerator(); goto da929; D9d48: $certificate->setCertificate($selfSignedCertificate); goto a868b; F5276: $certificate->setPrivateKey($privateKey->getPEM()); goto D9d48; C62b0: $privateKey = new PrivateKey($letsEncryptPrivateKey); goto Cd972; Ef316: $vhostTemplate = file_get_contents($vhostTemplateFile); goto eac3b; c5dc8: EventQueue::addEvent(EventQueue::EVENT_ADMIN_CUSTOM_DOMAIN_ENABLE, $user, $eventData, $request); goto Ee599; eb046: $commonName = array_shift($distinguishedNameDomains); goto a2b39; d5525: $eventData = ["\x64\157\x6d\141\x69\x6e\116\141\155\145" => $domainName]; goto c5dc8; Cd972: $letsEncryptClient = new LetsEncryptClient($privateKey); goto B41c0; A6873: $user = $this->getUser(); goto F53f6; Ea48c: $this->formErrors = $this->getErrorMessages($form); goto fc6e2; f54a1: if (true === empty($validationErrors)) { goto df0c4; } goto e74f9; a868b: $adminCustomDomain->deleteLetsEncryptChallengeFiles(); goto Cebcf; e68bf: if (false === empty($domainName)) { goto Abb44; } goto B3ee6; E7e90: $response = $this->redirect($this->generateUrl("\x63\154\x70\x5f\x61\x64\x6d\151\156\137\163\x65\164\x74\151\x6e\147\163")); goto a381f; b12ed: $certificateOrder = $letsEncryptClient->requestOrder($domains); goto e5cbd; Ae420: $adminCustomDomain->delete(); goto Ad645; eac3b: $distinguishedNameDomains = $domains; goto eb046; d6705: $adminCustomDomain->writeVhostFile($domainName, $vhostTemplate); goto c4599; df0f4: $adminCustomDomain->delete(); goto B7b52; Cebcf: $adminCustomDomain->createLetsEncryptChallengeFiles($certificateOrder); goto e02cf; e74f9: $adminCustomDomain = new AdminCustomDomain(); goto df0f4; D1210: $this->configManager->set("\x63\165\163\164\x6f\x6d\x5f\144\157\x6d\x61\x69\x6e", $domainName); goto d5525; e02cf: $adminCustomDomain->writePrivateKeyAndCertificate($certificate); goto d6705; f607f: Abb44: goto d79f2; Ad645: $this->configManager->delete("\x63\x75\163\x74\157\155\x5f\144\x6f\155\141\x69\x6e"); goto e9a7a; Ee599: $session->getFlashBag()->set("\x73\165\143\x63\x65\163\163", $this->translator->trans("\x43\154\157\165\x64\x50\x61\156\x65\154\40\x43\x75\163\x74\x6f\155\x20\x44\157\155\141\x69\x6e\x20\x68\141\x73\x20\x62\145\x65\x6e\x20\163\141\x76\x65\144\x2e")); goto E7e90; Deef2: $adminCustomDomain->writePrivateKeyAndCertificate($certificate); goto c4fd2; Bd7b8: $domainName = $form->get("\144\157\x6d\x61\151\x6e\x4e\141\155\x65")->getData(); goto a6896; c4fd2: $adminCustomDomain->writeVhostFile($domainName, $vhostTemplate); goto E8122; A11e0: $certificate = $letsEncryptClient->finalizeOrder($certificateOrder, $privateKey, $csr); goto Deef2; B41c0: $letsEncryptClient->registerAccount(); goto b12ed; d73ab: return $response; goto cc118; da929: $privateKey = $rsaKeyGenerator->generatePrivateKey(); goto A9650; b0f62: Ac5db: goto Ea48c; a7e75: } catch (\Exception $e) { $this->logger->exception($e); $session->getFlashBag()->set("\x64\141\156\x67\x65\162", $this->translator->trans("\x41\x6e\40\x65\x72\162\x6f\162\x20\150\141\x73\x20\157\x63\x63\165\x72\x72\145\x64\54\x20\x65\162\x72\157\162\40\155\145\x73\x73\x61\x67\x65\x3a\x20\x25\145\162\162\x6f\162\x4d\x65\163\163\141\147\x65\45", ["\x25\145\x72\x72\157\162\x4d\145\x73\x73\x61\x67\x65\x25" => $e->getMessage()])); } finally { if (!(true === isset($adminCustomDomain))) { goto E551b; } $adminCustomDomain->deleteLetsEncryptChallengeFiles(); E551b: } goto d9257; Eff69: } public function databaseServers(Request $request) : Response { goto badd3; Fe127: return $response; goto B035f; badd3: $databaseServers = $this->databaseServerEntityManager->findAll([], ["\x68\157\x73\x74" => "\x41\x53\x43"]); goto Cb09a; Cb09a: $response = $this->render("\x41\144\155\x69\156\57\x53\145\x74\x74\151\156\x67\x73\57\104\x61\164\141\142\141\163\x65\x2d\x53\x65\x72\166\x65\x72\x73\x2f\x69\x6e\144\145\170\56\x68\x74\x6d\x6c\56\x74\167\x69\x67", ["\144\141\x74\x61\x62\141\163\x65\123\x65\162\x76\145\x72\163" => $databaseServers]); goto Fe127; B035f: } public function addDatabaseServer(Request $request) : Response { goto e4628; e1626: if (!(true === $form->isSubmitted())) { goto ddf55; } goto E748c; D9df4: if (!(true === $request->isMethod("\120\117\123\124"))) { goto f6e8f; } goto B407a; Cc6e4: $form = $this->createDatabaseServerForm($databaseServerEntity); goto D9df4; Dcabf: $response = $this->render("\101\x64\x6d\x69\x6e\x2f\123\x65\x74\x74\151\156\x67\163\x2f\104\141\x74\x61\142\x61\163\145\55\123\x65\x72\166\145\x72\163\x2f\141\144\144\x2e\150\x74\155\x6c\56\x74\x77\x69\x67", ["\146\157\162\155" => $form->createView(), "\x66\x6f\x72\x6d\x45\x72\162\157\162\x73" => $this->formErrors]); goto a4a33; Abb91: ddf55: goto Fca26; e4628: $databaseServerEntity = $this->databaseServerEntityManager->createEntity(); goto Cc6e4; F2af5: return $response; goto b5120; Fca26: f6e8f: goto Dcabf; E748c: $response = $this->handleDatabaseServerForm($request, $form); goto e9069; b5120: C5933: goto Abb91; B407a: $form->handleRequest($request); goto e1626; a4a33: return $response; goto e5afa; e9069: if (!(false === is_null($response))) { goto C5933; } goto F2af5; e5afa: } private function createDatabaseServerForm(DatabaseServerEntity $databaseServerEntity) : Form { goto daafa; b8a5d: return $form; goto F1b46; daafa: $form = $this->createForm("\x41\160\x70\x5c\x46\x6f\x72\x6d\x5c\x41\x64\x6d\x69\156\x44\x61\x74\141\142\x61\x73\145\x53\145\x72\166\145\162\124\x79\160\145", $databaseServerEntity, ["\x61\143\x74\x69\157\x6e" => $this->generateUrl("\x63\x6c\x70\x5f\x61\x64\155\x69\156\137\144\141\x74\141\142\x61\163\145\x5f\x73\145\x72\166\x65\x72\137\141\144\144"), "\155\145\x74\150\157\144" => "\120\117\x53\x54", "\x61\x74\164\x72" => []]); goto a0a31; a0a31: $form->add("\x73\x75\x62\155\151\x74", SubmitType::class, ["\141\x74\x74\162" => ["\x63\x6c\141\163\163" => "\142\x74\156\40\x62\x74\x6e\55\142\154\165\x65\40\142\x74\x6e\55\x6c\147"], "\154\x61\142\x65\x6c" => "\101\144\144\40\104\x61\x74\141\x62\141\x73\145\40\x53\x65\162\166\x65\162"]); goto b8a5d; F1b46: } private function handleDatabaseServerForm(Request $request, Form $form) { goto fc530; c0311: try { goto f7cb7; E6ba3: $response = $this->redirect($this->generateUrl("\x63\154\160\137\141\x64\155\151\156\x5f\144\141\164\141\142\x61\163\145\137\163\145\x72\x76\x65\x72\x73")); goto E7ff6; F261f: $databaseServerEntity = $form->getData(); goto b0b8e; f7cb7: $user = $this->getUser(); goto dcdc5; dcdc5: $session = $request->getSession(); goto F261f; e0bb5: $eventData = ["\150\x6f\163\x74" => $databaseServerEntity->getHost(), "\165\x73\145\x72\x4e\x61\155\145" => $databaseServerEntity->getUserName(), "\160\x6f\162\x74" => $databaseServerEntity->getPort(), "\x65\156\147\x69\156\x65" => $engine, "\x76\x65\162\x73\x69\157\156" => $version]; goto B819d; B819d: EventQueue::addEvent(EventQueue::EVENT_DATABASE_SERVER_ADD, $user, $eventData, $request); goto c8341; c8341: $this->databaseServerEntityManager->updateEntity($databaseServerEntity); goto c0312; ca9c6: $databaseServerEntity->setVersion($version); goto ff80d; f5f96: $databaseConnection = new DatabaseConnection($databaseServerEntity); goto bc7ab; F0c6a: $databaseServerEntity->setPassword($encryptedPassword); goto f5f96; b0b8e: $password = $databaseServerEntity->getPassword(); goto a5aba; c0312: $session->getFlashBag()->set("\x73\x75\x63\x63\145\163\163", $this->translator->trans("\x44\141\x74\x61\x62\141\163\x65\x20\x53\145\x72\x76\145\162\40\150\141\163\40\142\x65\x65\x6e\40\x61\144\144\145\x64\56")); goto E6ba3; d3d08: $databaseServerEntity->setEngine($engine); goto ca9c6; a5aba: $encryptedPassword = Crypto::encrypt($password); goto F0c6a; ff80d: $databaseServerEntity->setIsDefault(false); goto e0bb5; E7ff6: return $response; goto f1c4e; F7712: $version = $databaseConnection->getVersion(); goto d3d08; bc7ab: $engine = $databaseConnection->getEngine(); goto F7712; f1c4e: } catch (\Exception $e) { $this->logger->exception($e); $session->getFlashBag()->set("\x64\x61\156\147\145\x72", $this->translator->trans("\x41\156\x20\x65\162\162\157\162\40\150\141\x73\40\x6f\143\x63\165\162\x72\145\x64\54\x20\145\x72\162\157\162\x20\x6d\145\163\163\x61\x67\145\72\x20\45\x65\162\162\x6f\x72\115\145\x73\163\x61\147\x65\x25", ["\x25\145\162\162\157\x72\x4d\145\x73\x73\141\x67\145\x25" => $e->getMessage()])); } goto A8036; D155f: Ac438: goto c0311; fb01f: $this->formErrors = $this->getErrorMessages($form); goto e7032; fc530: if (true === $form->isValid()) { goto Ac438; } goto fb01f; e7032: goto C6611; goto D155f; A8036: C6611: goto ad087; ad087: } public function editDatabaseServer(Request $request) : Response { goto Bca3e; A000e: ace76: goto E4f91; E4f91: C4e7e: goto dc51c; D09ab: $response = $this->handleDatabaseServerEditForm($request, $form); goto ac7e2; d9d3c: $response = $this->render("\101\x64\155\151\x6e\x2f\x53\145\164\x74\x69\x6e\x67\x73\x2f\x44\x61\164\141\142\141\163\145\x2d\123\145\x72\x76\x65\x72\163\57\x65\x64\151\164\56\150\x74\155\154\56\x74\x77\151\147", ["\144\x61\x74\141\x62\141\x73\x65\x53\145\162\x76\145\x72" => $databaseServerEntity, "\146\x6f\x72\155" => $form->createView(), "\x66\157\162\x6d\105\162\162\x6f\162\163" => $this->formErrors]); goto c3f40; Edae6: Acc15: goto b931b; ac7e2: if (!(false === is_null($response))) { goto ace76; } goto f53ee; Bca3e: $id = (int) $request->get("\x69\x64"); goto ab5d1; dc51c: b0437: goto d9d3c; ab5d1: $databaseServerEntity = $this->databaseServerEntityManager->findOneById($id); goto d4a7f; d4a7f: if (true === is_null($databaseServerEntity)) { goto Acc15; } goto E2a01; E2a01: $databaseServerEntity->setPassword(''); goto a1b17; A42b1: if (!(true === $form->isSubmitted())) { goto C4e7e; } goto D09ab; f53ee: return $response; goto A000e; Fb4ef: if (!(true === $request->isMethod("\x50\117\123\124"))) { goto b0437; } goto baa67; E7339: dced9: goto c1241; c3f40: return $response; goto b6fd1; a1b17: $form = $this->createDatabaseServerEditForm($databaseServerEntity); goto Fb4ef; baa67: $form->handleRequest($request); goto A42b1; b931b: $response = $this->redirect($this->generateUrl("\143\154\x70\137\x61\x64\155\151\x6e\x5f\144\x61\x74\141\142\141\163\x65\x5f\x73\145\x72\x76\145\x72\x73")); goto Cb959; b6fd1: goto dced9; goto Edae6; Cb959: return $response; goto E7339; c1241: } private function createDatabaseServerEditForm(DatabaseServerEntity $databaseServerEntity) : Form { goto D9535; D9535: $form = $this->createForm("\101\160\160\134\x46\x6f\x72\x6d\134\x41\144\x6d\x69\156\x44\x61\164\x61\x62\x61\x73\x65\x53\x65\x72\x76\x65\162\x45\144\151\164\x54\171\x70\x65", $databaseServerEntity, ["\x61\x63\164\151\x6f\x6e" => $this->generateUrl("\x63\x6c\160\x5f\141\x64\x6d\x69\156\137\x64\141\164\x61\x62\x61\x73\145\x5f\x73\145\x72\x76\145\x72\x5f\145\x64\x69\x74", ["\151\x64" => $databaseServerEntity->getId()]), "\155\x65\164\x68\x6f\x64" => "\x50\x4f\x53\124", "\141\164\164\162" => []]); goto fe9ac; Ff969: return $form; goto B2ba3; fe9ac: $form->add("\x73\x75\x62\155\151\x74", SubmitType::class, ["\x61\x74\x74\162" => ["\x63\x6c\x61\163\x73" => "\142\164\x6e\x20\x62\x74\x6e\x2d\x62\154\x75\x65\x20\142\164\x6e\55\154\x67"], "\154\141\x62\x65\x6c" => "\x53\x61\166\x65"]); goto Ff969; B2ba3: } private function handleDatabaseServerEditForm(Request $request, Form $form) { goto d3e64; c77d1: try { goto fd13e; a67a0: $password = $databaseServerEntity->getPassword(); goto c3755; e2866: $databaseServerEntity->setPassword($encryptedPassword); goto C7ddc; Baeeb: $version = $databaseConnection->getVersion(); goto f2e83; f2e83: $databaseServerEntity->setEngine($engine); goto e60dc; dc139: $engine = $databaseConnection->getEngine(); goto Baeeb; be82a: $eventData = ["\150\x6f\x73\x74" => $databaseServerEntity->getHost(), "\x75\163\145\x72\116\x61\155\145" => $databaseServerEntity->getUserName(), "\x70\157\162\164" => $databaseServerEntity->getPort(), "\145\x6e\147\151\156\x65" => $engine, "\166\x65\162\163\x69\x6f\x6e" => $version]; goto aa5fb; fd13e: $user = $this->getUser(); goto ff38d; E093f: $databaseServerEntity = $form->getData(); goto a67a0; f6031: return $response; goto fe482; ff38d: $session = $request->getSession(); goto E093f; aa5fb: EventQueue::addEvent(EventQueue::EVENT_DATABASE_SERVER_EDIT, $user, $eventData, $request); goto cbe35; cbe35: $this->databaseServerEntityManager->updateEntity($databaseServerEntity); goto E1fbf; C7ddc: $databaseConnection = new DatabaseConnection($databaseServerEntity); goto dc139; e60dc: $databaseServerEntity->setVersion($version); goto f5a0e; c3755: $encryptedPassword = Crypto::encrypt($password); goto e2866; f5a0e: $databaseServerEntity->setIsDefault(false); goto be82a; E1fbf: $session->getFlashBag()->set("\x73\x75\x63\143\145\x73\x73", $this->translator->trans("\x44\x61\164\x61\142\141\x73\x65\x20\x53\145\x72\x76\x65\162\x20\x68\141\163\x20\142\145\x65\x6e\40\165\160\144\141\x74\x65\144\56")); goto E9981; E9981: $response = $this->redirect($this->generateUrl("\143\x6c\160\137\x61\144\155\x69\x6e\x5f\x64\141\x74\141\x62\141\163\x65\137\x73\145\162\166\x65\162\163")); goto f6031; fe482: } catch (\Exception $e) { $this->logger->exception($e); $session->getFlashBag()->set("\x64\141\156\147\x65\x72", $this->translator->trans("\101\156\40\145\162\162\x6f\x72\40\x68\141\x73\40\157\x63\143\165\162\162\145\x64\x2c\40\x65\x72\x72\157\162\40\x6d\x65\x73\163\x61\x67\145\x3a\x20\x25\145\162\162\157\162\x4d\x65\x73\x73\x61\147\x65\x25", ["\45\x65\162\x72\157\162\115\145\163\163\141\147\145\45" => $e->getMessage()])); } goto F4e2b; c9334: $this->formErrors = $this->getErrorMessages($form); goto cd063; D7be0: Ebe4d: goto c77d1; d3e64: if (true === $form->isValid()) { goto Ebe4d; } goto c9334; F4e2b: d4aff: goto Dcac9; cd063: goto d4aff; goto D7be0; Dcac9: } public function setDatabaseServerActive(Request $request) : Response { goto c319f; Dc7a4: $activeDatabaseServerEntity = $this->databaseServerEntityManager->getActiveDatabaseServer(); goto c2261; Be4a2: ba79d: goto C7f41; fa92a: if (!(false === is_null($databaseServerEntity))) { goto ba79d; } goto Dc7a4; c319f: $id = (int) $request->get("\x69\x64"); goto E169e; E127e: return $response; goto D9574; c2261: if (!($databaseServerEntity->getId() != $activeDatabaseServerEntity->getId())) { goto Fd32b; } goto Dd25c; Dd25c: try { goto Dfed9; D10df: $activeDatabaseServerEntity->setIsActive(false); goto E7da3; f3d9b: $session->getFlashBag()->set("\163\x75\x63\143\x65\x73\x73", $this->translator->trans("\x44\x61\164\x61\x62\x61\163\x65\x20\x53\x65\162\x76\145\162\x20\150\141\x73\x20\142\x65\x65\x6e\x20\x63\150\141\x6e\147\x65\x64\x2e")); goto e3f81; E432a: $databaseServerEntity->setIsActive(true); goto D10df; f31b0: $eventData = ["\x6f\x6c\x64\x48\157\163\x74" => $activeDatabaseServerEntity->getHost(), "\157\154\144\125\163\145\162\x4e\x61\155\x65" => $activeDatabaseServerEntity->getUserName(), "\156\145\x77\x48\x6f\163\x74" => $databaseServerEntity->getHost(), "\156\x65\167\125\163\145\x72\x4e\141\155\145" => $databaseServerEntity->getUserName()]; goto A1301; fe3a7: $this->databaseServerEntityManager->updateEntity($activeDatabaseServerEntity); goto f31b0; A1301: EventQueue::addEvent(EventQueue::EVENT_DATABASE_SERVER_CHANGE, $user, $eventData, $request); goto f3d9b; Dfed9: $user = $this->getUser(); goto Ff3b9; E7da3: $this->databaseServerEntityManager->updateEntity($databaseServerEntity); goto fe3a7; Ff3b9: $session = $request->getSession(); goto E432a; e3f81: } catch (\Exception $e) { $session->getFlashBag()->set("\x64\x61\156\147\x65\162", $this->translator->trans("\104\141\164\x61\142\x61\163\145\40\x53\145\x72\166\145\x72\x20\143\x72\145\x64\x65\156\x74\151\141\154\x73\x20\x61\x72\x65\x20\x6e\x6f\x74\x20\x76\x61\x6c\x69\x64\x2e")); } goto aa707; C7f41: $response = $this->redirect($this->generateUrl("\x63\154\x70\137\141\144\x6d\x69\156\x5f\144\x61\164\x61\142\x61\x73\145\137\x73\x65\x72\x76\145\162\163")); goto E127e; E169e: $databaseServerEntity = $this->databaseServerEntityManager->findOneById($id); goto fa92a; aa707: Fd32b: goto Be4a2; D9574: } public function deleteDatabaseServer(Request $request) : Response { goto C9e00; cc9f2: try { goto C5204; C5204: $user = $this->getUser(); goto A6523; F65b8: $session->getFlashBag()->set("\x73\x75\143\143\x65\163\163", $this->translator->trans("\104\x61\164\141\x62\x61\x73\x65\x20\123\x65\x72\166\145\x72\40\x68\x61\x73\40\x62\145\145\x6e\40\144\x65\154\x65\164\145\x64\56")); goto Dec5a; A6523: $session = $request->getSession(); goto f0645; A3cd2: EventQueue::addEvent(EventQueue::EVENT_DATABASE_SERVER_DELETE, $user, $eventData, $request); goto F65b8; f0645: $this->databaseServerEntityManager->deleteEntity($databaseServerEntity); goto c8417; c8417: $eventData = ["\x68\x6f\x73\164" => $databaseServerEntity->getHost(), "\x75\x73\x65\x72\x4e\141\155\x65" => $databaseServerEntity->getUserName()]; goto A3cd2; Dec5a: } catch (\Exception $e) { $this->logger->exception($e); $session->getFlashBag()->set("\144\x61\x6e\x67\145\162", $this->translator->trans("\101\156\x20\x65\x72\162\157\x72\40\150\x61\163\40\157\x63\143\x75\162\x72\x65\144\x2c\40\x65\162\162\157\x72\x20\155\145\163\163\141\147\145\x3a\x20\45\x65\x72\162\x6f\x72\115\x65\x73\x73\141\147\x65\x25", ["\45\x65\x72\x72\157\x72\115\145\x73\x73\141\147\145\45" => $e->getMessage()])); } goto c1f54; C9e00: $id = (int) $request->get("\151\144"); goto a7935; a7935: $databaseServerEntity = $this->databaseServerEntityManager->findOneById($id); goto Babe9; c1f54: cf57d: goto d3ecd; Ed098: return $response; goto c7872; d3ecd: $response = $this->redirect($this->generateUrl("\x63\x6c\160\x5f\141\x64\x6d\x69\x6e\x5f\x64\141\x74\141\x62\x61\x73\x65\x5f\x73\145\x72\x76\x65\162\x73")); goto Ed098; Babe9: if (!(false === is_null($databaseServerEntity) && false === $databaseServerEntity->isDefault() && false === $databaseServerEntity->isActive())) { goto cf57d; } goto cc9f2; c7872: } }
