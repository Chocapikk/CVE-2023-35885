<?php
 namespace App\Controller\Admin; use Symfony\Component\Form\FormError; use Symfony\Component\HttpFoundation\Request; use Symfony\Component\HttpFoundation\Response; use Symfony\Component\Form\Extension\Core\Type\SubmitType; use Symfony\Component\Form\Form; use Twig\Environment as Twig; use Aws\Credentials\Credentials as AwsCredentials; use Aws\Ec2\Ec2Client; use Aws\Ec2\Exception\Ec2Exception; use App\Controller\Controller; use App\Aws\Ami as AwsAmi; use App\Aws\Instance as AwsInstance; use App\Entity\Manager\ConfigManager; use App\CloudPanel\Environment as CloudPanelEnvironment; use App\Event\EventQueue; class AwsController extends Controller { public function settings(Request $request, ConfigManager $configManager) : Response { goto Da1fd; Bc125: aab70: goto C603c; C603c: if (!(true === $imagesSettingsForm->isSubmitted())) { goto eab40; } goto a6b86; C69a2: $accessKeysForm = $this->createAccessKeysForm($accessKeys); goto D4ab3; a6b86: $response = $this->handleAwsImagesSettingsForm($request, $imagesSettingsForm, $configManager); goto d320a; Da1fd: $cloud = $configManager->get("\143\154\x6f\165\144"); goto e7640; e7640: if (!(CloudPanelEnvironment::CLOUD_PROVIDER_AWS != $cloud)) { goto F0987; } goto B00c7; D4ab3: $imagesSettingsForm = $this->createImagesSettingsForm($imagesSettings); goto Ea4d9; d320a: if (!(false === is_null($response))) { goto fb562; } goto C74c9; C1a80: $response = $this->render("\101\144\155\x69\x6e\57\101\167\163\x2f\123\x65\x74\164\x69\x6e\147\x73\57\x69\156\144\145\x78\x2e\x68\x74\x6d\154\56\164\167\x69\147", ["\x61\x63\x63\145\x73\x73\x4b\x65\171\x73\x46\157\x72\155" => $accessKeysForm->createView(), "\151\155\x61\x67\145\163\x53\x65\164\164\x69\156\147\x73\x46\x6f\x72\x6d" => $imagesSettingsForm->createView(), "\x66\x6f\162\155\x45\162\162\x6f\162\163" => $this->formErrors]); goto f3be2; dfe90: $accessKeys = ["\x61\143\x63\145\163\x73\x4b\x65\x79" => $configManager->get("\141\x77\x73\x5f\141\x63\143\145\x73\163\137\x6b\x65\x79"), "\163\145\x63\x72\145\x74\x41\143\143\x65\x73\x73\x4b\x65\171" => true === empty($configManager->get("\141\167\x73\x5f\x73\x65\x63\162\145\164\137\141\143\x63\145\x73\163\137\x6b\x65\171")) ? '' : sprintf("\45\163\x2a\52\52\x2a\52\x2a\x2a\52\x2a\x2a\x2a\52\x2a\x2a\x2a\52\52\52\52\x2a", substr($configManager->get("\x61\167\x73\137\163\145\x63\x72\x65\164\137\x61\x63\143\145\x73\163\137\153\145\x79"), 0, -20))]; goto c33ab; C6f63: ba3d7: goto Bc125; B947a: eab40: goto E12d2; f3be2: return $response; goto bfd21; C74c9: return $response; goto e002c; ff9e5: return $response; goto C6f63; c33ab: $imagesSettings = ["\141\x75\164\157\155\x61\x74\151\x63\111\x6d\x61\x67\145\163" => (bool) $configManager->get("\x61\x77\x73\x5f\x61\165\x74\157\155\141\164\x69\143\x5f\151\x6d\x61\147\145\x73"), "\146\162\x65\x71\165\x65\156\143\171" => false === is_null($configManager->get("\x61\x77\x73\x5f\151\155\x61\147\145\x73\x5f\146\x72\x65\x71\165\145\x6e\x63\171")) ? (int) $configManager->get("\141\x77\163\137\x69\x6d\141\147\x65\x73\137\146\162\145\161\x75\145\x6e\x63\x79") : 12, "\x72\145\164\145\x6e\164\x69\157\156\120\145\162\x69\x6f\x64" => false === is_null($configManager->get("\x61\x77\163\137\x69\x6d\141\147\x65\x73\x5f\x72\x65\164\145\x6e\x74\151\157\x6e\137\160\145\162\151\x6f\144")) ? (int) $configManager->get("\x61\167\163\137\x69\x6d\141\x67\145\x73\x5f\162\145\x74\145\x6e\164\x69\x6f\156\x5f\x70\145\x72\151\157\x64") : 7]; goto C69a2; F6c3e: $imagesSettingsForm->handleRequest($request); goto f55ac; d00f9: $accessKeysForm->handleRequest($request); goto F6c3e; Ea4d9: if (!(true === $request->isMethod("\120\117\123\124"))) { goto caa52; } goto d00f9; B2ebc: F0987: goto dfe90; B00c7: return $this->redirect($this->generateUrl("\143\154\x70\137\x61\x64\155\x69\156\x5f\x75\x73\x65\x72\163")); goto B2ebc; B4807: $response = $this->handleAccessKeysForm($request, $accessKeysForm, $configManager); goto Be23c; E12d2: caa52: goto C1a80; f55ac: if (!(true === $accessKeysForm->isSubmitted())) { goto aab70; } goto B4807; Be23c: if (!(false === is_null($response))) { goto ba3d7; } goto ff9e5; e002c: fb562: goto B947a; bfd21: } private function createAccessKeysForm(array $data) : Form { goto F5302; Abf82: return $form; goto ddc15; Be5eb: $form->add("\x73\165\x62\155\x69\164", SubmitType::class, ["\x61\x74\164\162" => ["\x63\x6c\141\x73\163" => "\142\x74\156\40\142\164\x6e\x2d\x62\x6c\165\145\40\142\x74\x6e\55\154\147"], "\154\141\x62\x65\154" => "\123\141\166\145"]); goto Abf82; F5302: $form = $this->createForm("\101\160\160\x5c\106\157\x72\155\134\x41\144\x6d\x69\x6e\x41\167\x73\x41\x63\x63\x65\x73\x73\x4b\145\x79\x73\124\171\160\145", $data, ["\141\143\x74\151\x6f\156" => $this->generateUrl("\x63\x6c\160\137\141\144\x6d\x69\156\137\141\167\163\137\163\145\x74\164\151\156\x67\x73"), "\155\x65\164\150\x6f\144" => "\120\117\123\x54", "\141\x74\164\162" => []]); goto Be5eb; ddc15: } private function createImagesSettingsForm(array $data) : Form { goto E5ffa; c013a: return $form; goto f10ce; Bc028: $form->add("\163\165\x62\x6d\x69\x74", SubmitType::class, ["\x61\164\x74\162" => ["\x63\x6c\141\163\x73" => "\142\x74\156\x20\x62\164\156\55\142\x6c\165\x65\x20\x62\164\156\x2d\154\147"], "\154\x61\142\145\154" => "\123\141\166\145"]); goto c013a; E5ffa: $form = $this->createForm("\x41\x70\x70\x5c\106\157\x72\x6d\x5c\101\x64\155\151\x6e\101\167\163\x49\155\141\x67\145\163\123\145\x74\x74\x69\x6e\147\163\x54\171\x70\x65", $data, ["\x61\143\164\x69\x6f\156" => $this->generateUrl("\143\154\160\x5f\x61\144\x6d\151\x6e\137\x61\x77\163\137\163\x65\x74\164\x69\156\147\x73"), "\155\x65\164\x68\157\x64" => "\x50\x4f\123\x54", "\141\x74\164\x72" => []]); goto Bc028; f10ce: } private function handleAccessKeysForm(Request $request, Form $form, ConfigManager $configManager) { goto C9f4e; e4806: b17cd: goto F7332; C9f4e: $validAccessKeys = $this->validateAccessKeys($request, $form); goto Fbcf5; Aafc1: if (true === $form->isValid()) { goto Dc732; } goto d9e00; e602e: $form->addError(new FormError($this->translator->trans("\101\127\123\40\x41\x63\x63\x65\x73\163\40\x4b\x65\x79\163\x20\141\162\x65\x20\x6e\157\x74\x20\x76\141\x6c\151\144\x2e"))); goto F00d2; A2421: Dc732: goto f4351; F00d2: b1e92: goto Aafc1; f80da: goto b17cd; goto A2421; Fbcf5: if (!(false === $validAccessKeys)) { goto b1e92; } goto e602e; f4351: try { goto Fa7ea; eca4f: return $response; goto Bf3ff; B46d7: $secretAccessKey = $form->get("\163\x65\143\162\x65\x74\x41\143\143\x65\x73\163\x4b\x65\171")->getData(); goto Bfbeb; Fa7ea: $user = $this->getUser(); goto f37bf; cfe6b: $accessKey = $form->get("\141\143\x63\x65\x73\x73\x4b\x65\x79")->getData(); goto B46d7; bdc6b: EventQueue::addEvent(EventQueue::EVENT_AWS_ACCESS_KEYS_UPDATE, $user, $eventData, $request); goto Cedea; c4ae6: $response = $this->redirect($this->generateUrl("\143\154\x70\137\141\x64\x6d\151\x6e\137\x61\x77\163\137\x73\145\164\x74\x69\x6e\x67\x73")); goto eca4f; Cedea: $session->getFlashBag()->set("\163\x75\143\143\x65\163\x73", $this->translator->trans("\x41\127\x53\x20\x41\143\x63\x65\163\163\40\x4b\x65\171\x73\x20\150\141\166\145\40\x62\x65\145\x6e\40\x73\x61\166\145\x64\56")); goto c4ae6; f37bf: $session = $request->getSession(); goto cfe6b; C319a: $eventData = ["\141\x63\143\x65\163\163\x4b\x65\171" => sprintf("\45\163\x2a\x2a\x2a\x2a", substr($accessKey, 0, -4)), "\x73\x65\x63\162\145\164\x41\143\143\x65\163\x73\113\x65\171" => sprintf("\x25\x73\52\x2a\x2a\52", substr($secretAccessKey, 0, -4))]; goto bdc6b; b3b15: $configManager->set("\141\x77\x73\137\x73\x65\x63\x72\x65\x74\x5f\x61\x63\143\145\163\163\x5f\153\x65\x79", $secretAccessKey); goto C319a; Bfbeb: $configManager->set("\141\167\163\137\141\143\x63\145\x73\x73\x5f\x6b\145\x79", $accessKey); goto b3b15; Bf3ff: } catch (\Exception $e) { $this->logger->exception($e); $session->getFlashBag()->set("\144\x61\x6e\147\x65\x72", $this->translator->trans("\101\x6e\x20\145\162\x72\x6f\162\40\x68\x61\x73\40\157\x63\x63\165\162\162\x65\x64\54\40\x65\x72\162\x6f\x72\40\155\x65\163\163\x61\x67\x65\x3a\40\45\x65\162\162\x6f\162\x4d\x65\163\x73\x61\147\145\x25", ["\45\x65\x72\x72\x6f\162\115\x65\x73\x73\141\147\x65\45" => $e->getMessage()])); } goto e4806; d9e00: $this->formErrors = $this->getErrorMessages($form); goto f80da; F7332: } private function handleAwsImagesSettingsForm(Request $request, Form $form, ConfigManager $configManager) { goto Dd31f; f219d: try { goto A350b; f0ce7: $eventData = ["\x61\x75\x74\x6f\155\x61\164\x69\143\111\155\141\147\145\163" => $automaticImages, "\146\x72\145\x71\x75\145\156\x63\171" => $frequency, "\x72\x65\164\145\x6e\x74\151\157\x6e\x50\145\x72\x69\157\x64" => $retentionPeriod]; goto f4b66; B3633: $configManager->set("\141\167\x73\x5f\151\x6d\x61\x67\x65\163\137\162\x65\x74\145\156\164\151\x6f\156\137\160\145\x72\151\x6f\x64", $retentionPeriod); goto f0ce7; f4b66: EventQueue::addEvent(EventQueue::EVENT_AWS_IMAGES_SETTINGS_UPDATE, $user, $eventData, $request); goto ed039; f6cb2: $session = $request->getSession(); goto Ffa35; A350b: $user = $this->getUser(); goto f6cb2; ceaf3: return $response; goto D9ffd; f5d5d: $response = $this->redirect($this->generateUrl("\143\x6c\x70\x5f\141\x64\x6d\x69\156\137\141\x77\163\x5f\163\x65\x74\x74\151\x6e\x67\163")); goto ceaf3; a1200: $retentionPeriod = (int) $form->get("\162\145\164\145\x6e\x74\x69\157\x6e\x50\145\x72\x69\157\x64")->getData(); goto E26fc; Ffa35: $automaticImages = (int) $form->get("\141\165\164\157\155\141\164\x69\x63\111\x6d\141\x67\145\x73")->getData(); goto F3094; E26fc: $configManager->set("\141\x77\x73\137\x61\165\x74\157\155\x61\x74\x69\x63\137\151\155\141\x67\145\x73", $automaticImages); goto b01b4; ed039: $session->getFlashBag()->set("\163\x75\x63\143\145\163\x73", $this->translator->trans("\111\155\141\x67\x65\x73\x20\123\x65\164\164\151\x6e\x67\x73\40\x68\141\x76\145\40\142\145\x65\156\40\x73\141\166\x65\144\56")); goto f5d5d; b01b4: $configManager->set("\x61\x77\x73\x5f\x69\155\141\x67\145\x73\137\x66\162\x65\x71\x75\x65\x6e\143\x79", $frequency); goto B3633; F3094: $frequency = (int) $form->get("\x66\162\x65\161\x75\x65\156\x63\171")->getData(); goto a1200; D9ffd: } catch (\Exception $e) { $this->logger->exception($e); $session->getFlashBag()->set("\x64\x61\x6e\147\145\x72", $this->translator->trans("\x41\156\x20\145\x72\162\x6f\162\40\150\x61\163\x20\x6f\143\143\x75\162\162\145\144\54\x20\145\162\x72\157\162\40\x6d\x65\163\x73\x61\147\145\x3a\x20\45\145\162\162\x6f\162\x4d\145\x73\x73\x61\147\x65\45", ["\x25\145\x72\162\157\162\x4d\x65\163\163\141\x67\x65\x25" => $e->getMessage()])); } goto c10ca; c10ca: D3fc5: goto a4d34; Dd31f: if (true === $form->isValid()) { goto Cf384; } goto Cf3cb; D90a2: Cf384: goto f219d; Cf3cb: $this->formErrors = $this->getErrorMessages($form); goto b5835; b5835: goto D3fc5; goto D90a2; a4d34: } public function images(Request $request) : Response { $response = $this->render("\x41\x64\155\151\x6e\x2f\101\x77\x73\x2f\111\155\x61\147\145\x73\x2f\x69\x6e\144\145\x78\56\150\x74\x6d\154\56\x74\x77\151\147", ["\146\157\x72\x6d\x45\162\x72\x6f\x72\x73" => $this->formErrors]); return $response; } public function createImage(Request $request, ConfigManager $configManager) : Response { goto F0f98; Ed9da: if (!(true === $request->isMethod("\x50\x4f\123\124"))) { goto C9b3e; } goto e3a95; F1422: return $response; goto e9b41; C23e2: if (!(false === $request->isMethod("\120\x4f\123\124"))) { goto Cf340; } goto Dd03d; F0f98: $cloud = $configManager->get("\143\154\x6f\165\x64"); goto f5a03; e2f3f: if (!(true === $form->isSubmitted())) { goto Ef6ca; } goto Ee2fa; C376a: Ef6ca: goto c453d; B869c: return $response; goto Fda91; fb0d5: return $this->redirect($this->generateUrl("\143\x6c\160\137\x61\x64\155\151\x6e\137\165\163\145\162\163")); goto f7bdb; f7bdb: d2d13: goto D5c85; e3a95: $form->handleRequest($request); goto e2f3f; e73ce: $response = $this->render("\x41\144\155\x69\156\x2f\101\x77\163\x2f\x49\x6d\x61\x67\145\x73\x2f\x63\x72\145\x61\x74\145\x2e\150\164\155\x6c\x2e\164\167\x69\x67", ["\146\x6f\162\155\105\x72\162\x6f\x72\x73" => $this->formErrors, "\146\x6f\162\155" => $form->createView()]); goto B869c; D5c85: $data = []; goto Fdec0; Ee2fa: $response = $this->handleCreateImageForm($request, $form, $configManager); goto E6186; Fdec0: $instance = $request->attributes->get("\x69\156\163\x74\141\x6e\x63\145"); goto D4073; c453d: C9b3e: goto e73ce; Dd03d: try { goto b4ca7; Aeb3d: $instances = $result["\x52\x65\163\x65\x72\166\141\x74\151\x6f\x6e\163"][0]["\111\x6e\x73\x74\x61\x6e\x63\x65\163"] ?? []; goto df8c0; Dca8f: b6243: goto dc4ef; c2a8f: $region = $instance->getRegion(); goto f573d; Ca4be: $tags = (array) $instance["\x54\x61\147\163"] ?? []; goto ed78e; b4ca7: $session = $request->getSession(); goto c2a8f; a1f51: $secretAccessKey = $configManager->get("\x61\167\163\x5f\163\x65\x63\162\145\x74\137\141\x63\143\x65\x73\x73\137\153\145\x79"); goto f12c0; F1b56: goto b6243; goto C740b; df8c0: $instance = $instances[0] ?? []; goto a627f; d7534: $data["\156\x61\x6d\x65"] = sprintf("\45\x73\137\x63\x6c\160\137\45\x73", strtolower($instanceName), $dateTime->getTimestamp()); goto Dca8f; f12c0: $ec2Client = $this->getEc2Client($region, $accessKey, $secretAccessKey); goto Dbee1; ed78e: $awsInstance->setTags($tags); goto F2b03; a627f: if (!(false == empty($instance))) { goto b52cb; } goto a8ca6; a8ca6: $awsInstance = new AwsInstance(); goto Ca4be; F2b03: $instanceName = $awsInstance->getInstanceName(); goto D1fce; dc4ef: b52cb: goto b05d2; C740b: e86ed: goto d7534; f573d: $accessKey = $configManager->get("\141\167\163\137\141\143\143\x65\163\x73\x5f\x6b\145\171"); goto a1f51; Dbee1: $result = $ec2Client->describeInstances(["\111\156\163\x74\x61\x6e\x63\x65\111\144\x73" => [$instanceId]]); goto Aeb3d; a59e1: if (false === empty($instanceName)) { goto e86ed; } goto Ea6c5; D1fce: $dateTime = new \DateTime(); goto a59e1; Ea6c5: $data["\x6e\141\155\x65"] = sprintf("\x25\x73\137\143\x6c\x70\137\45\163", $instanceId, $dateTime->getTimestamp()); goto F1b56; b05d2: } catch (\Exception $e) { goto Cc55d; D4ab0: $session->getFlashBag()->set("\144\141\x6e\147\145\162", $this->translator->trans("\x41\127\x53\40\x41\143\143\x65\163\x73\x20\113\145\171\163\x20\141\162\145\40\x6e\157\x74\40\166\x61\x6c\x69\144\56")); goto eef4b; Cc55d: if (!$e instanceof Ec2Exception) { goto Fd5e7; } goto D4ab0; eef4b: $response = $this->redirect($this->generateUrl("\x63\154\x70\137\x61\144\x6d\151\156\x5f\x61\167\x73\x5f\163\x65\164\164\x69\x6e\147\x73")); goto A1578; b57ea: Fd5e7: goto Fe942; A1578: return $response; goto b57ea; Fe942: } goto a633f; E6186: if (!(false === is_null($response))) { goto e7877; } goto F1422; ac4b3: $form = $this->createImageForm($data); goto Ed9da; f5a03: if (!(CloudPanelEnvironment::CLOUD_PROVIDER_AWS != $cloud)) { goto d2d13; } goto fb0d5; D4073: $instanceId = $instance->getInstanceId(); goto C23e2; e9b41: e7877: goto C376a; a633f: Cf340: goto ac4b3; Fda91: } private function createImageForm(array $data) : Form { goto dc6e3; dc6e3: $form = $this->createForm("\x41\160\160\x5c\106\157\x72\x6d\x5c\101\144\x6d\x69\156\x41\x77\163\111\155\x61\x67\x65\x54\x79\x70\x65", $data, ["\x61\143\x74\x69\x6f\156" => $this->generateUrl("\143\154\160\x5f\141\x64\155\151\x6e\137\141\x77\163\x5f\151\x6d\x61\x67\145\137\x63\162\x65\x61\164\x65"), "\155\x65\x74\150\x6f\x64" => "\120\x4f\123\x54", "\141\x74\x74\x72" => []]); goto f6d03; ab0d8: return $form; goto Db7ba; f6d03: $form->add("\163\x75\142\x6d\151\164", SubmitType::class, ["\141\x74\x74\162" => ["\143\154\x61\163\x73" => "\142\x74\156\40\142\164\156\x2d\142\x6c\165\145\x20\142\x74\x6e\55\x6c\x67"], "\154\141\142\x65\154" => "\x43\x72\145\x61\x74\x65"]); goto ab0d8; Db7ba: } private function handleCreateImageForm(Request $request, Form $form, ConfigManager $configManager) { goto A0c22; B90f3: try { goto e403d; Ebd51: $session = $request->getSession(); goto A3e7b; d253d: $instanceUid = $configManager->get("\151\x6e\x73\x74\x61\x6e\x63\145\x5f\x75\151\x64"); goto D50a1; b015f: $region = $instance->getRegion(); goto Aeb04; Ee85e: $imageId = $this->retry(function () use($ec2Client, $imageConfiguration) { goto e6a80; e6a80: $result = $ec2Client->createImage($imageConfiguration); goto b82ed; D12ba: return $imageId; goto fbad3; b82ed: $imageId = $result["\x49\155\141\x67\x65\x49\144"] ?? ''; goto D12ba; fbad3: }); goto dc34c; e403d: $user = $this->getUser(); goto Ebd51; Aeb04: $accessKey = $configManager->get("\x61\x77\163\x5f\141\x63\143\x65\163\x73\x5f\x6b\x65\x79"); goto d81dd; a3f01: $session->getFlashBag()->set("\163\x75\x63\x63\145\x73\163", $this->translator->trans("\x49\155\x61\147\145\x20\151\163\x20\x62\145\151\156\x67\40\143\x72\145\141\164\x65\144\x2e")); goto b17ba; D3948: $instanceId = $instance->getInstanceId(); goto b015f; c601a: $imageConfiguration = ["\x49\156\163\x74\x61\x6e\143\x65\111\x64" => $instanceId, "\x4e\141\x6d\x65" => $imageName, "\x4e\x6f\122\x65\x62\x6f\157\x74" => true]; goto Ee85e; dc34c: $this->retry(function () use($instanceUid, $imageId, $ec2Client) { $ec2Client->createTags(["\x52\x65\x73\157\165\x72\x63\145\163" => [$imageId], "\x54\x61\x67\x73" => [["\113\145\171" => "\x49\156\163\x74\141\x6e\x63\145\x55\x69\144", "\126\x61\154\165\x65" => $instanceUid], ["\113\x65\x79" => "\x54\x79\x70\145", "\x56\x61\x6c\165\145" => AwsAmi::TYPE_MANUAL], ["\x4b\x65\x79" => "\103\x72\145\141\164\145\x64\102\x79", "\126\x61\x6c\165\145" => "\103\x6c\157\x75\144\120\141\x6e\x65\x6c"]]]); }); goto De0f3; A3e7b: $imageName = $form->get("\156\141\x6d\x65")->getData(); goto a14cd; a14cd: $instance = $request->attributes->get("\151\156\163\x74\x61\156\143\x65"); goto D3948; Dead0: return $response; goto f2ac1; De0f3: $eventData = ["\x69\x6d\x61\147\x65\x49\144" => $imageId, "\x69\x6d\141\x67\145\116\141\x6d\x65" => $imageName]; goto A900e; b17ba: $response = $this->redirect($this->generateUrl("\143\x6c\160\x5f\x61\x64\155\x69\156\x5f\141\x77\163\x5f\x69\155\141\147\x65\163")); goto Dead0; D50a1: $ec2Client = $this->getEc2Client($region, $accessKey, $secretAccessKey); goto c601a; d81dd: $secretAccessKey = $configManager->get("\x61\167\163\137\x73\145\x63\x72\x65\164\x5f\x61\x63\x63\145\x73\163\137\x6b\145\171"); goto d253d; A900e: EventQueue::addEvent(EventQueue::EVENT_AWS_IMAGE_CREATE, $user, $eventData, $request); goto a3f01; f2ac1: } catch (\Exception $e) { $this->logger->exception($e); $session->getFlashBag()->set("\x64\x61\156\x67\145\x72", $this->translator->trans("\x41\x6e\x20\145\162\x72\157\162\x20\150\x61\163\x20\157\143\143\165\162\162\x65\144\54\40\145\x72\x72\x6f\x72\40\x6d\x65\x73\x73\141\147\145\72\x20\45\x65\162\x72\x6f\x72\x4d\145\163\x73\141\147\145\45", ["\45\x65\162\162\157\x72\x4d\x65\163\x73\141\147\145\45" => $e->getMessage()])); } goto C3b39; A0c22: if (true === $form->isValid()) { goto D2097; } goto e3bc6; Eb5dd: D2097: goto B90f3; e3bc6: $this->formErrors = $this->getErrorMessages($form); goto bd584; bd584: goto Cd5d0; goto Eb5dd; C3b39: Cd5d0: goto E7db1; E7db1: } public function loadImages(Request $request, ConfigManager $configManager, Twig $twig) : Response { goto a7432; E579f: try { goto f55cd; F53d3: if (!(false === empty($awsImages))) { goto Aaf60; } goto d3fd4; a682f: $images = []; goto D49e6; Cc3ae: $accessKey = $configManager->get("\x61\167\x73\137\x61\143\x63\145\163\163\x5f\x6b\145\171"); goto E0d66; Bc3f9: a9542: goto Ff5b0; Dc132: a3ee4: goto Aa114; F2111: if (!(false === empty($accessKey))) { goto a9542; } goto Ca076; E0d66: $secretAccessKey = $configManager->get("\x61\167\163\137\163\145\x63\162\x65\164\137\x61\x63\143\145\163\x73\x5f\x6b\145\x79"); goto F2111; a53bc: $tagFilter = [["\116\141\155\145" => "\x74\x61\147\x3a\x49\x6e\x73\164\x61\156\x63\145\x55\x69\144", "\126\x61\154\165\145\x73" => [$instanceUid]]]; goto C9ba3; Ea772: $data["\x69\155\x61\x67\x65\x73\110\x74\155\x6c"] = $imagesHtml; goto A3671; D49e6: $instance = $request->attributes->get("\x69\x6e\163\164\x61\156\143\x65"); goto D08c1; b0fe8: $ec2Client = $this->getEc2Client($region, $accessKey, $secretAccessKey); goto a53bc; cc303: $awsImages = (array) $result->get("\x49\155\x61\x67\x65\x73"); goto F53d3; C9ba3: $result = $ec2Client->describeImages(["\106\151\154\164\145\162\x73" => $tagFilter]); goto cc303; D08c1: $region = $instance->getRegion(); goto Cc3ae; Ff5b0: $imagesHtml = $twig->render("\x41\144\155\x69\x6e\57\101\167\163\x2f\111\x6d\x61\147\x65\163\57\x69\155\141\147\x65\163\x2d\x6c\151\163\164\x2e\150\164\155\154\x2e\164\167\x69\147", ["\x75\x73\x65\162" => $user, "\151\x6d\x61\x67\145\163" => $images]); goto Ea772; Acad8: usort($images, function ($a, $b) { return $a->getCreatedAt() < $b->getCreatedAt(); }); goto Bc3f9; f55cd: $user = $this->getUser(); goto a682f; Aa114: Aaf60: goto Acad8; d3fd4: foreach ($awsImages as $awsImage) { goto c4f23; f00a7: $awsAmi->setTags($tags); goto c5e4e; e2da4: $awsAmi->setName($name); goto dec15; E86b0: $name = $awsImage["\x4e\141\155\145"] ?? ''; goto Ee193; Ee87e: $awsAmi->setAmiId($imageId); goto A44a8; C6dd4: $createdAt->setTimezone(new \DateTimeZone("\125\124\x43")); goto D88d3; dec15: $awsAmi->setDescription($description); goto Af172; c5e4e: $images[] = $awsAmi; goto Ffb20; C945e: $state = $awsImage["\x53\x74\x61\x74\145"] ?? ''; goto ba9b9; Af172: $awsAmi->setState($state); goto f00a7; A26b5: $awsAmi = new AwsAmi(); goto Ee87e; ba9b9: $createdAt = true === isset($awsImage["\x43\162\x65\x61\164\x69\157\x6e\x44\141\x74\145"]) ? new \DateTime($awsImage["\x43\x72\x65\x61\164\x69\x6f\x6e\x44\141\x74\x65"]) : new \DateTime(); goto C6dd4; A44a8: $awsAmi->setCreatedAt($createdAt); goto e2da4; c4f23: $imageId = $awsImage["\x49\x6d\141\147\145\111\144"] ?? ''; goto C945e; Ee193: $tags = true === isset($awsImage["\124\x61\147\163"]) && true === is_array($awsImage["\124\x61\x67\163"]) ? $awsImage["\x54\141\x67\163"] : []; goto A26b5; D88d3: $description = $awsImage["\x44\x65\x73\x63\162\x69\x70\164\151\x6f\x6e"] ?? ''; goto E86b0; Ffb20: e689e: goto af720; af720: } goto Dc132; Ca076: $instanceUid = $configManager->get("\x69\156\x73\x74\x61\156\x63\145\137\x75\x69\x64"); goto b0fe8; A3671: } catch (\Exception $e) { $errorMessage = $twig->render("\101\x64\155\x69\x6e\x2f\x41\x77\x73\x2f\120\x61\162\164\151\141\x6c\x2f\x65\x72\162\x6f\162\x2d\x6d\145\x73\163\141\x67\x65\x2e\x68\164\x6d\x6c\x2e\x74\x77\151\147", ["\145\x72\x72\157\x72\115\x65\x73\x73\x61\147\145" => $e->getMessage()]); $data["\145\162\x72\x6f\x72\x4d\145\x73\163\141\147\145"] = $errorMessage; } goto B4422; a7432: $data = []; goto B0c4b; B0c4b: if (!(true === $request->isXmlHttpRequest())) { goto a0a2c; } goto E579f; Db256: return $this->json($data); goto e9f6f; B4422: a0a2c: goto Db256; e9f6f: } public function deleteImage(Request $request, ConfigManager $configManager) : Response { goto E766a; a3df9: if (!(CloudPanelEnvironment::CLOUD_PROVIDER_AWS != $cloud)) { goto a9f9c; } goto Ed4c9; E766a: $cloud = $configManager->get("\x63\x6c\157\165\144"); goto a3df9; Ed4c9: return $this->redirect($this->generateUrl("\x63\x6c\160\137\141\144\155\151\156\x5f\165\x73\145\162\163")); goto B6069; Fcbea: $imageId = trim($request->get("\151\x64")); goto C85c4; C85c4: if (!(false === empty($imageId))) { goto D7068; } goto b1ca1; c7b00: return $response; goto Dd7b6; b1ca1: try { goto Cbb8c; a02a2: if (false === empty($image)) { goto e2ab5; } goto bc504; C50d9: $secretAccessKey = $configManager->get("\x61\167\163\x5f\163\145\143\x72\145\x74\137\x61\x63\143\x65\x73\x73\x5f\x6b\145\x79"); goto fa0ed; Cbb8c: $session = $request->getSession(); goto c1b65; A1e14: $session->getFlashBag()->set("\163\165\143\143\145\163\x73", $this->translator->trans("\111\155\x61\147\145\40\151\x73\40\x62\x65\151\x6e\147\x20\x64\145\154\145\164\x65\144\x2e")); goto Dc9c8; Dc9c8: E884e: goto fe61d; c687f: B9baf: goto fbcbb; Ad0f9: $images = (array) $result->get("\x49\x6d\141\147\x65\x73"); goto df83b; df83b: $image = $images[0] ?? []; goto a02a2; c1b65: $user = $this->getUser(); goto b3a40; A6ff6: $region = $instance->getRegion(); goto A4860; Fab80: $blockDeviceMappings = $image["\x42\154\157\x63\153\104\x65\166\x69\143\145\x4d\x61\x70\x70\x69\x6e\x67\x73"] ?? []; goto a9b83; C5d8f: EventQueue::addEvent(EventQueue::EVENT_AWS_IMAGE_DELETE, $user, $eventData, $request); goto A1e14; Eca54: $this->retry(function () use($ec2Client, $imageId) { $ec2Client->deregisterImage(["\111\x6d\x61\147\x65\111\144" => $imageId]); }); goto Fab80; b6e72: $result = $ec2Client->describeImages(["\x46\x69\154\164\x65\x72\x73" => [["\116\141\155\145" => "\151\155\x61\147\x65\x2d\151\144", "\126\141\154\165\x65\163" => [$imageId]]]]); goto Ad0f9; d9d23: e2ab5: goto C2b02; C2b02: $imageName = $image["\x4e\x61\155\x65"] ?? ''; goto Eca54; Efedc: F19aa: goto c687f; fbcbb: $eventData = ["\151\155\x61\x67\x65\x49\144" => $imageId, "\151\155\141\147\x65\116\x61\x6d\x65" => $imageName]; goto C5d8f; A4860: $accessKey = $configManager->get("\x61\167\163\x5f\x61\143\x63\145\x73\163\137\x6b\145\x79"); goto C50d9; b3a40: $instance = $request->attributes->get("\151\156\163\164\141\x6e\x63\145"); goto A6ff6; A4661: foreach ($blockDeviceMappings as $blockDevice) { goto Ff01c; e6223: f3bbe: goto A1c0a; B76f5: $this->retry(function () use($ec2Client, $snapshotId) { $ec2Client->deleteSnapshot(["\x53\x6e\x61\x70\x73\150\157\164\111\144" => $snapshotId]); }); goto e285a; e285a: d3519: goto e6223; Ff01c: $snapshotId = $blockDevice["\x45\142\163"]["\x53\156\141\x70\x73\x68\157\164\x49\144"] ?? null; goto C2fd1; C2fd1: if (!(false === is_null($snapshotId))) { goto d3519; } goto B76f5; A1c0a: } goto Efedc; c6a14: goto E884e; goto d9d23; a9b83: if (!(false == empty($blockDeviceMappings) && true === is_array($blockDeviceMappings))) { goto B9baf; } goto A4661; bc504: throw new \Exception(sprintf("\x41\115\x49\x20\42\x25\163\x22\x20\144\157\x65\163\40\156\157\x74\40\145\170\x69\x73\x74", $imageId)); goto c6a14; fa0ed: $ec2Client = $this->getEc2Client($region, $accessKey, $secretAccessKey); goto b6e72; fe61d: } catch (\Exception $e) { $session->getFlashBag()->set("\x64\141\156\147\145\x72", $this->translator->trans("\101\156\40\x65\x72\162\x6f\162\40\150\x61\x73\40\157\x63\143\x75\162\x72\145\x64\x2c\x20\145\x72\162\157\162\x20\155\x65\163\163\141\x67\145\72\40\45\x65\162\x72\x6f\162\x4d\145\x73\163\141\x67\x65\x25", ["\x25\x65\162\162\157\x72\115\x65\x73\x73\x61\147\x65\x25" => $e->getMessage()])); } goto C5ab5; d7080: $response = $this->redirect($this->generateUrl("\143\x6c\x70\137\141\144\x6d\x69\x6e\x5f\141\x77\x73\137\151\x6d\141\x67\x65\x73")); goto c7b00; B6069: a9f9c: goto Fcbea; C5ab5: D7068: goto d7080; Dd7b6: } private function validateAccessKeys(Request $request, Form $form) : bool { try { goto Dd475; Dc59e: $region = $instance->getRegion(); goto b2309; b6a5a: $accessKey = $form->get("\141\x63\143\x65\x73\x73\x4b\145\x79")->getData(); goto fd53a; Dd475: $accessKeysValid = false; goto ce14c; B4ada: $result = $ec2Client->describeSecurityGroups(); goto f28c1; c45a5: $credentials = new AwsCredentials($accessKey, $secretAccessKey); goto Dc59e; fd53a: $secretAccessKey = $form->get("\163\x65\x63\x72\145\164\101\143\x63\145\163\x73\113\x65\171")->getData(); goto c45a5; b2309: $ec2Client = new Ec2Client(["\x76\x65\162\x73\x69\x6f\x6e" => "\x6c\141\x74\x65\x73\x74", "\162\x65\x67\151\157\156" => $region, "\143\162\x65\144\x65\x6e\164\151\x61\154\163" => $credentials]); goto B4ada; ce14c: $instance = $request->attributes->get("\151\156\x73\164\141\x6e\143\x65"); goto b6a5a; f28c1: $accessKeysValid = true; goto d45f4; d45f4: } catch (\Exception $e) { $accessKeysValid = false; } return $accessKeysValid; } private function getEc2Client($region, $accessKey, $secretAccessKey) : Ec2Client { goto c92bc; d122b: return $ec2Client; goto Ebcc1; c92bc: $credentials = new AwsCredentials($accessKey, $secretAccessKey); goto dff27; dff27: $ec2Client = new Ec2Client(["\x76\x65\x72\x73\151\x6f\156" => "\x6c\141\164\x65\x73\164", "\x72\x65\147\x69\157\x6e" => $region, "\x63\x72\x65\x64\145\x6e\x74\151\x61\x6c\163" => $credentials]); goto d122b; Ebcc1: } }
