<?php
 namespace App\Controller\Admin; use Symfony\Component\Form\FormError; use Symfony\Component\HttpFoundation\Request; use Symfony\Component\HttpFoundation\Response; use Symfony\Component\Form\Extension\Core\Type\SubmitType; use Symfony\Component\Form\Form; use Twig\Environment as Twig; use App\Controller\Controller; use App\Entity\Manager\ConfigManager; use App\CloudPanel\Environment as CloudPanelEnvironment; use App\Event\EventQueue; class VultrController extends Controller { public function settings(Request $request, ConfigManager $configManager) : Response { goto ad81f; B935a: $apiKeyForm->handleRequest($request); goto Fe99f; e31a1: if (!(true === $request->isMethod("\120\x4f\x53\124"))) { goto fc9df; } goto B935a; F857a: if (!(CloudPanelEnvironment::CLOUD_PROVIDER_VULTR != $cloud)) { goto E53a0; } goto d6acc; E5650: if (!(false === is_null($response))) { goto ff22b; } goto B3e63; Cbb2a: $apiKeyForm = $this->createApiKeyForm($apiKey); goto c87fb; C548b: $apiKey = ["\x61\160\x69\113\x65\171" => true === empty($configManager->get("\x76\x75\x6c\x74\x72\137\141\x70\x69\137\x6b\x65\x79")) ? '' : sprintf("\x25\163\x2a\52\52\52\x2a\52\52\x2a\x2a\52\x2a\x2a\52\52\x2a\x2a\x2a\52\52\x2a", substr($configManager->get("\166\x75\x6c\164\162\137\x61\x70\x69\x5f\153\145\171"), 0, -20))]; goto da7ab; a794b: ff22b: goto C829e; da7ab: $snapshotsSettings = ["\141\x75\164\157\155\x61\164\151\143\123\x6e\141\160\x73\150\157\x74\x73" => (bool) $configManager->get("\x76\165\154\x74\x72\x5f\141\x75\x74\x6f\x6d\x61\164\151\x63\137\163\156\141\x70\x73\150\x6f\x74\x73"), "\x66\x72\x65\x71\165\145\156\x63\x79" => false === is_null($configManager->get("\x76\165\x6c\x74\162\137\163\x6e\141\160\x73\x68\x6f\x74\163\137\x66\x72\x65\x71\x75\145\156\x63\171")) ? (int) $configManager->get("\x76\165\x6c\164\162\137\163\156\141\160\163\150\157\164\163\137\x66\162\x65\161\165\145\156\143\x79") : 12, "\x72\x65\164\145\156\164\151\157\x6e\120\x65\162\x69\157\144" => false === is_null($configManager->get("\x76\x75\154\x74\x72\x5f\163\x6e\x61\x70\x73\150\x6f\x74\x73\x5f\x72\x65\164\x65\156\x74\x69\157\156\x5f\160\145\162\151\x6f\144")) ? (int) $configManager->get("\x76\x75\x6c\164\162\137\163\156\141\x70\163\150\x6f\164\163\x5f\162\x65\x74\x65\156\164\x69\157\156\x5f\160\x65\x72\151\x6f\x64") : 7]; goto Cbb2a; C829e: A398b: goto f449e; f449e: fc9df: goto Eaf49; c87fb: $snapshotsSettingsForm = $this->createSnapshotsSettingsForm($snapshotsSettings); goto e31a1; d399c: if (!(true === $snapshotsSettingsForm->isSubmitted())) { goto A398b; } goto d1bda; f6ea8: if (!(false === is_null($response))) { goto C2c4a; } goto e3a90; efc9b: return $response; goto E5ac4; Fe99f: $snapshotsSettingsForm->handleRequest($request); goto cc321; e3a90: return $response; goto cceed; cc321: if (!(true === $apiKeyForm->isSubmitted())) { goto B6e4e; } goto e262c; cceed: C2c4a: goto B3d33; ad81f: $cloud = $configManager->get("\143\154\x6f\x75\144"); goto F857a; Eaf49: $response = $this->render("\x41\x64\155\x69\156\57\126\165\154\164\x72\57\x53\145\164\164\151\156\147\x73\57\x69\x6e\144\x65\170\56\x68\164\x6d\x6c\56\x74\x77\x69\147", ["\141\160\x69\x4b\x65\171\x46\x6f\162\x6d" => $apiKeyForm->createView(), "\x73\156\141\160\163\x68\x6f\164\x73\x53\x65\164\164\x69\156\x67\x73\x46\x6f\x72\155" => $snapshotsSettingsForm->createView(), "\x66\x6f\x72\x6d\x45\162\x72\x6f\162\163" => $this->formErrors]); goto efc9b; B3d33: B6e4e: goto d399c; e262c: $response = $this->handleApiKeyForm($request, $apiKeyForm, $configManager); goto f6ea8; B3e63: return $response; goto a794b; d6acc: return $this->redirect($this->generateUrl("\x63\154\x70\x5f\141\144\x6d\151\156\x5f\165\x73\x65\x72\163")); goto ade0b; ade0b: E53a0: goto C548b; d1bda: $response = $this->handleSnapshotsSettingsForm($request, $snapshotsSettingsForm, $configManager); goto E5650; E5ac4: } private function createApiKeyForm(array $data) : Form { goto B9950; ce5e0: return $form; goto C9e44; b2666: $form->add("\x73\x75\x62\x6d\x69\x74", SubmitType::class, ["\x61\x74\x74\x72" => ["\143\154\141\163\163" => "\142\x74\x6e\x20\x62\x74\x6e\55\x62\154\165\x65\x20\142\164\x6e\55\x6c\x67"], "\x6c\x61\142\x65\154" => "\123\x61\166\145"]); goto ce5e0; B9950: $form = $this->createForm("\101\x70\160\134\x46\x6f\x72\155\x5c\x41\144\155\151\x6e\x56\165\154\x74\x72\x41\x70\x69\x4b\x65\x79\124\x79\160\145", $data, ["\141\143\x74\x69\x6f\x6e" => $this->generateUrl("\x63\154\x70\x5f\141\x64\x6d\x69\x6e\137\x76\x75\154\x74\162\x5f\163\145\x74\164\x69\x6e\147\x73"), "\x6d\x65\x74\x68\x6f\x64" => "\x50\x4f\x53\124", "\x61\x74\164\162" => []]); goto b2666; C9e44: } private function handleApiKeyForm(Request $request, Form $form, ConfigManager $configManager) { goto b7ea5; c3877: c478b: goto C1987; C46f5: cffd6: goto d2d4e; E54b8: $this->formErrors = $this->getErrorMessages($form); goto Bef2f; Abece: $isApiKeyValid = $this->validateApiKey($request, $apiKey); goto b3a37; e08f6: Aed25: goto C3290; C1987: try { goto e43b2; b35dd: $response = $this->redirect($this->generateUrl("\143\x6c\x70\x5f\141\144\155\x69\156\x5f\166\165\x6c\164\162\137\x73\145\164\164\151\x6e\147\x73")); goto Eda3b; Eda3b: return $response; goto f097f; C1655: $session->getFlashBag()->set("\163\x75\143\x63\x65\x73\163", $this->translator->trans("\x41\160\151\x20\113\145\x79\x20\150\141\163\x20\142\x65\145\156\x20\163\x61\166\x65\144\x2e")); goto b35dd; e43b2: $user = $this->getUser(); goto cd69c; cd69c: $session = $request->getSession(); goto Da9f4; A7617: $eventData = ["\x61\x70\x69\113\x65\x79" => sprintf("\x25\163\52\x2a\x2a\x2a", substr($apiKey, 0, -4))]; goto b8701; b8701: EventQueue::addEvent(EventQueue::EVENT_VULTR_API_KEY_UPDATE, $user, $eventData, $request); goto C1655; Da9f4: $configManager->set("\x76\x75\x6c\x74\x72\137\141\x70\151\137\x6b\145\171", $apiKey); goto A7617; f097f: } catch (\Exception $e) { $this->logger->exception($e); $session->getFlashBag()->set("\144\141\x6e\x67\145\x72", $this->translator->trans("\101\156\40\x65\162\162\157\162\40\150\141\163\40\157\143\143\165\162\x72\x65\144\54\x20\x65\162\x72\157\162\x20\155\x65\163\163\x61\x67\x65\x3a\x20\x25\145\162\162\x6f\x72\115\145\163\163\141\x67\145\x25", ["\x25\x65\x72\162\x6f\162\x4d\145\163\163\141\147\145\x25" => $e->getMessage()])); } goto e08f6; Bef2f: goto Aed25; goto c3877; d2d4e: if (true === $form->isValid()) { goto c478b; } goto E54b8; b3a37: if (!(false === $isApiKeyValid)) { goto cffd6; } goto A9f50; b7ea5: $apiKey = $form->get("\141\160\x69\x4b\x65\x79")->getData(); goto Abece; A9f50: $form->addError(new FormError($this->translator->trans("\x41\x70\151\40\113\145\171\x20\151\163\x20\156\x6f\x74\40\x76\x61\154\x69\x64\56"))); goto C46f5; C3290: } private function createSnapshotsSettingsForm(array $data) : Form { goto e2db0; Fe789: return $form; goto b1e03; e2db0: $form = $this->createForm("\101\160\x70\134\106\157\162\x6d\134\101\144\x6d\x69\x6e\x56\x75\154\x74\x72\123\156\x61\160\163\x68\157\164\x73\123\x65\x74\x74\151\x6e\147\163\x54\171\160\145", $data, ["\141\x63\x74\x69\x6f\156" => $this->generateUrl("\143\154\x70\137\x61\144\155\151\156\x5f\x76\x75\x6c\164\x72\x5f\x73\145\164\164\151\156\147\163"), "\155\x65\x74\x68\x6f\144" => "\x50\117\x53\124", "\x61\x74\164\162" => []]); goto E273a; E273a: $form->add("\x73\x75\x62\155\x69\x74", SubmitType::class, ["\141\x74\164\x72" => ["\x63\154\x61\x73\x73" => "\142\x74\156\x20\x62\164\x6e\55\142\154\165\x65\x20\142\x74\x6e\55\154\x67"], "\x6c\x61\142\x65\x6c" => "\123\141\166\145"]); goto Fe789; b1e03: } private function handleSnapshotsSettingsForm(Request $request, Form $form, ConfigManager $configManager) { goto fef87; edd0a: try { goto D003b; ce40c: EventQueue::addEvent(EventQueue::EVENT_VULTR_SNAPSHOTS_SETTINGS_UPDATE, $user, $eventData, $request); goto F64f0; D003b: $user = $this->getUser(); goto a1612; F64f0: $session->getFlashBag()->set("\163\165\143\143\145\163\x73", $this->translator->trans("\123\156\x61\x70\x73\150\x6f\164\163\40\123\x65\164\164\151\156\147\x73\x20\150\141\x76\x65\40\x62\x65\145\156\x20\x73\141\166\145\x64\56")); goto c2893; Ccbd3: $retentionPeriod = (int) $form->get("\x72\145\x74\145\x6e\x74\151\x6f\156\x50\x65\x72\x69\157\144")->getData(); goto A1b91; C5049: $configManager->set("\166\x75\x6c\164\x72\x5f\163\x6e\x61\x70\x73\150\x6f\x74\x73\x5f\x72\145\x74\145\x6e\164\x69\x6f\156\x5f\160\x65\162\151\x6f\144", $retentionPeriod); goto fc537; Dd54f: $automaticSnapshots = (int) $form->get("\141\165\164\x6f\x6d\x61\164\151\x63\x53\156\141\x70\163\150\x6f\x74\x73")->getData(); goto Ecb83; A1b91: $configManager->set("\166\165\x6c\164\162\137\x61\x75\x74\x6f\x6d\141\164\x69\x63\x5f\x73\156\x61\x70\x73\x68\157\164\163", $automaticSnapshots); goto d1bbc; Ecb83: $frequency = (int) $form->get("\x66\162\145\x71\x75\145\156\x63\171")->getData(); goto Ccbd3; fc537: $eventData = ["\141\x75\x74\157\x6d\141\x74\151\143\x53\156\141\x70\x73\x68\x6f\x74\x73" => $automaticSnapshots, "\146\162\x65\161\x75\145\156\143\171" => $frequency, "\x72\145\x74\145\156\164\x69\x6f\156\120\145\x72\x69\x6f\144" => $retentionPeriod]; goto ce40c; d1bbc: $configManager->set("\166\165\x6c\164\162\x5f\x73\x6e\x61\x70\163\x68\157\164\x73\137\x66\162\x65\x71\x75\x65\156\143\x79", $frequency); goto C5049; Cce26: return $response; goto ee090; a1612: $session = $request->getSession(); goto Dd54f; c2893: $response = $this->redirect($this->generateUrl("\x63\154\160\137\x61\144\155\151\x6e\137\x76\165\x6c\x74\x72\x5f\x73\x65\x74\x74\151\x6e\x67\163")); goto Cce26; ee090: } catch (\Exception $e) { $this->logger->exception($e); $session->getFlashBag()->set("\x64\141\156\x67\x65\x72", $this->translator->trans("\x41\x6e\40\x65\x72\162\x6f\162\40\x68\x61\163\x20\x6f\x63\143\165\x72\162\145\144\54\40\x65\x72\162\x6f\162\x20\155\145\163\x73\x61\147\x65\x3a\40\45\x65\162\162\157\x72\x4d\x65\x73\163\141\147\x65\45", ["\45\145\162\x72\157\162\x4d\x65\163\x73\141\147\x65\45" => $e->getMessage()])); } goto b0ba3; F92ec: $this->formErrors = $this->getErrorMessages($form); goto e3b96; b0ba3: ceab3: goto abb42; B7a1a: bd7ec: goto edd0a; fef87: if (true === $form->isValid()) { goto bd7ec; } goto F92ec; e3b96: goto ceab3; goto B7a1a; abb42: } public function snapshots(Request $request, ConfigManager $configManager) : Response { goto B1c00; Fda42: c4273: goto b01d5; B1c00: $cloud = $configManager->get("\x63\x6c\x6f\x75\144"); goto c4cc2; fb52c: return $response; goto F9f72; b01d5: $response = $this->render("\x41\x64\155\151\x6e\x2f\126\165\154\164\x72\57\123\156\141\x70\x73\150\x6f\164\x73\x2f\x69\156\144\x65\x78\x2e\x68\164\155\x6c\56\164\167\151\x67", ["\x66\x6f\x72\155\105\x72\162\x6f\x72\163" => $this->formErrors]); goto fb52c; B54dc: return $this->redirect($this->generateUrl("\x63\x6c\160\137\x61\144\155\151\156\x5f\165\163\x65\x72\163")); goto Fda42; c4cc2: if (!(CloudPanelEnvironment::CLOUD_PROVIDER_VULTR != $cloud)) { goto c4273; } goto B54dc; F9f72: } public function loadSnapshots(Request $request, ConfigManager $configManager, Twig $twig) : Response { goto D6dda; D6dda: $data = []; goto af2ae; F6321: A742d: goto De2f9; af2ae: if (!(true === $request->isXmlHttpRequest())) { goto A742d; } goto c45ac; c45ac: try { goto E2ba2; Dfaaf: $data["\x73\156\x61\x70\163\x68\x6f\164\163\x48\x74\155\x6c"] = $snapshotsHtml; goto e1d6b; B67f4: C2ae0: goto d8a2f; a731a: usort($snapshots, function ($a, $b) { return $a->getCreatedAt() < $b->getCreatedAt(); }); goto B67f4; A832b: $snapshots = $vultrClient->getSnapshots(); goto a731a; d1540: $instance = $request->attributes->get("\x69\x6e\x73\164\141\x6e\143\145"); goto B9026; C2a9e: if (!(false === empty($apiKey))) { goto C2ae0; } goto d1540; d8a2f: $snapshotsHtml = $twig->render("\x41\x64\x6d\151\x6e\57\x56\165\154\164\x72\57\x53\156\x61\x70\x73\150\157\x74\163\57\163\x6e\x61\x70\x73\150\x6f\x74\163\55\154\151\x73\x74\x2e\x68\164\155\x6c\56\164\x77\151\147", ["\165\x73\x65\x72" => $user, "\163\156\x61\160\163\150\157\164\x73" => $snapshots]); goto Dfaaf; B2a87: $apiKey = $configManager->get("\166\165\x6c\x74\162\137\141\160\151\x5f\x6b\x65\x79"); goto C2a9e; E2ba2: $user = $this->getUser(); goto Ff670; Ff670: $snapshots = []; goto B2a87; B9026: $vultrClient = $instance->getVultrClient(); goto A832b; e1d6b: } catch (\Exception $e) { $errorMessage = $twig->render("\x41\x64\x6d\151\x6e\x2f\x56\165\x6c\x74\162\57\120\141\x72\164\151\141\154\57\x65\x72\x72\157\x72\x2d\155\x65\x73\163\x61\x67\x65\56\x68\164\155\x6c\x2e\x74\x77\151\147", ["\x65\x72\x72\x6f\162\115\x65\x73\163\x61\147\x65" => $e->getMessage()]); $data["\145\162\x72\x6f\x72\x4d\145\163\163\141\147\x65"] = $errorMessage; } goto F6321; De2f9: return $this->json($data); goto d7d47; d7d47: } public function createSnapshot(Request $request, ConfigManager $configManager) : Response { goto A1c94; c37bd: $form->handleRequest($request); goto bbd42; bbd42: if (!(true === $form->isSubmitted())) { goto F88af; } goto D5c6a; A0664: F88af: goto d89ed; c6e80: try { goto bd9f7; E94d7: $vultrInstance = $vultrClient->getInstance(); goto B64ef; A8a9b: $vultrClient = $instance->getVultrClient(); goto E94d7; bd9f7: $instance = $request->attributes->get("\x69\x6e\x73\x74\141\x6e\143\x65"); goto A8a9b; B64ef: $data["\156\141\155\x65"] = $vultrInstance->getLabel(); goto ecd70; ecd70: } catch (\Exception $e) { goto E9e0d; E9e0d: if (!(401 == $e->getCode())) { goto ff533; } goto E1fc0; c4a99: $session->getFlashBag()->set("\144\141\x6e\x67\145\162", $this->translator->trans("\x41\160\151\x20\x4b\145\171\40\x69\163\x20\156\x6f\164\x20\x76\141\x6c\151\x64\56")); goto B8b10; cdca9: return $response; goto b5538; b5538: ff533: goto da59a; B8b10: $response = $this->redirect($this->generateUrl("\143\x6c\160\137\141\x64\x6d\151\156\137\x76\165\154\164\x72\137\163\145\164\x74\x69\x6e\147\163")); goto cdca9; E1fc0: $session = $request->getSession(); goto c4a99; da59a: } goto E5707; D4e3e: $form = $this->createSnapshotForm($data); goto d67da; A1c94: $cloud = $configManager->get("\143\x6c\157\x75\144"); goto Bc79e; E4ad5: $data = []; goto c01ff; Bde46: if (!(false === is_null($response))) { goto c41bc; } goto C65ed; c01ff: if (!(false === $request->isMethod("\x50\x4f\x53\x54"))) { goto C3e3c; } goto c6e80; d89ed: ff7fd: goto A70f3; C4435: return $response; goto c3f90; A70f3: $response = $this->render("\101\144\x6d\151\x6e\x2f\126\x75\154\x74\x72\x2f\x53\156\141\x70\163\150\x6f\164\x73\57\x63\162\x65\141\x74\145\56\x68\x74\155\154\56\x74\167\x69\147", ["\146\x6f\x72\x6d\105\162\162\x6f\x72\x73" => $this->formErrors, "\146\x6f\162\155" => $form->createView()]); goto C4435; cfe7e: return $this->redirect($this->generateUrl("\x63\x6c\x70\x5f\141\x64\155\151\156\x5f\x75\x73\145\162\163")); goto c7b7b; d67da: if (!(true === $request->isMethod("\x50\x4f\x53\x54"))) { goto ff7fd; } goto c37bd; C65ed: return $response; goto B0c22; B0c22: c41bc: goto A0664; Bc79e: if (!(CloudPanelEnvironment::CLOUD_PROVIDER_VULTR != $cloud)) { goto B5099; } goto cfe7e; E5707: C3e3c: goto D4e3e; D5c6a: $response = $this->handleCreateSnapshotForm($request, $form, $configManager); goto Bde46; c7b7b: B5099: goto E4ad5; c3f90: } private function createSnapshotForm(array $data) : Form { goto c570b; a0f24: return $form; goto D114f; c570b: $form = $this->createForm("\101\x70\x70\134\106\157\162\155\x5c\x41\x64\x6d\151\x6e\x56\165\154\x74\162\x53\x6e\x61\160\x73\150\157\164\x54\x79\160\145", $data, ["\141\143\x74\151\157\156" => $this->generateUrl("\143\154\160\137\141\x64\155\x69\x6e\x5f\x76\x75\154\164\x72\x5f\163\x6e\141\160\163\150\157\164\x5f\x63\162\145\141\164\145"), "\155\x65\x74\150\157\x64" => "\120\x4f\x53\124", "\141\x74\164\162" => []]); goto c501f; c501f: $form->add("\163\x75\142\x6d\x69\164", SubmitType::class, ["\x61\164\x74\x72" => ["\x63\x6c\141\163\x73" => "\x62\164\156\x20\x62\x74\x6e\55\x62\154\165\145\40\142\164\156\55\154\147"], "\154\141\x62\145\154" => "\x43\x72\145\x61\x74\x65"]); goto a0f24; D114f: } private function handleCreateSnapshotForm(Request $request, Form $form, ConfigManager $configManager) { goto eaba9; B1988: try { goto B914f; cb0ee: $instance = $request->attributes->get("\x69\156\163\x74\x61\156\x63\x65"); goto A5815; e2ff1: $response = $this->redirect($this->generateUrl("\x63\154\x70\x5f\x61\144\155\x69\x6e\137\x76\165\154\x74\x72\137\x73\156\141\x70\x73\150\157\x74\x73")); goto B2d0a; B914f: $user = $this->getUser(); goto c0c8e; e34a4: $session->getFlashBag()->set("\x73\x75\x63\x63\x65\163\163", $this->translator->trans("\x53\156\141\160\163\150\x6f\164\40\x69\163\40\x62\x65\x69\x6e\147\x20\143\162\145\x61\x74\x65\144\56")); goto e2ff1; B2d0a: return $response; goto Bccab; c0c8e: $session = $request->getSession(); goto cb0ee; da2c1: $eventData = ["\163\156\x61\160\x73\x68\x6f\x74\x4e\141\x6d\145" => $snapshotName]; goto dbc7d; dbc7d: EventQueue::addEvent(EventQueue::EVENT_VULTR_SNAPSHOT_CREATE, $user, $eventData, $request); goto e34a4; D2305: $vultrClient->createSnapshot($snapshotName); goto da2c1; A5815: $vultrClient = $instance->getVultrClient(); goto B7ac3; B7ac3: $vultrInstance = $vultrClient->getInstance(); goto bcd0a; bcd0a: $snapshotName = sprintf("\45\163\55\x25\163", $form->get("\156\141\x6d\x65")->getData(), $vultrInstance->getId()); goto D2305; Bccab: } catch (\Exception $e) { $this->logger->exception($e); $session->getFlashBag()->set("\144\x61\156\x67\x65\162", $this->translator->trans("\x41\156\40\x65\162\162\x6f\162\x20\150\x61\x73\x20\x6f\143\143\x75\x72\162\x65\144\x2c\40\x65\x72\x72\157\x72\40\155\145\x73\x73\x61\x67\x65\x3a\40\x25\x65\x72\x72\x6f\162\x4d\x65\x73\x73\141\x67\x65\x25", ["\x25\x65\162\162\157\162\115\x65\163\163\x61\x67\145\45" => $e->getMessage()])); } goto Bb997; eaba9: if (true === $form->isValid()) { goto d91f8; } goto Aea05; Aea05: $this->formErrors = $this->getErrorMessages($form); goto b68c5; Bb997: d6587: goto ebfc2; C6459: d91f8: goto B1988; b68c5: goto d6587; goto C6459; ebfc2: } public function deleteSnapshot(Request $request, ConfigManager $configManager) : Response { goto dc32a; c3ba1: $id = trim($request->get("\151\x64")); goto F5328; C1965: try { goto d8127; c8058: $instance = $request->attributes->get("\151\x6e\x73\x74\141\156\143\x65"); goto D2326; D2326: $vultrClient = $instance->getVultrClient(); goto Ad820; ba070: if (!(false === is_null($snapshot))) { goto df734; } goto A317a; D06ba: $session->getFlashBag()->set("\x73\165\x63\143\x65\x73\x73", $this->translator->trans("\123\x6e\141\x70\x73\150\x6f\x74\x20\x69\163\40\x62\x65\x69\x6e\x67\40\144\145\154\x65\164\x65\x64\56")); goto Bd57b; Ad820: $snapshot = $vultrClient->getSnapshot($id); goto ba070; bad0f: EventQueue::addEvent(EventQueue::EVENT_VULTR_SNAPSHOT_DELETE, $user, $eventData, $request); goto D06ba; B3e36: $user = $this->getUser(); goto c8058; A317a: $vultrClient->deleteSnapshot($id); goto B9e2b; B9e2b: $eventData = ["\x73\x6e\141\160\163\150\157\x74\x49\x64" => $snapshot->getId(), "\163\156\141\x70\x73\150\x6f\x74\116\141\x6d\x65" => $snapshot->getDescription()]; goto bad0f; Bd57b: df734: goto Ec363; d8127: $session = $request->getSession(); goto B3e36; Ec363: } catch (\Exception $e) { $session->getFlashBag()->set("\144\141\156\147\145\x72", $this->translator->trans("\101\x6e\x20\x65\x72\x72\x6f\x72\40\150\141\163\x20\157\x63\x63\x75\162\x72\x65\x64\x2c\40\x65\162\x72\157\x72\x20\x6d\145\x73\163\x61\147\145\x3a\40\x25\145\162\162\157\x72\x4d\x65\x73\x73\141\147\145\x25", ["\x25\145\162\162\x6f\162\x4d\x65\x73\163\141\147\145\45" => $e->getMessage()])); } goto Bc40d; Bc40d: e02ea: goto C2bf0; F594d: return $this->redirect($this->generateUrl("\x63\x6c\160\137\x61\144\x6d\151\x6e\137\165\163\x65\x72\163")); goto E233e; F5328: if (!(false === empty($id))) { goto e02ea; } goto C1965; C2bf0: $response = $this->redirect($this->generateUrl("\x63\154\160\x5f\141\144\155\151\x6e\137\166\165\154\164\x72\137\163\156\x61\x70\163\150\157\x74\x73")); goto c8fcc; c8fcc: return $response; goto De791; dc32a: $cloud = $configManager->get("\x63\x6c\157\165\x64"); goto A0479; E233e: F408f: goto c3ba1; A0479: if (!(CloudPanelEnvironment::CLOUD_PROVIDER_VULTR != $cloud)) { goto F408f; } goto F594d; De791: } private function validateApiKey(Request $request, $apiKey) : bool { try { goto F2626; a32c6: $vultrClient->setApiKey($apiKey); goto Bc95d; b9b16: $vultrClient = clone $instance->getVultrClient(); goto B4e5b; Bc95d: $instanceData = $vultrClient->getInstanceData(); goto eae38; eae38: if (!(false === empty($instanceData))) { goto e9a91; } goto Aa39c; A3834: e9a91: goto e373a; B4e5b: $vultrClient->unsetHttpClient(); goto a32c6; F2626: $isApiKeyValid = false; goto D376b; D376b: $instance = $request->attributes->get("\x69\156\x73\x74\141\x6e\x63\145"); goto b9b16; Aa39c: $isApiKeyValid = true; goto A3834; e373a: } catch (\Exception $e) { } return $isApiKeyValid; } }
