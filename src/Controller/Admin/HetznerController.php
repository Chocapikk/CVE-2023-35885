<?php
 namespace App\Controller\Admin; use Symfony\Component\Form\FormError; use Symfony\Component\HttpFoundation\Request; use Symfony\Component\HttpFoundation\Response; use Symfony\Component\Form\Extension\Core\Type\SubmitType; use Symfony\Component\Form\Form; use Twig\Environment as Twig; use App\Controller\Controller; use App\Entity\Manager\ConfigManager; use App\CloudPanel\Environment as CloudPanelEnvironment; use App\Event\EventQueue; class HetznerController extends Controller { public function settings(Request $request, ConfigManager $configManager) : Response { goto d8a6f; ff702: $response = $this->render("\x41\x64\x6d\151\x6e\57\110\x65\x74\x7a\156\145\162\57\x53\145\164\x74\151\156\147\x73\57\151\156\144\145\x78\56\150\164\x6d\x6c\56\x74\167\151\147", ["\141\160\151\x54\157\x6b\x65\156\x46\157\162\155" => $apiTokenForm->createView(), "\x73\156\x61\160\163\150\157\x74\163\x53\x65\164\164\x69\156\x67\163\x46\157\x72\155" => $snapshotsSettingsForm->createView(), "\x66\x6f\x72\155\x45\x72\x72\x6f\162\x73" => $this->formErrors]); goto f0232; edbf9: if (!(true === $apiTokenForm->isSubmitted())) { goto F3a48; } goto Bfc07; Ac6c2: $apiTokenForm->handleRequest($request); goto F57c1; Ade5d: F3a48: goto F844c; Fb595: return $response; goto ef6bc; Eb072: E47e1: goto B8b9c; e11c9: ac283: goto Eb072; B8b9c: Ae75e: goto ff702; Bfc07: $response = $this->handleApiTokenForm($request, $apiTokenForm, $configManager); goto E2529; bb371: $response = $this->handleSnapshotsSettingsForm($request, $snapshotsSettingsForm, $configManager); goto edf13; ef6bc: B1c5e: goto Ade5d; C484c: B88f5: goto D8d4f; a3bf6: $snapshotsSettings = ["\141\165\164\157\x6d\141\164\x69\143\123\156\141\x70\163\x68\157\164\163" => (bool) $configManager->get("\150\x65\164\x7a\x6e\x65\x72\x5f\x61\165\164\x6f\155\141\x74\x69\x63\x5f\163\x6e\141\160\163\150\157\x74\163"), "\x66\162\x65\x71\165\x65\156\143\171" => false === is_null($configManager->get("\150\x65\x74\172\156\x65\162\x5f\163\156\x61\x70\x73\x68\157\164\x73\x5f\x66\x72\x65\161\165\x65\x6e\x63\x79")) ? (int) $configManager->get("\x68\145\164\x7a\x6e\x65\162\x5f\x73\156\x61\x70\x73\150\157\164\x73\137\x66\x72\145\161\x75\145\x6e\143\171") : 12, "\x72\x65\164\x65\x6e\164\151\x6f\x6e\x50\x65\162\x69\157\x64" => false === is_null($configManager->get("\150\145\164\172\156\145\x72\x5f\163\156\x61\x70\x73\150\157\164\163\137\162\145\x74\145\156\164\151\157\156\137\160\x65\x72\151\x6f\144")) ? (int) $configManager->get("\150\145\x74\x7a\x6e\x65\x72\x5f\163\x6e\141\x70\x73\x68\157\164\x73\137\162\x65\x74\x65\x6e\x74\x69\x6f\156\137\160\x65\162\151\x6f\x64") : 7]; goto C95e4; F844c: if (!(true === $snapshotsSettingsForm->isSubmitted())) { goto E47e1; } goto bb371; edf13: if (!(false === is_null($response))) { goto ac283; } goto df0fb; df0fb: return $response; goto e11c9; D044e: return $this->redirect($this->generateUrl("\143\x6c\160\137\141\x64\155\151\156\x5f\x75\163\x65\162\x73")); goto C484c; f0232: return $response; goto D4193; E6b05: if (!(true === $request->isMethod("\x50\117\x53\124"))) { goto Ae75e; } goto Ac6c2; a5f1a: if (!(CloudPanelEnvironment::CLOUD_PROVIDER_HETZNER != $cloud)) { goto B88f5; } goto D044e; C95e4: $apiTokenForm = $this->createApiTokenForm($apiKey); goto Fe617; d8a6f: $cloud = $configManager->get("\143\x6c\x6f\x75\144"); goto a5f1a; D8d4f: $apiKey = ["\141\160\x69\x54\x6f\153\145\156" => true === empty($configManager->get("\x68\x65\164\x7a\x6e\x65\x72\137\141\160\151\x5f\x74\157\153\x65\156")) ? '' : sprintf("\x25\x73\52\x2a\x2a\x2a\52\52\52\52\x2a\52\52\52\x2a\52\x2a\52\x2a\x2a\x2a\52", substr($configManager->get("\150\145\x74\172\x6e\x65\x72\x5f\x61\160\151\137\x74\x6f\x6b\145\156"), 0, -20))]; goto a3bf6; Fe617: $snapshotsSettingsForm = $this->createSnapshotsSettingsForm($snapshotsSettings); goto E6b05; E2529: if (!(false === is_null($response))) { goto B1c5e; } goto Fb595; F57c1: $snapshotsSettingsForm->handleRequest($request); goto edbf9; D4193: } private function createApiTokenForm(array $data) : Form { goto D9d30; D9d30: $form = $this->createForm("\x41\x70\160\x5c\106\x6f\x72\155\134\101\x64\155\151\x6e\x48\x65\164\x7a\x6e\145\x72\x41\160\x69\124\x6f\x6b\145\x6e\x54\171\160\x65", $data, ["\141\x63\x74\151\x6f\156" => $this->generateUrl("\143\154\160\137\141\144\x6d\151\156\137\x68\145\164\x7a\x6e\145\x72\x5f\163\x65\x74\164\x69\x6e\x67\163"), "\155\x65\164\150\x6f\x64" => "\120\117\123\x54", "\141\x74\x74\162" => []]); goto Ef7bc; Ef7bc: $form->add("\163\x75\142\155\x69\x74", SubmitType::class, ["\x61\164\x74\162" => ["\x63\x6c\141\x73\163" => "\142\164\156\x20\142\x74\x6e\55\142\154\165\x65\x20\x62\x74\156\x2d\154\147"], "\154\141\x62\145\154" => "\x53\x61\x76\x65"]); goto A5f17; A5f17: return $form; goto ddd13; ddd13: } private function handleApiTokenForm(Request $request, Form $form, ConfigManager $configManager) { goto b5684; Eb547: try { goto f83a8; E0416: $session->getFlashBag()->set("\x73\x75\143\143\x65\163\x73", $this->translator->trans("\101\160\x69\x20\x54\157\153\145\156\x20\x68\x61\163\40\x62\145\x65\156\40\163\x61\166\145\144\x2e")); goto F201b; D6023: $session = $request->getSession(); goto e0093; c0500: EventQueue::addEvent(EventQueue::EVENT_HETZNER_API_TOKEN_UPDATE, $user, $eventData, $request); goto E0416; f83a8: $user = $this->getUser(); goto D6023; B8d1c: return $response; goto De697; E89f6: $eventData = ["\141\160\151\x54\x6f\x6b\x65\156" => sprintf("\45\x73\52\52\52\52", substr($apiToken, 0, -4))]; goto c0500; F201b: $response = $this->redirect($this->generateUrl("\x63\154\x70\137\x61\144\155\x69\x6e\137\x68\x65\x74\172\x6e\x65\x72\x5f\x73\x65\164\164\151\x6e\147\x73")); goto B8d1c; e0093: $configManager->set("\x68\145\164\x7a\x6e\x65\162\137\x61\x70\x69\x5f\164\x6f\x6b\x65\x6e", $apiToken); goto E89f6; De697: } catch (\Exception $e) { $this->logger->exception($e); $session->getFlashBag()->set("\x64\x61\156\x67\x65\162", $this->translator->trans("\101\x6e\40\145\162\162\157\x72\40\x68\x61\x73\40\157\143\143\x75\162\x72\x65\x64\x2c\x20\x65\x72\162\x6f\162\x20\155\145\x73\163\x61\147\x65\x3a\x20\45\x65\162\x72\x6f\x72\x4d\145\163\163\141\x67\x65\45", ["\x25\145\x72\162\157\162\x4d\x65\x73\163\141\147\x65\45" => $e->getMessage()])); } goto A9f75; F8406: if (true === $form->isValid()) { goto D1e16; } goto Cd027; ad86f: if (!(false === $isApiTokenValid)) { goto Ef2e8; } goto b5a3f; b5684: $apiToken = $form->get("\141\160\151\x54\x6f\x6b\145\x6e")->getData(); goto f1ce3; f1ce3: $isApiTokenValid = $this->validateApiToken($request, $apiToken); goto ad86f; Ea8f8: goto A2017; goto E16df; b5a3f: $form->addError(new FormError($this->translator->trans("\101\160\151\x20\124\157\153\x65\x6e\40\x69\x73\x20\156\157\x74\x20\x76\x61\154\151\144\56"))); goto b300e; b300e: Ef2e8: goto F8406; E16df: D1e16: goto Eb547; A9f75: A2017: goto a6f95; Cd027: $this->formErrors = $this->getErrorMessages($form); goto Ea8f8; a6f95: } private function handleSnapshotsSettingsForm(Request $request, Form $form, ConfigManager $configManager) { goto d38b8; C912a: $this->formErrors = $this->getErrorMessages($form); goto E4308; E4308: goto e2471; goto ee924; e52b3: e2471: goto Eb3ad; Be487: try { goto a1781; D4121: $automaticSnapshots = (int) $form->get("\141\x75\x74\x6f\155\141\164\x69\x63\x53\156\141\160\x73\x68\157\164\x73")->getData(); goto de438; de438: $frequency = (int) $form->get("\x66\162\145\x71\165\145\x6e\x63\171")->getData(); goto C4fcf; d8999: return $response; goto B5fa5; a1781: $user = $this->getUser(); goto B4999; B4999: $session = $request->getSession(); goto D4121; E9a85: $configManager->set("\150\x65\164\172\x6e\x65\x72\x5f\163\x6e\141\x70\x73\150\157\x74\163\x5f\146\x72\x65\161\165\145\x6e\x63\x79", $frequency); goto Bc7dd; Bbc1f: $session->getFlashBag()->set("\x73\165\143\143\x65\x73\163", $this->translator->trans("\123\156\x61\x70\163\x68\x6f\x74\163\x20\x53\145\164\x74\x69\x6e\147\x73\40\150\141\x76\145\x20\142\145\145\156\x20\163\x61\x76\x65\x64\x2e")); goto F9b4f; dc3d8: $eventData = ["\141\x75\x74\157\x6d\x61\x74\x69\x63\x53\156\x61\x70\163\x68\x6f\164\163" => $automaticSnapshots, "\x66\x72\145\x71\165\145\x6e\143\171" => $frequency, "\x72\145\x74\145\156\x74\151\157\156\x50\x65\162\151\157\144" => $retentionPeriod]; goto C819b; F9b4f: $response = $this->redirect($this->generateUrl("\x63\x6c\x70\x5f\141\x64\155\151\x6e\137\150\145\164\172\x6e\x65\x72\x5f\163\145\x74\164\x69\156\x67\x73")); goto d8999; C5c49: $configManager->set("\150\x65\x74\x7a\x6e\145\162\137\141\x75\164\157\155\141\x74\151\x63\137\163\156\x61\160\163\x68\157\x74\x73", $automaticSnapshots); goto E9a85; C4fcf: $retentionPeriod = (int) $form->get("\x72\x65\164\x65\x6e\164\x69\157\x6e\x50\x65\x72\151\157\x64")->getData(); goto C5c49; C819b: EventQueue::addEvent(EventQueue::EVENT_HETZNER_SNAPSHOTS_SETTINGS_UPDATE, $user, $eventData, $request); goto Bbc1f; Bc7dd: $configManager->set("\x68\x65\164\x7a\156\145\x72\x5f\163\156\141\160\x73\x68\x6f\x74\163\x5f\x72\145\164\x65\x6e\x74\x69\157\x6e\x5f\160\x65\x72\x69\157\144", $retentionPeriod); goto dc3d8; B5fa5: } catch (\Exception $e) { $this->logger->exception($e); $session->getFlashBag()->set("\x64\x61\x6e\x67\x65\162", $this->translator->trans("\x41\156\40\x65\162\162\x6f\162\40\x68\x61\x73\40\x6f\x63\143\x75\x72\x72\145\x64\x2c\40\x65\162\x72\x6f\162\40\x6d\145\x73\163\141\147\145\72\x20\x25\x65\162\162\157\x72\x4d\145\x73\x73\141\147\145\45", ["\x25\145\x72\x72\x6f\x72\115\145\163\x73\141\x67\x65\x25" => $e->getMessage()])); } goto e52b3; ee924: e6fbe: goto Be487; d38b8: if (true === $form->isValid()) { goto e6fbe; } goto C912a; Eb3ad: } private function createSnapshotsSettingsForm(array $data) : Form { goto Cefa2; Cefa2: $form = $this->createForm("\101\x70\160\x5c\x46\157\162\155\134\101\x64\x6d\151\x6e\110\145\164\x7a\x6e\145\x72\x53\x6e\x61\x70\x73\x68\157\x74\x73\x53\145\164\x74\x69\156\147\163\x54\x79\160\x65", $data, ["\141\x63\164\x69\157\x6e" => $this->generateUrl("\143\x6c\x70\137\141\144\x6d\x69\156\x5f\x68\145\164\x7a\x6e\145\x72\x5f\x73\145\164\x74\x69\x6e\147\x73"), "\155\x65\x74\x68\x6f\144" => "\120\117\x53\x54", "\141\164\x74\162" => []]); goto D47ce; d6aab: return $form; goto b77d8; D47ce: $form->add("\x73\165\142\155\151\x74", SubmitType::class, ["\x61\164\x74\x72" => ["\143\154\x61\163\x73" => "\x62\x74\156\40\142\164\156\55\x62\154\165\x65\40\142\164\x6e\55\x6c\147"], "\154\x61\142\x65\154" => "\x53\141\166\145"]); goto d6aab; b77d8: } public function snapshots(Request $request, ConfigManager $configManager) : Response { goto C0f5c; C0f5c: $cloud = $configManager->get("\143\x6c\157\x75\x64"); goto b761c; Cc14f: return $this->redirect($this->generateUrl("\x63\x6c\x70\x5f\x61\144\155\x69\x6e\x5f\165\163\x65\x72\163")); goto Eb2bb; D77fe: $response = $this->render("\x41\144\x6d\x69\156\x2f\x48\x65\164\172\156\145\162\x2f\123\156\x61\160\x73\x68\x6f\x74\163\x2f\151\156\144\145\x78\x2e\x68\x74\155\154\x2e\164\167\151\147", ["\146\x6f\x72\x6d\105\x72\x72\x6f\162\x73" => $this->formErrors]); goto De3f2; De3f2: return $response; goto f5f3a; b761c: if (!(CloudPanelEnvironment::CLOUD_PROVIDER_HETZNER != $cloud)) { goto ba320; } goto Cc14f; Eb2bb: ba320: goto D77fe; f5f3a: } public function loadSnapshots(Request $request, ConfigManager $configManager, Twig $twig) : Response { goto c8d47; c8d47: $data = []; goto eaa5f; Be900: c88ba: goto A0369; eaa5f: if (!(true === $request->isXmlHttpRequest())) { goto c88ba; } goto c2eeb; c2eeb: try { goto e743f; E0764: $data["\163\156\141\160\163\150\157\x74\163\110\164\x6d\154"] = $snapshotsHtml; goto ffc7b; f50fa: if (!(false === empty($apiToken))) { goto Eaf59; } goto c0f2f; e743f: $user = $this->getUser(); goto e3808; c0f2f: $instance = $request->attributes->get("\x69\156\163\164\x61\156\143\145"); goto Bd66b; D49cf: $snapshots = $hetznerClient->getSnapshots(); goto D4b4e; D4b4e: usort($snapshots, function ($a, $b) { return $a->getCreatedAt() < $b->getCreatedAt(); }); goto daef6; c7ab3: $apiToken = $configManager->get("\x68\x65\x74\x7a\x6e\145\x72\x5f\x61\x70\x69\x5f\164\x6f\153\x65\x6e"); goto f50fa; e3808: $snapshots = []; goto c7ab3; Bd66b: $hetznerClient = $instance->getHetznerClient(); goto D49cf; daef6: Eaf59: goto cd30c; cd30c: $snapshotsHtml = $twig->render("\101\x64\155\151\x6e\57\x48\x65\x74\172\x6e\x65\162\x2f\x53\x6e\141\160\x73\150\157\164\x73\57\163\x6e\x61\160\163\150\x6f\164\x73\55\x6c\x69\163\164\56\150\164\155\154\x2e\x74\167\x69\x67", ["\x75\163\x65\162" => $user, "\163\156\x61\x70\x73\x68\157\164\163" => $snapshots]); goto E0764; ffc7b: } catch (\Exception $e) { $errorMessage = $twig->render("\x41\x64\155\151\x6e\x2f\x48\145\164\172\156\x65\162\57\120\141\162\x74\151\x61\x6c\57\x65\x72\162\157\162\55\155\145\163\x73\141\147\x65\56\150\164\155\x6c\56\164\167\x69\x67", ["\x65\x72\162\157\x72\115\145\163\x73\x61\x67\145" => $e->getMessage()]); $data["\145\162\162\157\162\x4d\x65\x73\163\141\147\145"] = $errorMessage; } goto Be900; A0369: return $this->json($data); goto Fd8e5; Fd8e5: } public function deleteSnapshot(Request $request, ConfigManager $configManager) : Response { goto B7868; F2765: return $this->redirect($this->generateUrl("\143\x6c\x70\x5f\141\x64\x6d\x69\156\x5f\x75\x73\145\162\x73")); goto Dd82f; Ef410: $id = trim($request->get("\x69\x64")); goto bef37; B7868: $cloud = $configManager->get("\143\154\x6f\165\x64"); goto f6f64; f2005: try { goto Ec6eb; E8385: $eventData = ["\163\156\141\x70\163\150\157\164\x49\144" => $snapshot->getId(), "\x73\156\x61\x70\163\150\157\164\116\x61\155\x65" => $snapshot->getName()]; goto Cb2a5; b31d4: $hetznerClient->deleteSnapshot($id); goto E8385; Ec6eb: $session = $request->getSession(); goto A79f0; e230b: $hetznerClient = $instance->getHetznerClient(); goto Bc5ff; Bc5ff: $snapshot = $hetznerClient->getSnapshot($id); goto A1ca0; Fe044: $session->getFlashBag()->set("\x73\165\143\x63\x65\x73\163", $this->translator->trans("\123\x6e\x61\x70\163\x68\157\x74\40\x69\163\x20\x62\x65\151\156\x67\40\x64\x65\x6c\x65\164\x65\144\x2e")); goto e2f17; A79f0: $user = $this->getUser(); goto b0ca2; e2f17: f3505: goto af01b; b0ca2: $instance = $request->attributes->get("\151\x6e\163\164\x61\x6e\143\145"); goto e230b; Cb2a5: EventQueue::addEvent(EventQueue::EVENT_HETZNER_SNAPSHOT_DELETE, $user, $eventData, $request); goto Fe044; A1ca0: if (!(false === is_null($snapshot))) { goto f3505; } goto b31d4; af01b: } catch (\Exception $e) { $session->getFlashBag()->set("\144\141\x6e\x67\145\162", $this->translator->trans("\101\156\x20\x65\x72\x72\x6f\162\40\x68\x61\x73\x20\157\143\143\165\x72\x72\145\x64\54\x20\x65\x72\162\x6f\x72\40\x6d\145\163\163\x61\147\145\72\x20\x25\145\162\x72\157\x72\115\145\163\x73\x61\147\x65\x25", ["\45\x65\162\x72\157\x72\115\x65\x73\x73\x61\147\145\45" => $e->getMessage()])); } goto E87d6; d6c04: $response = $this->redirect($this->generateUrl("\143\x6c\x70\137\x61\144\x6d\151\156\137\150\145\164\x7a\156\145\162\137\163\156\141\160\x73\x68\x6f\164\x73")); goto a73b5; E87d6: d35a4: goto d6c04; f6f64: if (!(CloudPanelEnvironment::CLOUD_PROVIDER_HETZNER != $cloud)) { goto Df7bc; } goto F2765; a73b5: return $response; goto ad918; Dd82f: Df7bc: goto Ef410; bef37: if (!(false === empty($id))) { goto d35a4; } goto f2005; ad918: } public function createSnapshot(Request $request, ConfigManager $configManager) : Response { goto F576e; B8bb6: if (!(CloudPanelEnvironment::CLOUD_PROVIDER_HETZNER != $cloud)) { goto d4537; } goto F3684; dba21: if (!(true === $form->isSubmitted())) { goto a4235; } goto ea9e2; D4c75: ad954: goto faad2; F9c77: if (!(true === $request->isMethod("\120\x4f\x53\124"))) { goto ad954; } goto B434e; F8f3e: Dc568: goto F08e8; faad2: $response = $this->render("\x41\144\155\151\156\x2f\110\x65\x74\x7a\x6e\x65\162\57\x53\156\141\x70\x73\x68\x6f\164\163\57\x63\x72\x65\141\164\145\x2e\150\164\155\154\56\x74\x77\151\147", ["\146\157\x72\x6d\x45\162\162\157\162\163" => $this->formErrors, "\x66\157\x72\x6d" => $form->createView()]); goto F3c75; F576e: $cloud = $configManager->get("\143\x6c\x6f\x75\x64"); goto B8bb6; C733f: try { goto Aedac; Aedac: $instance = $request->attributes->get("\151\x6e\163\x74\141\x6e\143\x65"); goto D067e; D067e: $hetznerClient = $instance->getHetznerClient(); goto b3aba; b3aba: $data["\x6e\x61\x6d\x65"] = $hetznerClient->getInstanceName(); goto F866e; F866e: } catch (\Exception $e) { goto f40cd; B2447: $session->getFlashBag()->set("\x64\x61\x6e\x67\x65\162", $this->translator->trans("\x41\x70\151\40\x54\x6f\x6b\145\156\x20\151\163\40\156\157\x74\x20\166\141\x6c\x69\x64\56")); goto C1500; C1500: $response = $this->redirect($this->generateUrl("\143\x6c\160\x5f\141\144\x6d\151\156\137\150\x65\164\x7a\156\x65\162\137\x73\x65\164\164\x69\x6e\147\x73")); goto Af2ee; f40cd: if (!(401 == $e->getCode())) { goto D0189; } goto Ab59b; Ab59b: $session = $request->getSession(); goto B2447; Af2ee: return $response; goto d5ae9; d5ae9: D0189: goto B44b2; B44b2: } goto Bbefe; Bbefe: E1204: goto caf78; F3c75: return $response; goto bdc94; caf78: $form = $this->createSnapshotForm($data); goto F9c77; facc5: if (!(false === $request->isMethod("\120\x4f\x53\x54"))) { goto E1204; } goto C733f; d2972: if (!(false === is_null($response))) { goto Dc568; } goto C363d; F3684: return $this->redirect($this->generateUrl("\143\154\x70\x5f\x61\x64\x6d\x69\x6e\x5f\x75\x73\145\162\163")); goto d18af; d18af: d4537: goto f4093; C363d: return $response; goto F8f3e; B434e: $form->handleRequest($request); goto dba21; ea9e2: $response = $this->handleCreateSnapshotForm($request, $form, $configManager); goto d2972; f4093: $data = []; goto facc5; F08e8: a4235: goto D4c75; bdc94: } private function createSnapshotForm(array $data) : Form { goto e6bc4; e6bc4: $form = $this->createForm("\101\x70\x70\134\x46\157\x72\x6d\134\101\144\155\x69\x6e\x48\x65\x74\172\156\x65\162\123\x6e\x61\160\x73\150\x6f\x74\124\171\x70\x65", $data, ["\x61\x63\x74\151\157\156" => $this->generateUrl("\143\x6c\160\137\141\x64\x6d\x69\156\x5f\x68\x65\x74\x7a\x6e\x65\162\x5f\163\156\141\x70\x73\150\157\x74\137\x63\162\145\141\x74\x65"), "\155\145\x74\150\157\x64" => "\x50\117\x53\x54", "\141\x74\x74\x72" => []]); goto C7038; A28db: return $form; goto Bdf87; C7038: $form->add("\163\x75\x62\155\x69\x74", SubmitType::class, ["\x61\164\x74\162" => ["\143\154\x61\163\x73" => "\142\x74\x6e\40\x62\164\x6e\55\x62\x6c\165\x65\x20\142\x74\156\55\x6c\147"], "\x6c\x61\142\145\x6c" => "\103\x72\145\x61\x74\145"]); goto A28db; Bdf87: } private function handleCreateSnapshotForm(Request $request, Form $form, ConfigManager $configManager) { goto Db533; F6374: f6f1e: goto Aa9b3; Ddb33: goto a6dfc; goto F6374; Aa9b3: try { goto dfe8e; ecdcc: $response = $this->redirect($this->generateUrl("\x63\154\160\x5f\x61\x64\x6d\151\x6e\x5f\150\145\164\x7a\156\x65\x72\x5f\163\x6e\x61\160\x73\150\157\x74\x73")); goto E1f3a; B548d: $hetznerClient->createSnapshot($snapshotName); goto B7bf4; B7bf4: $eventData = ["\163\156\x61\x70\x73\150\157\x74\x4e\x61\x6d\145" => $snapshotName]; goto Ffa41; E1f3a: return $response; goto Fd53b; A7ff2: $session->getFlashBag()->set("\163\165\x63\x63\145\163\163", $this->translator->trans("\123\156\x61\160\163\150\157\164\40\x69\163\x20\142\x65\151\x6e\x67\x20\143\162\145\141\164\145\144\56")); goto ecdcc; Ffa41: EventQueue::addEvent(EventQueue::EVENT_HETZNER_SNAPSHOT_CREATE, $user, $eventData, $request); goto A7ff2; a1aa0: $hetznerClient = $instance->getHetznerClient(); goto b05d0; B5849: $session = $request->getSession(); goto Efb4f; dfe8e: $user = $this->getUser(); goto B5849; Efb4f: $instance = $request->attributes->get("\x69\x6e\163\164\x61\x6e\143\x65"); goto a1aa0; b05d0: $snapshotName = $form->get("\x6e\x61\x6d\x65")->getData(); goto B548d; Fd53b: } catch (\Exception $e) { $this->logger->exception($e); $session->getFlashBag()->set("\x64\x61\156\147\145\162", $this->translator->trans("\x41\156\40\x65\162\x72\157\x72\40\150\x61\163\40\x6f\x63\143\x75\x72\162\145\x64\x2c\40\145\162\x72\x6f\162\40\x6d\x65\x73\163\x61\x67\145\72\x20\45\145\x72\x72\x6f\162\115\145\x73\163\x61\147\x65\45", ["\x25\145\x72\x72\x6f\162\115\145\x73\163\x61\x67\145\45" => $e->getMessage()])); } goto b2cb9; Db533: if (true === $form->isValid()) { goto f6f1e; } goto Fde49; b2cb9: a6dfc: goto F9005; Fde49: $this->formErrors = $this->getErrorMessages($form); goto Ddb33; F9005: } private function validateApiToken(Request $request, $apiToken) : bool { try { goto cef2a; F3737: $hetznerClient->setToken($apiToken); goto B713d; F8da1: if (!(false === empty($instanceData))) { goto b43d9; } goto a221c; cc2fd: $instance = $request->attributes->get("\151\156\163\x74\141\156\x63\145"); goto af85b; D70f7: $hetznerClient->unsetHttpClient(); goto F3737; b7aaf: b43d9: goto cc9e1; B713d: $instanceData = $hetznerClient->getInstanceData(); goto F8da1; a221c: $isApiTokenValid = true; goto b7aaf; af85b: $hetznerClient = clone $instance->getHetznerClient(); goto D70f7; cef2a: $isApiTokenValid = false; goto cc2fd; cc9e1: } catch (\Exception $e) { } return $isApiTokenValid; } }
