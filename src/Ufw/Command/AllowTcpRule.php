<?php
 namespace App\Ufw\Command; use App\System\Command; use App\Ufw\Firewall\AllowTcpRule as TcpRule; class AllowTcpRule extends Command { private TcpRule $tcpRule; private bool $dryRun = false; public function __construct(TcpRule $tcpRule) { $this->tcpRule = $tcpRule; } public function getCommand() : string { goto bbe4b; bbe4b: if (!(true === is_null($this->command))) { goto fa686; } goto D8dfd; D8dfd: $ip = $this->tcpRule->getIp(); goto f6a74; e1feb: $dryRun = $this->getDryRun(); goto D9f06; b2cdd: return $this->command; goto f7195; C96e4: fa686: goto b2cdd; D9f06: $this->command = sprintf("\57\x75\x73\x72\x2f\142\x69\x6e\57\x73\165\x64\157\x20\57\165\x73\x72\x2f\x73\x62\x69\156\57\x75\x66\x77\x20\x25\163\x20\141\x6c\x6c\157\167\x20\160\x72\x6f\x74\x6f\40\164\143\x70\40\x66\x72\x6f\x6d\x20\45\163\40\x74\x6f\x20\141\156\171\x20\160\x6f\x72\x74\40\45\x73", true === $dryRun ? "\55\55\144\x72\x79\55\x72\165\156" : '', $ip, $portRange); goto C96e4; f6a74: $portRange = $this->tcpRule->getPortRange(); goto e1feb; f7195: } public function setDryRun($flag) : void { $this->dryRun = (bool) $flag; } public function getDryRun() : bool { return $this->dryRun; } public function isSuccessful() : bool { goto D5c17; Ec2c0: $isSuccessful = false === str_contains($output, "\x45\122\122\x4f\122") ? true : false; goto C1fea; D5c17: $output = $this->getOutput(); goto Ec2c0; C1fea: return $isSuccessful; goto c7560; c7560: } }
