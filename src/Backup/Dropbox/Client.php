<?php
 namespace App\Backup\Dropbox; use GuzzleHttp\Client as HttpClient; use App\Util\Retry; class Client { const HTTP_CLIENT_TIMEOUT = 10; const ENDPOINT = "\x68\x74\164\160\x73\72\57\57\144\x72\x6f\x70\x62\157\170\x2d\141\165\x74\x68\56\x63\154\157\165\x64\160\141\x6e\145\x6c\56\x69\x6f\x2f"; private ?HttpClient $httpClient = null; public function getAccessToken(string $refreshToken) : ?string { goto Fea1f; abd66: return $accessToken; goto c0163; Fea1f: $httpClient = $this->getHttpClient(); goto ea3f4; D1ca8: $responseDataDecoded = json_decode($responseData, true); goto b75da; Fb0ce: Ad926: goto af59f; ec0b0: throw new \Exception($responseDataDecoded["\x65\x72\x72\157\162\x4d\x65\163\163\141\x67\x65"]); goto Eae4d; D24ca: $accessToken = trim($responseData); goto Fb0ce; Eec9a: $accessToken = null; goto F2349; Eae4d: d7c2f: goto B667f; F2349: if (!(200 == $response->getStatusCode())) { goto ad9af; } goto A0f77; b75da: if (true === isset($responseDataDecoded["\x61\143\143\145\x73\x73\x5f\164\157\153\x65\x6e"])) { goto E834a; } goto Ced15; Ced15: if (!(true === isset($responseDataDecoded["\x65\x72\162\x6f\162\115\145\x73\163\141\x67\145"]))) { goto d7c2f; } goto ec0b0; ea3f4: $formData = ["\x72\x65\146\162\x65\x73\x68\124\157\153\145\x6e" => $refreshToken]; goto a46ae; A0f77: $responseData = (string) $response->getBody(); goto D1ca8; Ada4c: E834a: goto D24ca; af59f: ad9af: goto abd66; a46ae: $response = $this->retry(function () use($httpClient, $formData) { $response = $httpClient->request("\120\117\x53\124", self::ENDPOINT, ["\x66\157\x72\155\137\x70\141\x72\x61\155\x73" => $formData]); return $response; }); goto Eec9a; B667f: goto Ad926; goto Ada4c; c0163: } private function getHttpClient() : HttpClient { goto fc8b9; fc8b9: if (!(true === is_null($this->httpClient))) { goto D170a; } goto c3157; C53ad: return $this->httpClient; goto C4c09; c3157: $config = ["\164\x69\155\145\157\165\x74" => self::HTTP_CLIENT_TIMEOUT, "\x76\x65\x72\x69\146\x79" => false, "\x68\145\x61\x64\145\162\163" => ["\x43\x6f\x6e\164\x65\x6e\x74\55\124\171\x70\x65" => "\141\160\160\154\x69\x63\141\164\151\x6f\x6e\x2f\152\163\x6f\x6e"]]; goto b8e08; Ad770: D170a: goto C53ad; b8e08: $this->httpClient = new HttpClient($config); goto Ad770; C4c09: } protected function retry(callable $fn, $retries = 1, $delay = 3) { return Retry::retry($fn, $retries, $delay); } }
