<?php
 namespace App\Hetzner; use GuzzleHttp\Client as HttpClient; use GuzzleHttp\Psr7\Request; use GuzzleHttp\Psr7\Response; use App\CloudPanel\Hetzner\Instance; use App\Util\Retry; class Client { const HTTP_CLIENT_TIMEOUT = 10; const API_ENDPOINT = "\x68\x74\x74\x70\163\x3a\57\x2f\x61\160\x69\56\x68\145\x74\172\x6e\145\162\x2e\x63\x6c\x6f\165\x64\57\x76\x31\57"; const META_DATA_ENDPOINT = "\x68\164\164\160\x3a\x2f\x2f\x31\x36\x39\x2e\62\65\64\56\x31\66\71\56\x32\65\x34\x2f\150\145\x74\x7a\x6e\145\162\57\166\61\x2f\155\145\x74\141\x64\x61\x74\x61\57"; private ?HttpClient $httpClient = null; private ?HttpClient $metaDataHttpClient = null; private ?string $token = null; private ?Instance $instance = null; private array $instanceData = []; private array $snapshots = []; public function setInstance(Instance $instance) : void { $this->instance = $instance; } public function getInstance() : ?Instance { return $this->instance; } public function setToken(string $token) : void { $this->token = $token; } public function getToken() : ?string { return $this->token; } public function getInstanceData() : array { goto a2079; De191: $response = $this->retry(function () use($httpClient, $request) { $response = $httpClient->send($request); return $response; }); goto Edd15; b5516: if (!(true === isset($responseData["\163\x65\162\x76\145\x72"]) && true === is_array($responseData["\x73\145\x72\x76\x65\x72"]))) { goto Aaed6; } goto ee199; D43ad: $responseData = json_decode((string) $response->getBody(), true); goto b5516; b5759: return $this->instanceData; goto Cc512; B8a1d: Aaed6: goto D6a3e; e8fd9: $httpClient = $this->getHttpClient(); goto De191; Fae5b: $request = new Request("\x47\105\x54", $requestUrl); goto e8fd9; e4c72: if (!(200 == $responseStatusCode)) { goto C405f; } goto D43ad; f2a84: $instanceId = $this->instance->getInstanceId(); goto F1558; D6a3e: C405f: goto bb1fb; bb1fb: B609f: goto b5759; Edd15: $responseStatusCode = $response->getStatusCode(); goto e4c72; a2079: if (!(true === empty($this->instanceData))) { goto B609f; } goto f2a84; ee199: $this->instanceData = $responseData["\163\145\x72\166\x65\x72"]; goto B8a1d; F1558: $requestUrl = sprintf("\x25\x73\57\x73\145\x72\166\145\162\x73\57\x25\163", rtrim(self::API_ENDPOINT, "\57"), $instanceId); goto Fae5b; Cc512: } public function getInstanceName() : ?string { goto b0e2f; D4141: $instanceName = $instanceData["\156\x61\x6d\x65"] ?? ''; goto f4546; b0e2f: $instanceData = $this->getInstanceData(); goto D4141; f4546: return $instanceName; goto f7185; f7185: } public function getSnapshots() : array { goto b5dc8; D3d32: $instanceId = $this->instance->getInstanceId(); goto D355f; de3ae: $responseStatusCode = $response->getStatusCode(); goto B48a8; ddf6b: f7e24: goto B7fb3; E8edb: return $this->snapshots; goto bf0bc; e1c3e: $response = $this->retry(function () use($httpClient, $request) { $response = $httpClient->send($request); return $response; }); goto de3ae; B7fb3: Ea568: goto E8edb; fc94a: db472: goto ddf6b; bc498: usort($this->snapshots, function ($a, $b) { return $a->getCreatedAt() < $b->getCreatedAt(); }); goto fc94a; Aa9bc: foreach ($responseData["\151\x6d\141\147\145\163"] as $snapshotData) { goto b8b38; fcdd8: $status = $snapshotData["\163\164\x61\164\x75\x73"] ?? ''; goto Ee7e4; db6ee: $this->snapshots[] = $snapshot; goto C1767; b0edb: $id = $snapshotData["\151\144"] ?? ''; goto A7862; b8c14: $snapshot->setSize($size); goto Db72d; f7b03: $snapshot->setStatus($status); goto Cd335; cf652: $snapshot->setId($id); goto B4b86; Cd335: $snapshot->setIsDeleteProtected($isDeleteProtected); goto db6ee; E3451: $isDeleteProtected = true === isset($snapshotData["\x70\162\x6f\164\x65\x63\x74\x69\157\x6e"]["\x64\145\x6c\x65\164\x65"]) && true === $snapshotData["\x70\x72\x6f\x74\145\x63\x74\x69\x6f\x6e"]["\144\145\x6c\x65\164\145"] ? true : false; goto E8fc2; Ee7e4: $name = $snapshotData["\x64\145\x73\143\x72\x69\x70\164\151\x6f\156"] ?? ''; goto a423c; aaa54: c3244: goto f12c7; Fff9c: $snapshot->setName($name); goto b8c14; A7862: $type = $snapshotData["\x74\x79\160\x65"] ?? ''; goto fcdd8; a423c: $size = $snapshotData["\151\155\141\x67\x65\x5f\163\x69\172\x65"] ?? ''; goto cfd15; cfd15: if (!(Snapshot::STATUS_AVAILABLE == $status)) { goto c3244; } goto C2516; Db72d: $snapshot->setType($type); goto f7b03; E8fc2: $snapshot = new Snapshot(); goto cf652; C2516: $size = number_format($size, 1); goto aaa54; f12c7: $createdAt = true === isset($snapshotData["\x63\162\x65\x61\x74\x65\144"]) ? new \DateTime($snapshotData["\x63\x72\x65\141\x74\x65\x64"]) : ''; goto E3451; c7c98: D27e7: goto Fddce; b8b38: if (!(true === isset($snapshotData["\143\x72\x65\141\164\145\144\137\x66\x72\x6f\155"]["\x69\x64"]) && $instanceId == $snapshotData["\x63\x72\145\141\x74\x65\144\137\146\162\x6f\155"]["\151\144"])) { goto c0e9b; } goto b0edb; B4b86: $snapshot->setCreatedAt($createdAt); goto Fff9c; C1767: c0e9b: goto c7c98; Fddce: } goto e313a; e313a: B7825: goto bc498; da1b8: $httpClient = $this->getHttpClient(); goto e1c3e; Fd592: if (!(true === isset($responseData["\x69\155\x61\147\x65\x73"]) && true === is_array($responseData["\x69\155\141\147\x65\163"]))) { goto db472; } goto Aa9bc; D355f: $requestUrl = sprintf("\45\x73\x2f\151\x6d\141\147\x65\x73\x3f\164\x79\160\x65\x3d\163\x6e\x61\x70\163\150\x6f\164", rtrim(self::API_ENDPOINT, "\x2f")); goto Cbeff; b5dc8: if (!(true === empty($this->snapshots))) { goto Ea568; } goto D3d32; B48a8: if (!(200 == $responseStatusCode)) { goto f7e24; } goto ddd36; Cbeff: $request = new Request("\x47\105\x54", $requestUrl); goto da1b8; ddd36: $responseData = json_decode((string) $response->getBody(), true); goto Fd592; bf0bc: } public function getSnapshot($id) : ?Snapshot { goto Cf242; Cc2a4: $type = $snapshotData["\x74\x79\x70\145"] ?? ''; goto ed492; D2382: if (!(true === isset($responseData["\x69\155\x61\x67\x65"]) && true === is_array($responseData["\x69\x6d\x61\x67\145"]))) { goto dc039; } goto ff5d8; aaf9a: $request = new Request("\x47\105\124", $requestUrl); goto Cbd39; ff5d8: $snapshotData = $responseData["\x69\x6d\141\x67\145"]; goto a2ed3; A368b: c89fb: goto c9ccb; Fb7c7: B3380: goto C850e; Ff7ec: dc039: goto A368b; b6656: $size = $snapshotData["\151\x6d\141\x67\x65\x5f\x73\151\172\x65"] ?? ''; goto e8e37; C99e2: $response = $this->retry(function () use($httpClient, $request) { $response = $httpClient->send($request); return $response; }); goto fa9cc; f0e28: $snapshot->setStatus($status); goto Ff7ec; Cbd39: $httpClient = $this->getHttpClient(); goto C99e2; Ed1bc: if (!(200 == $responseStatusCode)) { goto c89fb; } goto f5a0b; F4c90: $snapshot->setType($type); goto f0e28; C850e: $createdAt = true === isset($snapshotData["\143\162\x65\141\164\x65\x64"]) ? new \DateTime($snapshotData["\143\162\x65\141\x74\145\144"]) : ''; goto A3d9b; c9ccb: return $snapshot; goto c88d7; a2ed3: $id = $snapshotData["\x69\144"] ?? ''; goto Cc2a4; e8e37: if (!(Snapshot::STATUS_AVAILABLE == $status)) { goto B3380; } goto D8f60; dbab6: $snapshot = null; goto Ed1bc; D8f60: $size = number_format($size, 1); goto Fb7c7; A3d9b: $snapshot = new Snapshot(); goto Bb249; ed492: $status = $snapshotData["\x73\x74\141\164\165\x73"] ?? ''; goto D7796; fa9cc: $responseStatusCode = $response->getStatusCode(); goto dbab6; D7796: $name = $snapshotData["\x64\145\x73\143\x72\x69\160\x74\x69\157\156"] ?? ''; goto b6656; d5780: $snapshot->setCreatedAt($createdAt); goto fd254; f5a0b: $responseData = json_decode((string) $response->getBody(), true); goto D2382; e8e73: $snapshot->setSize($size); goto F4c90; Bb249: $snapshot->setId($id); goto d5780; Cf242: $requestUrl = sprintf("\x25\163\57\151\x6d\141\147\145\x73\57\45\x73", rtrim(self::API_ENDPOINT, "\x2f"), $id); goto aaf9a; fd254: $snapshot->setName($name); goto e8e73; c88d7: } public function deleteSnapshot($id) : Response { goto b54f4; e2426: return $response; goto dd037; ca636: $response = $this->retry(function () use($httpClient, $request) { $response = $httpClient->send($request); return $response; }); goto e2426; b54f4: $requestUrl = sprintf("\45\163\57\x69\x6d\x61\147\145\163\57\x25\x73", rtrim(self::API_ENDPOINT, "\57"), $id); goto b24b5; b24b5: $request = new Request("\104\105\114\105\x54\x45", $requestUrl); goto bc0af; bc0af: $httpClient = $this->getHttpClient(); goto ca636; dd037: } public function createSnapshot($name) : void { goto Fa2f7; Fa2f7: $instanceId = $this->instance->getInstanceId(); goto e2cb7; d432f: $data = ["\x6c\141\x62\145\x6c\153\x65\x79" => $name, "\144\145\163\143\x72\151\160\x74\151\157\x6e" => $name]; goto c9124; C8f37: throw new \Exception(sprintf("\123\156\141\x70\163\150\157\164\x20\143\x72\145\x61\x74\151\x6f\x6e\40\146\141\x69\x6c\145\x64\x2c\40\163\x74\141\x74\x75\163\40\x63\x6f\x64\145\x3a\40\45\x73\x20\56", $response->getStatusCode())); goto E1e84; c9124: $response = $httpClient->post($requestUrl, ["\x62\x6f\x64\x79" => json_encode($data)]); goto b1335; e2cb7: $requestUrl = sprintf("\x25\163\57\163\x65\x72\x76\x65\x72\163\57\x25\x73\x2f\141\x63\164\x69\157\x6e\x73\57\x63\x72\145\141\x74\x65\137\x69\x6d\x61\x67\x65", rtrim(self::API_ENDPOINT, "\57"), $instanceId); goto d0656; b1335: if (!(201 != $response->getStatusCode())) { goto d35ab; } goto C8f37; d0656: $httpClient = $this->getHttpClient(); goto d432f; E1e84: d35ab: goto a76fc; a76fc: } public function getMetaDataInstanceId() : ?string { $instanceId = $this->getMetaDataValue("\x69\156\x73\x74\141\156\143\x65\55\151\144"); return $instanceId; } public function getMetaDataIpv4PublicIp() : ?string { $ipv4PublicIp = $this->getMetaDataValue("\x70\165\x62\154\151\143\x2d\151\x70\x76\64"); return $ipv4PublicIp; } public function getMetaDataRegion() : ?string { try { $region = $this->getMetaDataValue("\x72\x65\147\151\x6f\156"); } catch (\Exception $e) { $region = ''; } return $region; } private function getMetaDataValue($path) : ?string { goto E8d14; a89db: if (!(200 == $responseStatusCode)) { goto Cdaa5; } goto ecedd; E9c19: $request = new Request("\x47\105\124", $requestUrl); goto Bd6d6; Bd6d6: $metaDataHttpClient = $this->getMetaDataHttpClient(); goto f01ad; Efea2: $responseData = ''; goto a89db; ecedd: $responseData = trim((string) $response->getBody()); goto B835e; bbe71: $responseStatusCode = $response->getStatusCode(); goto Efea2; E8d14: $requestUrl = sprintf("\45\163\57\45\x73", rtrim(self::META_DATA_ENDPOINT, "\x2f"), $path); goto E9c19; feef5: return $responseData; goto Dcc58; f01ad: $response = $this->retry(function () use($metaDataHttpClient, $request) { $response = $metaDataHttpClient->send($request); return $response; }, 1, 2); goto bbe71; B835e: Cdaa5: goto feef5; Dcc58: } public function unsetHttpClient() : void { $this->httpClient = null; } private function getMetaDataHttpClient() : HttpClient { goto f50ee; f50ee: if (!(true === is_null($this->metaDataHttpClient))) { goto B1cda; } goto c8807; Ffe9c: $this->metaDataHttpClient = new HttpClient($config); goto Bcf67; c8807: $config = ["\164\151\155\145\x6f\165\164" => self::HTTP_CLIENT_TIMEOUT, "\166\145\162\x69\146\171" => false]; goto Ffe9c; Bcf67: B1cda: goto Ee5df; Ee5df: return $this->metaDataHttpClient; goto B7880; B7880: } private function getHttpClient() : HttpClient { goto A3907; Aa34f: return $this->httpClient; goto D88d1; ea244: $this->httpClient = new HttpClient($config); goto b9599; c53c9: $token = $this->getToken(); goto ded90; A3907: if (!(true === is_null($this->httpClient))) { goto B706f; } goto c53c9; ded90: $config = ["\x74\151\155\145\x6f\165\x74" => self::HTTP_CLIENT_TIMEOUT, "\x76\x65\x72\x69\x66\171" => false, "\x68\145\x61\x64\x65\162\163" => ["\x43\157\156\x74\145\156\164\x2d\124\x79\160\x65" => "\x61\160\160\154\x69\x63\141\x74\x69\x6f\x6e\57\x6a\163\x6f\x6e", "\101\x75\164\x68\x6f\162\x69\x7a\141\x74\x69\157\156" => sprintf("\102\x65\x61\x72\145\x72\x20\x25\x73", $token)]]; goto ea244; b9599: B706f: goto Aa34f; D88d1: } private function retry(callable $fn, $retries = 1, $delay = 3) { return Retry::retry($fn, $retries, $delay); } }
