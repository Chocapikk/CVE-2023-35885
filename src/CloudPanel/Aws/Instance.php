<?php
 namespace App\CloudPanel\Aws; use GuzzleHttp\Psr7\Request; use App\CloudPanel\Instance as BaseInstance; class Instance extends BaseInstance { const AWS_INSTANCE_IDENTITY_ENDPOINT = "\x68\x74\164\x70\72\57\x2f\61\x36\x39\56\x32\x35\64\56\x31\66\x39\x2e\x32\65\64\x2f\x6c\x61\x74\145\163\164\57\x64\x79\156\x61\155\x69\143\x2f\151\x6e\163\164\141\156\x63\145\x2d\x69\x64\x65\x6e\x74\x69\164\171\x2f\x64\x6f\x63\x75\155\145\x6e\x74"; private ?string $instanceId = null; private array $instanceData = []; private ?string $instanceType = null; public function getRegion() : ?string { goto a9569; a9569: if (!(true === is_null($this->region))) { goto E9f49; } goto d3a20; F081f: $this->region = $instanceData["\x72\145\x67\x69\157\156"]; goto B742b; bdfbe: if (!(true === isset($instanceData["\162\145\x67\x69\157\156"]) && false === empty($instanceData["\162\x65\147\151\157\156"]))) { goto C907c; } goto F081f; f693c: E9f49: goto Bb6b2; d3a20: $instanceData = $this->getInstanceData(); goto bdfbe; Bb6b2: return $this->region; goto b1a6a; B742b: C907c: goto f693c; b1a6a: } public function setInstanceId(string $instanceId) : void { $this->instanceId = $instanceId; } public function getInstanceId() : string { goto ad31e; d6ff7: $instanceData = $this->getInstanceData(); goto b7e78; C72ce: B30ec: goto d50c0; ad31e: if (!(true === is_null($this->instanceId))) { goto B30ec; } goto d6ff7; b7e78: if (!(true === isset($instanceData["\151\x6e\163\x74\141\x6e\143\x65\111\x64"]) && false === empty($instanceData["\151\x6e\163\164\141\156\x63\x65\111\144"]))) { goto e68f7; } goto eda5a; d50c0: return $this->instanceId; goto C1a5b; f758c: e68f7: goto C72ce; eda5a: $this->instanceId = $instanceData["\151\156\x73\x74\141\x6e\x63\145\x49\144"]; goto f758c; C1a5b: } public function setInstanceType(string $instanceType) : void { $this->instanceType = $instanceType; } public function getInstanceType() : string { goto Cc9bc; Cc9bc: if (!(true === is_null($this->instanceType))) { goto b52dd; } goto A6b8f; b8a37: if (!(true === isset($instanceData["\x69\x6e\163\164\x61\156\x63\x65\124\171\160\145"]) && false === empty($instanceData["\x69\156\163\x74\141\x6e\x63\x65\x54\x79\x70\x65"]))) { goto c3e0d; } goto Eca6b; Abed6: c3e0d: goto acf7e; Ad5a0: return $this->instanceType; goto E0f7b; A6b8f: $instanceData = $this->getInstanceData(); goto b8a37; Eca6b: $this->instanceType = $instanceData["\x69\x6e\163\x74\x61\x6e\143\145\x54\x79\160\x65"]; goto Abed6; acf7e: b52dd: goto Ad5a0; E0f7b: } private function getInstanceData() : array { goto ea64a; e038e: E0ce2: goto c9811; d67aa: $request = new Request("\x47\x45\124", self::AWS_INSTANCE_IDENTITY_ENDPOINT); goto d7cce; d7cce: $httpClient = $this->getHttpClient(); goto d7902; c9811: bb13a: goto eb369; A740e: $this->instanceData = json_decode((string) $response->getBody(), true); goto e038e; ea64a: if (!(true === empty($this->instanceData))) { goto bb13a; } goto d67aa; C7533: if (!(200 == $responseStatusCode)) { goto E0ce2; } goto A740e; eb369: return $this->instanceData; goto ae455; d7902: $response = $this->retry(function () use($httpClient, $request) { $response = $httpClient->send($request); return $response; }); goto f50b3; f50b3: $responseStatusCode = $response->getStatusCode(); goto C7533; ae455: } }
