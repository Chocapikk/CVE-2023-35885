<?php
 namespace App\Aws; use App\Aws\Regions; class Instance { const STATE_RUNNING = "\x72\165\156\x6e\151\156\147"; const STATE_STOPPED = "\x73\x74\x6f\x70\x70\145\144"; const STATE_PENDING = "\160\x65\156\144\151\156\x67"; private ?string $instanceId = null; private ?string $instanceType = null; private ?string $region = null; private ?string $publicIpAddress = null; private ?string $privateIpAddress = null; private array $securityGroups = []; private ?string $state = null; private array $tags = []; public function setInstanceId(string $instanceId) : void { $this->instanceId = $instanceId; } public function getInstanceId() : ?string { return $this->instanceId; } public function setInstanceType(string $instanceType) : void { $this->instanceType = $instanceType; } public function getInstanceType() : ?string { return $this->instanceType; } public function setRegion(string $region) { $this->region = $region; } public function getRegion() : ?string { return $this->region; } public function setPublicIpAddress(string $publicIpAddress) : void { $this->publicIpAddress = $publicIpAddress; } public function getPublicIpAddress() : ?string { return $this->publicIpAddress; } public function setPrivateIpAddress(string $privateIpAddress) : void { $this->privateIpAddress = $privateIpAddress; } public function getPrivateIpAddress() : ?string { return $this->privateIpAddress; } public function setSecurityGroups(array $securityGroups) : void { $this->securityGroups = $securityGroups; } public function getSecurityGroups() : ?string { return $this->securityGroups; } public function setState(string $state) : void { $this->state = $state; } public function getState() : ?string { return $this->state; } public function setTags(array $tags) : void { $this->tags = $tags; } public function getTags() : array { return $this->tags; } public function getInstanceName() : ?string { $instanceName = $this->getTagValue("\116\x61\x6d\145"); return $instanceName; } private function getTagValue(string $key) : ?string { goto B71a6; f5dfe: Ce3f1: goto f60bd; C7971: foreach ($tags as $tag) { goto A46e3; fc33c: goto Ce3f1; goto da977; da977: A453c: goto B3dcb; A83b5: $value = $tag["\x56\x61\154\165\x65"]; goto fc33c; B3dcb: D0059: goto Bdde1; A46e3: if (!(true === isset($tag["\x4b\x65\171"]) && $tag["\113\x65\171"] == $key && true === isset($tag["\126\141\154\x75\145"]))) { goto A453c; } goto A83b5; Bdde1: } goto f5dfe; f60bd: A3e94: goto Dd8ea; Dd8ea: return $value; goto D3174; B71a6: $value = ''; goto D49c8; E32fb: if (!count($tags)) { goto A3e94; } goto C7971; D49c8: $tags = $this->getTags(); goto E32fb; D3174: } public function getRegionName() : ?string { goto c4f52; c4f52: $region = $this->getRegion(); goto A95c2; A95c2: $regionName = Regions::getRegionName($region); goto a54b7; a54b7: return $regionName; goto Af526; Af526: } }
