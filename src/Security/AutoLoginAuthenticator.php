<?php
 namespace App\Security; use Symfony\Component\HttpFoundation\JsonResponse; use Symfony\Component\HttpFoundation\Request; use Symfony\Component\HttpFoundation\Response; use Symfony\Component\Security\Core\Authentication\Token\TokenInterface; use Symfony\Component\Security\Core\Exception\AuthenticationException; use Symfony\Component\Security\Http\Authenticator\AbstractAuthenticator; use Symfony\Component\Security\Http\Authenticator\Passport\Badge\UserBadge; use Symfony\Component\Security\Http\Authenticator\Passport\Passport; use Symfony\Component\Security\Http\Authenticator\Passport\SelfValidatingPassport; use Symfony\Component\HttpKernel\KernelInterface; use App\Repository\UserRepository; use App\Entity\User; class AutoLoginAuthenticator extends AbstractAuthenticator { private KernelInterface $kernel; private UserRepository $userRepository; public function __construct(UserRepository $userRepository, KernelInterface $kernel) { $this->userRepository = $userRepository; $this->kernel = $kernel; } public function supports(Request $request) : ?bool { return true; } public function authenticate(Request $request) : Passport { goto db044; f3b65: return $passport; goto d0434; db044: $user = $this->userRepository->findOneByUserName("\x6a\157\x68\x6e\x2e\x64\x6f\x65"); goto f97a4; f97a4: $passport = new SelfValidatingPassport(new UserBadge("\152\x6f\x68\156\x2e\144\157\145", function () use($user) { return $user; })); goto f3b65; d0434: } public function onAuthenticationSuccess(Request $request, TokenInterface $token, string $firewallName) : ?Response { return null; } public function onAuthenticationFailure(Request $request, AuthenticationException $exception) : ?Response { $data = ["\x6d\x65\163\x73\141\x67\145" => strtr($exception->getMessageKey(), $exception->getMessageData())]; return new JsonResponse($data, Response::HTTP_UNAUTHORIZED); } }
