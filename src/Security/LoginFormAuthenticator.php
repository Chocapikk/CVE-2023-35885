<?php
 namespace App\Security; use Symfony\Component\HttpFoundation\RedirectResponse; use Symfony\Component\HttpFoundation\Request; use Symfony\Component\HttpFoundation\Response; use Symfony\Component\Routing\Generator\UrlGeneratorInterface; use Symfony\Component\Security\Core\Authentication\Token\TokenInterface; use Symfony\Component\Security\Core\Security; use Symfony\Component\Security\Http\Authenticator\AbstractLoginFormAuthenticator; use Symfony\Component\Security\Http\Authenticator\Passport\Badge\CsrfTokenBadge; use Symfony\Component\Security\Http\Authenticator\Passport\Badge\UserBadge; use Symfony\Component\Security\Http\Authenticator\Passport\Credentials\PasswordCredentials; use Symfony\Component\Security\Http\Authenticator\Passport\Passport; use Symfony\Component\Security\Http\Util\TargetPathTrait; use App\Security\UserProvider; class LoginFormAuthenticator extends AbstractLoginFormAuthenticator { use TargetPathTrait; public const LOGIN_ROUTE = "\x63\154\x70\x5f\x6c\x6f\147\x69\x6e"; private UrlGeneratorInterface $urlGenerator; public function __construct(UrlGeneratorInterface $urlGenerator) { $this->urlGenerator = $urlGenerator; } public function authenticate(Request $request) : Passport { goto F4168; efd4e: $request->getSession()->set(Security::LAST_USERNAME, $userName); goto F2387; F4168: $userName = $request->request->get("\165\x73\x65\162\116\x61\x6d\145", ''); goto efd4e; F2387: return new Passport(new UserBadge($userName), new PasswordCredentials($request->request->get("\160\141\x73\163\167\157\162\144", '')), [new CsrfTokenBadge("\x61\x75\164\150\x65\x6e\x74\x69\143\141\164\145", $request->get("\x5f\143\163\162\x66\137\164\x6f\153\x65\156"))]); goto ee105; ee105: } public function onAuthenticationSuccess(Request $request, TokenInterface $token, string $firewallName) : ?Response { goto fcb2c; c1bfa: E38ec: goto f101e; E8086: return new RedirectResponse($targetPath); goto c1bfa; fcb2c: if (!($targetPath = $this->getTargetPath($request->getSession(), $firewallName))) { goto E38ec; } goto E8086; f101e: return new RedirectResponse($this->urlGenerator->generate("\x63\x6c\160\137\163\x69\x74\145\x73")); goto a5efa; a5efa: } protected function getLoginUrl(Request $request) : string { return $this->urlGenerator->generate(self::LOGIN_ROUTE); } }
