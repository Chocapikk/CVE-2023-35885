<?php
 namespace App\Command; use Symfony\Component\Validator\Validator\ValidatorInterface; use Symfony\Component\Validator\ConstraintViolationList; use Doctrine\Common\Collections\ArrayCollection; use App\Command\Command as BaseCommand; use App\Entity\Site as SiteEntity; use App\Site\Site; use App\Site\NodejsSite; use App\Site\StaticSite; use App\Site\PhpSite; use App\Site\PythonSite; use App\Site\ReverseProxySite; use App\Site\Deleter as SiteDeleter; use App\Site\Updater as SiteUpdater; use App\Site\Updater\NodejsSite as NodejsSiteUpdater; use App\Site\Updater\StaticSite as StaticSiteUpdater; use App\Site\Updater\PhpSite as PhpSiteUpdater; use App\Site\Updater\PythonSite as PythonSiteUpdater; use App\Site\Updater\ReverseProxySite as ReverseProxySiteUpdater; use App\Site\Deleter\NodejsSite as NodejsSiteDeleter; use App\Site\Deleter\StaticSite as StaticSiteDeleter; use App\Site\Deleter\PhpSite as PhpSiteDeleter; use App\Site\Deleter\PythonSite as PythonSiteDeleter; use App\Site\Deleter\ReverseProxySite as ReverseProxySiteDeleter; use App\Site\Parser\DomainName as DomainNameParser; use App\Entity\Manager\SiteManager as SiteEntityManager; use App\Entity\Manager\CertificateManager as CertificateEntityManager; use App\Entity\Manager\VhostTemplateManager as VhostTemplateEntityManager; use App\Entity\Manager\DatabaseServerManager as DatabaseServerEntityManager; class SiteCommand extends BaseCommand { protected DomainNameParser $domainNameParser; protected SiteEntityManager $siteEntityManager; protected CertificateEntityManager $certificateEntityManager; protected DatabaseServerEntityManager $databaseServerEntityManager; protected VhostTemplateEntityManager $vhostTemplateEntityManager; protected ValidatorInterface $validator; public function __construct(DomainNameParser $domainNameParser, SiteEntityManager $siteEntityManager, CertificateEntityManager $certificateEntityManager, DatabaseServerEntityManager $databaseServerEntityManager, VhostTemplateEntityManager $vhostTemplateEntityManager, ValidatorInterface $validator) { goto B3951; Cb526: $this->vhostTemplateEntityManager = $vhostTemplateEntityManager; goto A23b4; B75da: $this->databaseServerEntityManager = $databaseServerEntityManager; goto Cb526; dff6b: $this->siteEntityManager = $siteEntityManager; goto B985f; F6728: parent::__construct(); goto C6cc9; B3951: $this->domainNameParser = $domainNameParser; goto dff6b; B985f: $this->certificateEntityManager = $certificateEntityManager; goto B75da; A23b4: $this->validator = $validator; goto F6728; C6cc9: } protected function configure() : void { $this->setName("\x73\151\164\x65\72\164\155\x70"); } protected function getSite(string $domainName) : ?Site { goto debf5; db336: $site->setRegistrableDomain($registrableDomain); goto Ffa24; Ffa24: $site->setSubdomain($subdomain); goto F0181; Dcfd8: $site->setBlockedBots($siteEntity->getBlockedBots()); goto B7de4; f9125: $siteEntity = $this->getSiteEntity($domainName); goto Cd66a; d3211: da1aa: goto f531e; c406a: $subdomain = $resolvedDomainName->subDomain()->toString(); goto Ce233; Ce233: $subdomain = false === empty($subdomain) ? $subdomain : null; goto c6cb9; B7de4: $site->setBlockedIps($siteEntity->getBlockedIps()); goto E6eb0; debf5: $site = null; goto f9125; F0181: $site->setRootDirectory($siteEntity->getRootDirectory()); goto Fa93a; E6eb0: $site->setCertificate($siteEntity->getCertificate()); goto fafcf; Ba1b5: $registrableDomain = $resolvedDomainName->registrableDomain()->toString(); goto c406a; b5702: return $site; goto A88c1; C7eda: throw new \Exception(sprintf("\123\151\x74\x65\x20\42\x25\163\x22\x20\x64\157\145\163\40\x6e\x6f\164\x20\145\x78\151\163\x74\x2e", $domainName)); goto c7eac; d7f4b: ca454: goto f2483; fafcf: $site->setCertificates($siteEntity->getCertificates()); goto bb836; c6dfc: $site->setFtpUsers($siteEntity->getFtpUsers()); goto e3007; f171e: $site->setPageSpeedSettings($siteEntity->getPageSpeedSettings()); goto d7f4b; Fa93a: $site->setDatabases($siteDatabases); goto Ce933; dc6eb: $site->setUser($siteEntity->getUser()); goto Bcda5; a5be4: $siteType = $siteEntity->getType(); goto c11c5; c7eac: goto E9e41; goto e1348; c11c5: switch ($siteType) { case SiteEntity::TYPE_NODEJS: goto De00b; a9a79: goto E28d2; goto Ba212; De00b: $site = new NodejsSite(); goto Cf4e2; Cf4e2: $site->setNodejsSettings($siteEntity->getNodejsSettings()); goto a9a79; Ba212: case SiteEntity::TYPE_STATIC: $site = new StaticSite(); goto E28d2; case SiteEntity::TYPE_PHP: goto Aee59; fb217: goto E28d2; goto dd2a5; Aee59: $site = new PhpSite(); goto da2a1; da2a1: $site->setPhpSettings($siteEntity->getPhpSettings()); goto be96b; be96b: $site->setVarnishCache($siteEntity->getVarnishCache()); goto fb217; dd2a5: case SiteEntity::TYPE_PYTHON: goto e65e3; d4da1: $site->setPythonSettings($siteEntity->getPythonSettings()); goto b255c; b255c: goto E28d2; goto Ae6b3; e65e3: $site = new PythonSite(); goto d4da1; Ae6b3: case SiteEntity::TYPE_REVERSE_PROXY: goto dd5d7; Af658: $site->setReverseProxyUrl($siteEntity->getReverseProxyUrl()); goto F4760; F4760: goto E28d2; goto B3777; dd5d7: $site = new ReverseProxySite(); goto Af658; B3777: } goto d3211; d9b72: $site->setPageSpeedEnabled($siteEntity->getPageSpeedEnabled()); goto f171e; e3007: $site->setSshUsers($siteEntity->getSshUsers()); goto b8f87; Ed833: $resolvedDomainName = $this->domainNameParser->resolveDomainName($domainName); goto Ba1b5; Cd66a: if (false === is_null($siteEntity)) { goto D8406; } goto C7eda; b8f87: $site->setVhostTemplate($siteEntity->getVhostTemplate()); goto e0c64; bb836: $site->setCronJobs($siteEntity->getCronJobs()); goto c6dfc; e1348: D8406: goto a5be4; cbf8b: if (!(false === is_null($site))) { goto ca454; } goto Ed833; Ce933: $site->setBasicAuth($siteEntity->getBasicAuth()); goto Dcfd8; e0c64: $site->setAllowTrafficFromCloudflareOnly($siteEntity->allowTrafficFromCloudflareOnly()); goto d9b72; f531e: E28d2: goto cbf8b; c6cb9: $siteDatabases = $this->getSiteDatabases($siteEntity); goto dc6eb; Bcda5: $site->setDomainName($siteEntity->getDomainName()); goto db336; f2483: E9e41: goto b5702; A88c1: } private function getSiteDatabases(SiteEntity $siteEntity) : ?ArrayCollection { goto Bc314; E7fde: $databaseEntities = $siteEntity->getDatabases(); goto fddbf; fddbf: foreach ($databaseEntities as $databaseEntity) { goto c5ccf; C80a3: B0210: goto F8e3b; dd064: $siteDatabases->add($databaseEntity); goto F8194; f151d: if (!($databaseServerEntity->getId() == $activeDatabaseServerEntity->getId())) { goto E062d; } goto dd064; c5ccf: $databaseServerEntity = $databaseEntity->getDatabaseServer(); goto f151d; F8194: E062d: goto C80a3; F8e3b: } goto f3eff; B45dc: return $siteDatabases; goto E5311; F2d79: $activeDatabaseServerEntity = $this->databaseServerEntityManager->getActiveDatabaseServer(); goto E7fde; f3eff: d51c6: goto B45dc; Bc314: $siteDatabases = new ArrayCollection(); goto F2d79; E5311: } protected function getSiteDeleter(Site $site) : ?SiteDeleter { goto Aec83; cece4: switch ($siteType) { case SiteEntity::TYPE_NODEJS: $siteDeleter = new NodejsSiteDeleter($site); goto ecb05; case SiteEntity::TYPE_STATIC: $siteDeleter = new StaticSiteDeleter($site); goto ecb05; case SiteEntity::TYPE_PHP: $siteDeleter = new PhpSiteDeleter($site); goto ecb05; case SiteEntity::TYPE_PYTHON: $siteDeleter = new PythonSiteDeleter($site); goto ecb05; case SiteEntity::TYPE_REVERSE_PROXY: $siteDeleter = new ReverseProxySiteDeleter($site); goto ecb05; } goto fbd14; d6af4: return $siteDeleter; goto e2e5c; b9353: ecb05: goto d6af4; fbd14: f85c1: goto b9353; Aec83: $siteDeleter = null; goto Ddc0f; Ddc0f: $siteType = $site->getType(); goto cece4; e2e5c: } protected function getSiteUpdater(Site $site) : ?SiteUpdater { goto Eab70; F2b0f: bac30: goto c1849; Fa9ae: Bbc37: goto F2b0f; Ab43b: switch ($siteType) { case SiteEntity::TYPE_NODEJS: $siteUpdater = new NodejsSiteUpdater($site); goto bac30; case SiteEntity::TYPE_STATIC: $siteUpdater = new StaticSiteUpdater($site); goto bac30; case SiteEntity::TYPE_PHP: $siteUpdater = new PhpSiteUpdater($site); goto bac30; case SiteEntity::TYPE_PYTHON: $siteUpdater = new PythonSiteUpdater($site); goto bac30; case SiteEntity::TYPE_REVERSE_PROXY: $siteUpdater = new ReverseProxySiteUpdater($site); goto bac30; } goto Fa9ae; c1849: return $siteUpdater; goto Aff04; Eab70: $siteUpdater = null; goto F26ca; F26ca: $siteType = $site->getType(); goto Ab43b; Aff04: } protected function getSiteEntity(string $domainName) : ?SiteEntity { $siteEntity = $this->siteEntityManager->findOneByDomainName($domainName); return $siteEntity; } protected function getSiteEntityBySiteUser(string $siteUser) : ?SiteEntity { $siteEntity = $this->siteEntityManager->findOneByUser($siteUser); return $siteEntity; } protected function prepareConstraints(ConstraintViolationList $constraints) : void { $this->changePropertyPath("\165\x73\x65\162", "\163\151\164\x65\x55\163\x65\162", $constraints); $this->changePropertyPath("\165\x73\x65\x72\x50\x61\x73\x73\x77\157\162\144", "\x73\151\164\145\x55\163\145\162\120\x61\163\x73\167\157\162\144", $constraints); } }
