<?php
 namespace App\Command; use App\Command\SiteCommand as SiteCommand; use Symfony\Component\Console\Input\InputInterface; use Symfony\Component\Console\Input\InputOption; use Symfony\Component\Console\Output\OutputInterface; use Symfony\Component\Validator\Validator\ValidatorInterface; use Symfony\Component\Validator\ConstraintViolationList; use Symfony\Component\Console\Question\ConfirmationQuestion; use App\Command\Command as BaseCommand; use App\Entity\Manager\SiteManager as SiteEntityManager; use App\Entity\Manager\DatabaseManager as DatabaseEntityManager; use App\Entity\Manager\DatabaseUserManager as DatabaseUserEntityManager; use App\Entity\Manager\DatabaseServerManager as DatabaseServerEntityManager; use App\Database\Manager as DatabaseManager; class DatabaseDeleteCommand extends BaseCommand { private SiteEntityManager $siteEntityManager; private DatabaseEntityManager $databaseEntityManager; private DatabaseUserEntityManager $databaseUserEntityManager; private DatabaseServerEntityManager $databaseServerEntityManager; private ValidatorInterface $validator; public function __construct(SiteEntityManager $siteEntityManager, DatabaseEntityManager $databaseEntityManager, DatabaseUserEntityManager $databaseUserEntityManager, DatabaseServerEntityManager $databaseServerEntityManager, ValidatorInterface $validator) { goto cdb6f; a9ed6: $this->databaseEntityManager = $databaseEntityManager; goto df271; edf54: parent::__construct(); goto eb4f5; cdb6f: $this->siteEntityManager = $siteEntityManager; goto a9ed6; Cbe42: $this->validator = $validator; goto edf54; df271: $this->databaseUserEntityManager = $databaseUserEntityManager; goto A3064; A3064: $this->databaseServerEntityManager = $databaseServerEntityManager; goto Cbe42; eb4f5: } protected function configure() : void { goto e3ab3; e3ab3: $this->setName("\x64\x62\72\144\x65\154\x65\164\x65"); goto D1b9e; bda2d: $this->addOption("\146\157\x72\x63\145", "\146", InputOption::VALUE_NONE); goto Cc9ad; D1b9e: $this->setDescription("\143\x6c\x70\x63\x74\154\x20\144\x62\x3a\x64\145\x6c\x65\164\145\40\x2d\55\x64\x61\164\141\x62\141\163\x65\116\x61\x6d\x65\75\155\171\55\144\x61\x74\x61\x62\141\x73\x65"); goto Afff3; Afff3: $this->addOption("\x64\x61\x74\141\142\x61\x73\x65\116\141\x6d\145", null, InputOption::VALUE_REQUIRED); goto bda2d; Cc9ad: } protected function execute(InputInterface $input, OutputInterface $output) : int { try { goto Eee76; d31cd: $databaseServerEntity = $databaseEntity->getDatabaseServer(); goto B7f86; B3c47: $helper = $this->getHelper("\161\x75\145\x73\164\151\x6f\x6e"); goto d4ab4; fcbb3: throw new \Exception(sprintf("\104\141\x74\x61\x62\141\163\x65\40\42\45\163\x22\40\x64\157\x65\163\40\156\x6f\x74\40\145\170\151\163\x74\56", $databaseName)); goto d9684; Ca62e: $databaseEntity = $this->databaseEntityManager->findOneByName($databaseName); goto Abf03; aab45: $output->writeln(sprintf("\x3c\151\156\x66\157\x3e\x44\x61\164\x61\142\x61\x73\145\x3c\57\151\156\146\x6f\76\x20\x3c\x63\157\x6d\x6d\x65\x6e\164\x3e\45\x73\x3c\57\143\157\x6d\x6d\x65\156\164\76\40\x3c\151\156\x66\x6f\x3e\150\141\163\40\x62\x65\x65\x6e\40\144\x65\x6c\145\x74\x65\144\x2e\74\57\x69\156\146\157\76", $databaseName)); goto c9df2; d9684: dc311: goto Cb1c2; b088e: $databaseManager->deleteDatabase($databaseEntity, true); goto fbd4e; Abf03: if (!(true === is_null($databaseEntity))) { goto dc311; } goto fcbb3; a3c42: $databaseName = trim($input->getOption("\x64\141\164\141\x62\141\x73\145\x4e\141\x6d\145")); goto aebd3; a5a5b: $siteEntity = $databaseEntity->getSite(); goto d31cd; e7c69: if (!(false === $answer)) { goto D4c83; } goto e7218; bd013: $this->siteEntityManager->updateEntity($siteEntity); goto aab45; c9df2: return BaseCommand::SUCCESS; goto Bc6ab; d4ab4: $question = new ConfirmationQuestion(sprintf("\x3c\151\x6e\x66\157\x3e\x43\x6f\156\146\x69\162\155\x20\x74\157\40\144\x65\x6c\x65\x74\x65\40\x74\x68\145\x20\144\141\164\141\x62\141\x73\145\x3a\x20\45\163\x3c\57\x69\156\x66\157\x3e\x20\x3c\143\x6f\x6d\x6d\x65\156\164\x3e\50\x79\x65\163\x2f\x6e\157\51\x3a\74\x2f\x63\157\155\x6d\x65\156\164\76\x20", $databaseName), false, "\x2f\x5e\50\x79\x65\x73\x29\x2f\151"); goto Ca127; Ca127: $answer = $helper->ask($input, $output, $question); goto e7c69; B7f86: $databaseManager = new DatabaseManager($databaseServerEntity); goto b088e; C8394: D4c83: goto c1938; e7218: return BaseCommand::SUCCESS; goto C8394; c1938: a93cb: goto a5a5b; Eee76: $this->validateInput($input); goto a3c42; fbd4e: $siteEntity->removeDatabase($databaseEntity); goto bd013; aebd3: $force = $input->getOption("\146\x6f\x72\143\145") === true; goto Ca62e; Cb1c2: if (!(false === $force)) { goto a93cb; } goto B3c47; Bc6ab: } catch (\Exception $e) { goto D18d3; D18d3: $errorMessage = $e->getMessage(); goto B8376; eb79c: return BaseCommand::FAILURE; goto Eedd5; B8376: $output->writeln(sprintf("\x3c\x65\x72\x72\x6f\x72\x3e\x25\x73\74\57\x65\162\x72\x6f\162\76", $errorMessage)); goto eb79c; Eedd5: } } protected function prepareConstraints(ConstraintViolationList $constraints) : void { $this->changePropertyPath("\x6e\x61\x6d\x65", "\x64\141\164\141\142\x61\x73\x65\x4e\x61\155\145", $constraints); $this->changePropertyPath("\165\163\x65\162\x4e\141\155\145", "\144\141\164\141\142\x61\163\x65\x55\163\x65\162\116\x61\x6d\145", $constraints); } }
