<?php
 namespace App\Command; use Symfony\Component\Console\Input\InputInterface; use Symfony\Component\Console\Input\InputOption; use Symfony\Component\Console\Output\OutputInterface; use Symfony\Component\Validator\Validator\ValidatorInterface; use Symfony\Component\Validator\ConstraintViolationList; use App\Command\Command as BaseCommand; use App\Entity\Manager\SiteManager as SiteEntityManager; use App\Entity\Manager\DatabaseManager as DatabaseEntityManager; use App\Entity\Manager\DatabaseUserManager as DatabaseUserEntityManager; use App\Entity\Manager\DatabaseServerManager as DatabaseServerEntityManager; use App\Entity\DatabaseUser as DatabaseUserEntity; use App\Database\Manager as DatabaseManager; use App\Service\Crypto; class DatabaseAddCommand extends BaseCommand { private SiteEntityManager $siteEntityManager; private DatabaseEntityManager $databaseEntityManager; private DatabaseUserEntityManager $databaseUserEntityManager; private DatabaseServerEntityManager $databaseServerEntityManager; private ValidatorInterface $validator; public function __construct(SiteEntityManager $siteEntityManager, DatabaseEntityManager $databaseEntityManager, DatabaseUserEntityManager $databaseUserEntityManager, DatabaseServerEntityManager $databaseServerEntityManager, ValidatorInterface $validator) { goto be9d6; ef1f5: $this->databaseUserEntityManager = $databaseUserEntityManager; goto b3c57; f0f53: parent::__construct(); goto D64cf; b3c57: $this->databaseServerEntityManager = $databaseServerEntityManager; goto Fa420; Fa420: $this->validator = $validator; goto f0f53; f19b2: $this->databaseEntityManager = $databaseEntityManager; goto ef1f5; be9d6: $this->siteEntityManager = $siteEntityManager; goto f19b2; D64cf: } protected function configure() : void { goto C81ad; Abe93: $this->addOption("\x64\x61\x74\141\x62\x61\163\x65\125\x73\145\162\x4e\141\155\145", null, InputOption::VALUE_REQUIRED); goto Ae9a1; Ae9a1: $this->addOption("\x64\x61\164\x61\x62\x61\x73\x65\125\163\145\x72\x50\x61\163\163\x77\157\x72\144", null, InputOption::VALUE_REQUIRED); goto Fd4a0; bf2bc: $this->addOption("\x64\x6f\x6d\x61\151\156\116\141\x6d\x65", null, InputOption::VALUE_REQUIRED); goto e950d; e950d: $this->addOption("\x64\x61\164\x61\x62\141\163\x65\116\141\155\145", null, InputOption::VALUE_REQUIRED); goto Abe93; C81ad: $this->setName("\144\142\x3a\x61\x64\144"); goto f793e; f793e: $this->setDescription("\143\154\160\x63\x74\x6c\40\144\142\x3a\141\x64\x64\40\x2d\x2d\x64\x6f\x6d\141\x69\x6e\x4e\141\155\145\75\167\x77\x77\56\x64\157\155\141\151\x6e\x2e\143\x6f\x6d\40\x2d\55\x64\141\164\x61\142\141\163\145\116\141\x6d\x65\x3d\x6d\x79\x2d\144\141\164\x61\x62\141\163\145\40\x2d\x2d\144\141\164\141\x62\141\163\145\125\x73\145\x72\116\141\155\x65\75\x6a\157\x68\x6e\40\55\x2d\144\x61\164\x61\x62\141\163\145\x55\163\145\x72\x50\x61\x73\163\167\x6f\162\x64\75\47\41\163\x65\143\x72\x65\164\x50\141\x73\163\x77\x6f\x72\x64\41\47"); goto bf2bc; Fd4a0: } protected function execute(InputInterface $input, OutputInterface $output) : int { try { goto eac78; Edb77: c15af: goto Dd99e; Fcbba: $constraints->addAll($databaseConstraints); goto ab2c4; Dd99e: return BaseCommand::FAILURE; goto ca2c1; E6cc7: D4860: goto Bef8b; Bebc9: $databaseUserEntity->setUserName($databaseUserName); goto Ababd; a8e1a: $databaseName = trim($input->getOption("\x64\141\x74\141\x62\x61\163\145\116\x61\155\145")); goto e731e; fe45a: if (0 == count($databaseConstraints) && 0 == count($databaseUserConstraints)) { goto D4860; } goto c4766; B9115: $databaseManager->createDatabase($databaseEntity); goto d12ed; D1d07: throw new \Exception(sprintf("\x44\157\155\x61\151\x6e\x4e\x61\155\x65\x20\x22\45\x73\x22\40\144\157\145\x73\x20\x6e\157\x74\40\x65\x78\151\163\164\56", $domainName)); goto c4efe; ed534: $siteEntity->addDatabase($databaseEntity); goto b2e6d; e731e: $databaseUserName = trim($input->getOption("\x64\x61\164\x61\x62\x61\x73\145\x55\163\145\x72\x4e\x61\155\145")); goto D6539; d12ed: $databaseManager->createUser($databaseUserEntity); goto Cd908; b2e6d: $databaseConstraints = $this->validator->validate($databaseEntity); goto f0782; Da7a3: goto e4224; goto E6cc7; ab2c4: $constraints->addAll($databaseUserConstraints); goto E8136; E5fe1: if (!(false === is_null($activeDatabaseServerEntity))) { goto c15af; } goto ddbf1; Cd908: $this->siteEntityManager->updateEntity($siteEntity); goto d542b; f0782: $databaseUserConstraints = $this->validator->validate($databaseUserEntity); goto fe45a; C84fd: if (!(true === is_null($siteEntity))) { goto Af38a; } goto D1d07; b106b: e4224: goto Edb77; A5537: $databaseUserEntity->setPermissions(DatabaseUserEntity::PERMISSIONS_READ_WRITE); goto c8c62; be3a7: $databaseUserEntity = $this->databaseUserEntityManager->createEntity(); goto Bebc9; Bef8b: $databaseManager = new DatabaseManager($activeDatabaseServerEntity); goto B9115; eac78: $this->validateInput($input); goto F077f; ce5c9: $databaseEntity->setName($databaseName); goto D94ee; d9ab6: $databaseEntity->addUser($databaseUserEntity); goto ed534; c8c62: $databaseUserEntity->setDatabase($databaseEntity); goto d9ab6; c4efe: Af38a: goto a370b; E8136: return $this->renderConstraints($constraints, $output); goto Da7a3; Cd729: return BaseCommand::SUCCESS; goto b106b; c4766: $constraints = new ConstraintViolationList(); goto Fcbba; D94ee: $databaseEntity->setSite($siteEntity); goto be3a7; eb855: $databaseEntity->setDatabaseServer($activeDatabaseServerEntity); goto ce5c9; Ababd: $databaseUserEntity->setPassword(Crypto::encrypt($databaseUserPassword)); goto A5537; D824e: $siteEntity = $this->siteEntityManager->findOneByDomainName($domainName); goto C84fd; D6539: $databaseUserPassword = trim($input->getOption("\144\141\x74\x61\142\141\163\145\x55\163\145\162\120\x61\x73\x73\x77\x6f\x72\x64")); goto D824e; ddbf1: $databaseEntity = $this->databaseEntityManager->createEntity(); goto eb855; F077f: $domainName = trim($input->getOption("\x64\157\155\141\x69\156\116\x61\x6d\145")); goto a8e1a; d542b: $output->writeln(sprintf("\74\x69\156\146\157\76\104\141\164\141\x62\141\163\145\x3c\x2f\x69\156\x66\157\x3e\x20\x3c\143\x6f\155\155\x65\156\164\x3e\x25\163\74\57\x63\157\155\x6d\x65\x6e\164\x3e\x20\74\x69\156\146\x6f\76\x68\x61\163\x20\x62\x65\145\x6e\x20\x61\x64\x64\x65\x64\56\74\x2f\151\x6e\146\157\76", $databaseName)); goto Cd729; a370b: $activeDatabaseServerEntity = $this->databaseServerEntityManager->getActiveDatabaseServer(); goto E5fe1; ca2c1: } catch (\Exception $e) { goto A0cc6; A0cc6: $errorMessage = $e->getMessage(); goto Ba52e; F12e5: return BaseCommand::FAILURE; goto b3d19; Ba52e: $output->writeln(sprintf("\x3c\145\162\x72\157\x72\76\45\163\x3c\x2f\x65\162\x72\157\x72\76", $errorMessage)); goto F12e5; b3d19: } } protected function prepareConstraints(ConstraintViolationList $constraints) : void { $this->changePropertyPath("\156\x61\155\145", "\x64\141\x74\x61\142\141\x73\145\x4e\141\x6d\x65", $constraints); $this->changePropertyPath("\165\x73\x65\162\x4e\x61\155\x65", "\144\141\164\141\x62\141\x73\x65\x55\x73\145\162\116\x61\155\145", $constraints); } }
