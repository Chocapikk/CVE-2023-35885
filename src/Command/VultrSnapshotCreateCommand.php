<?php
 namespace App\Command; use Symfony\Component\Console\Input\InputInterface; use Symfony\Component\Console\Output\OutputInterface; use Symfony\Component\Console\Input\InputOption; use App\Command\Command as BaseCommand; use App\CloudPanel\Environment as CloudPanelEnvironment; use App\Entity\Notification; use App\Vultr\Snapshot; use App\Notification\NotificationQueue; class VultrSnapshotCreateCommand extends BaseCommand { protected function configure() : void { goto C33ee; C33ee: $this->setName("\x76\165\154\164\162\72\163\x6e\x61\160\163\x68\x6f\x74\72\x63\x72\145\x61\x74\145"); goto c567b; Af0d1: $this->addOption("\146\162\145\x71\165\145\156\143\x79", null, InputOption::VALUE_REQUIRED); goto C873d; c567b: $this->setDescription("\143\154\160\x63\164\154\x20\166\x75\154\164\x72\x3a\163\156\141\160\163\x68\157\164\72\x63\x72\x65\x61\164\x65\x20\55\55\x66\162\x65\x71\x75\x65\x6e\143\x79\75\63"); goto Af0d1; C873d: } protected function execute(InputInterface $input, OutputInterface $output) : int { try { goto C1f0f; F1d3f: $snapshotCreated = $this->createSnapshot(); goto A23b7; C9a30: D4826: goto Bb311; C1f0f: $this->validateInput($input); goto Bc082; e86f3: $apiKey = $this->getConfigValue("\x76\165\x6c\x74\x72\137\x61\x70\151\137\x6b\145\x79"); goto Acdda; Bb311: return BaseCommand::SUCCESS; goto f29e7; Bb1a4: if (!(CloudPanelEnvironment::CLOUD_PROVIDER_VULTR == $cloud && true === $automaticSnapshots && false === empty($apiKey) && $snapshotsFrequency == $frequency)) { goto D4826; } goto F1d3f; c14a5: $this->cleanSnapshots(); goto fc96b; Acdda: $snapshotsFrequency = (int) $this->getConfigValue("\x76\x75\154\164\162\137\163\156\141\160\x73\x68\157\x74\163\x5f\x66\x72\x65\161\x75\145\156\x63\x79"); goto Bb1a4; A23b7: if (!(true === $snapshotCreated)) { goto b70cc; } goto c14a5; fc96b: b70cc: goto C9a30; d7bb4: $cloud = $this->getConfigValue("\x63\154\x6f\x75\x64"); goto Efcd9; Bc082: $frequency = (int) $input->getOption("\x66\x72\145\161\165\145\x6e\x63\171"); goto d7bb4; Efcd9: $automaticSnapshots = (bool) $this->getConfigValue("\166\x75\154\164\162\137\141\165\x74\157\x6d\141\x74\151\x63\x5f\163\x6e\x61\x70\163\150\x6f\x74\163"); goto e86f3; f29e7: } catch (\Exception $e) { goto dff79; effac: $output->writeln(sprintf("\x3c\x65\x72\162\x6f\162\x3e\45\x73\74\57\x65\x72\162\157\162\76", $errorMessage)); goto C9095; C9095: return BaseCommand::FAILURE; goto a9127; dff79: $errorMessage = $e->getMessage(); goto effac; a9127: } } private function createSnapshot() : bool { try { goto A36d4; Ecd81: return true; goto d7859; A36d4: $instance = $this->getInstance(); goto deb78; a49f0: $snapshotName = sprintf("\45\x73\x2d\x25\x73", $vultrInstance->getLabel(), $vultrInstance->getId()); goto b9d84; a314e: $vultrInstance = $vultrClient->getInstance(); goto a49f0; deb78: $vultrClient = $instance->getVultrClient(); goto a314e; b9d84: $vultrClient->createSnapshot($snapshotName); goto Ecd81; d7859: } catch (\Exception $e) { $errorMessage = $e->getMessage(); $this->addNotification("\103\162\x65\141\164\x69\156\x67\40\x61\40\x53\156\141\x70\x73\150\x6f\164\x20\x66\141\151\154\145\144", $errorMessage); } return false; } private function cleanSnapshots() : bool { try { goto edfe7; edfe7: $instance = $this->getInstance(); goto F3d82; F3d82: $vultrClient = $instance->getVultrClient(); goto fcedc; A2cf6: $dateTime = new \DateTime(); goto e3d1c; e3d1c: $snapshotDeleteDateTime = clone $dateTime; goto A91e3; C43f5: foreach ($snapshots as $snapshot) { goto dd233; E6605: $id = $snapshot->getId(); goto Aa8f3; cc286: if (!(Snapshot::STATUS_COMPLETE == $snapshot->getStatus() && $snapshotCreatedAt < $snapshotDeleteDateTime)) { goto c8d67; } goto E6605; f29e8: d9c01: goto eb59a; Aa8f3: $vultrClient->deleteSnapshot($id); goto f9a55; f9a55: c8d67: goto f29e8; dd233: $snapshotCreatedAt = $snapshot->getCreatedAt(); goto cc286; eb59a: } goto bf983; fcedc: $backupRetentionPeriod = (int) $this->getConfigValue("\x76\165\154\x74\x72\137\x73\x6e\x61\160\x73\150\157\164\x73\x5f\162\145\x74\145\156\164\x69\x6f\x6e\137\160\145\162\151\x6f\x64"); goto A2cf6; c3ce4: if (!count($snapshots)) { goto Bbb43; } goto C43f5; A91e3: $snapshotDeleteDateTime->modify(sprintf("\x2d\45\163\40\144\x61\x79\163", $backupRetentionPeriod)); goto C0762; C0762: $snapshotDeleteDateTime->setTimezone(new \DateTimeZone("\x55\124\x43")); goto d4c84; d4c84: $snapshots = $vultrClient->getSnapshots(); goto c3ce4; bf983: f2c94: goto b6624; F237d: return true; goto Cbf87; b6624: Bbb43: goto F237d; Cbf87: } catch (\Exception $e) { $errorMessage = $e->getMessage(); $this->addNotification("\103\x6c\145\141\156\151\156\x67\x20\123\156\x61\160\x73\x68\x6f\164\163\x20\x66\x61\x69\154\145\144", $errorMessage); } return false; } private function addNotification(string $subject, string $errorMessage) : void { goto Fd81a; Fd81a: $notification = new Notification(); goto a2c4a; A4127: NotificationQueue::addNotification($notification); goto Cce9b; fb6bb: $notification->setSeverity(Notification::SEVERITY_CRITICAL); goto A4127; a2c4a: $notification->setSubject($subject); goto F200f; F200f: $notification->setMessage($errorMessage); goto fb6bb; Cce9b: } }
