<?php
 namespace App\Command; use Symfony\Component\Console\Input\InputInterface; use Symfony\Component\Console\Input\InputOption; use Symfony\Component\Console\Output\OutputInterface; use Symfony\Component\Validator\Validator\ValidatorInterface; use App\Command\Command as BaseCommand; use App\System\CommandExecutor; use App\System\Command\DeleteFileCommand; use App\Entity\Manager\SiteManager as SiteEntityManager; use App\Entity\Site as SiteEntity; use App\Entity\Notification; use App\Notification\NotificationQueue; use App\Backup\Rclone; use App\Backup\Dropbox\Client as DropboxClient; use App\Backup\Rclone\DropboxConfigTemplate; use App\Backup\Rclone\ConfigBuilder as RcloneConfigBuilder; use App\Backup\StorageProvider; use App\Backup\TarCreator; class RemoteBackupCreateCommand extends BaseCommand { private SiteEntityManager $siteEntityManager; private CommandExecutor $commandExecutor; private ValidatorInterface $validator; private ?\DateTime $serverDateTime = null; private array $excludes = []; private ?string $storageProvider = null; public function __construct(SiteEntityManager $siteEntityManager, ValidatorInterface $validator) { goto Dd8f4; acef4: $this->commandExecutor = new CommandExecutor(); goto Fd0db; Dd8f4: $this->siteEntityManager = $siteEntityManager; goto acef4; A05e7: parent::__construct(); goto F21b8; Fd0db: $this->validator = $validator; goto A05e7; F21b8: } protected function configure() : void { goto f8296; f8296: $this->setName("\x72\x65\x6d\x6f\164\x65\x2d\142\x61\143\153\x75\160\72\x63\x72\145\x61\x74\145"); goto D847f; D847f: $this->setDescription("\x63\154\x70\143\x74\x6c\x20\162\x65\155\x6f\x74\145\55\142\x61\x63\153\165\x70\72\x63\162\x65\141\164\x65"); goto Eb999; Eb999: $this->addOption("\144\x65\x6c\x61\171", null, InputOption::VALUE_OPTIONAL, false); goto A1606; A1606: } protected function execute(InputInterface $input, OutputInterface $output) : int { try { goto F4dbf; cae04: $this->refreshDropboxAccessToken($delay); goto Ee318; b87a8: $this->cleanBackups(); goto B77f4; Dde1b: if (!count($siteEntities)) { goto Bb58d; } goto d10cd; ddf1d: $isEnabled = (bool) $this->getConfigValue("\x72\145\x6d\157\164\145\x5f\x62\141\143\x6b\x75\160\137\145\156\x61\142\x6c\145\144"); goto e64ec; B77f4: C6445: goto ae438; C2ca7: Aad86: goto A20d0; d10cd: if (!(StorageProvider::DROPBOX == $this->storageProvider)) { goto F949a; } goto be56a; Ee318: F949a: goto e5cd9; afc9a: if (!(true === $isEnabled && false === empty($this->storageProvider))) { goto C6445; } goto fc32d; A20d0: Bb58d: goto b87a8; e64ec: $this->storageProvider = $this->getConfigValue("\x72\x65\x6d\157\x74\145\137\142\141\143\x6b\x75\x70\137\163\x74\x6f\162\x61\147\145\137\x70\162\157\166\x69\x64\x65\x72"); goto afc9a; fc32d: $siteEntities = $this->siteEntityManager->findAll(); goto Dde1b; F4dbf: $this->validateInput($input); goto ddf1d; be56a: $delay = (bool) $input->getOption("\x64\145\154\141\171"); goto cae04; ae438: return BaseCommand::SUCCESS; goto D4f2a; e5cd9: foreach ($siteEntities as $siteEntity) { $this->backupSite($siteEntity); b9c8f: } goto C2ca7; D4f2a: } catch (\Exception $e) { goto Cdbc1; Ec860: $output->writeln(sprintf("\74\145\x72\162\157\162\x3e\45\x73\74\x2f\x65\x72\162\157\162\76", $errorMessage)); goto De6f0; Cdbc1: $errorMessage = $e->getMessage(); goto Ec860; De6f0: return BaseCommand::FAILURE; goto fc54d; fc54d: } } private function backupSite(SiteEntity $siteEntity) { goto B7cee; C1bd7: try { try { goto A1d41; ecb3d: $excludes = array_merge($excludes, $siteExcludes); goto d2923; be66a: $siteExcludes = $this->getSiteExcludes($siteEntity); goto c4f3c; d2923: B661c: goto f7437; c4f3c: if (!(false === empty($siteExcludes))) { goto B661c; } goto ecb3d; dd7bb: $rclone = new Rclone(); goto D60f2; D60f2: switch ($this->storageProvider) { case StorageProvider::GOOGLE_DRIVE: goto c9410; c30ed: $rclone->addFlag("\55\x2d\144\x72\151\x76\145\x2d\x69\x6d\x70\x65\162\x73\x6f\x6e\x61\x74\x65", $email); goto e7b04; c9410: $email = $this->getConfigValue("\162\x65\155\x6f\164\x65\x5f\142\x61\x63\153\165\x70\x5f\x65\x6d\141\x69\x6c"); goto c30ed; e7b04: goto Adfe8; goto Cc032; Cc032: } goto e9bb7; Ff5df: $tarCreator = new TarCreator(); goto D856b; f4fa3: Adfe8: goto E406b; ad6fa: $destination = $this->getDestination($siteEntity); goto dd7bb; bf248: $domainName = $siteEntity->getDomainName(); goto A7a71; A7a71: $homeDirectory = sprintf("\x2f\x68\x6f\155\x65\x2f\x25\x73\x2f", $siteUser); goto D0485; f7437: $siteUser = $siteEntity->getUser(); goto bf248; C9147: $sources = [$homeDirectory, $vhostFile]; goto Ff5df; A1d41: $excludes = ["\56\x73\163\150", "\164\x6d\x70", "\x6c\x6f\x67\163"]; goto be66a; D0485: $vhostFile = sprintf("\57\x65\x74\x63\x2f\x6e\147\151\156\170\x2f\163\151\164\x65\x73\55\145\156\141\x62\154\145\144\57\45\x73\56\x63\157\x6e\x66", $domainName); goto d2290; E406b: $rclone->copy($destinationFile, $destination); goto f7f2d; D856b: $tarCreator->create($sources, $destinationFile, $excludes); goto ad6fa; d2290: $destinationFile = sprintf("\x2f\x68\x6f\155\145\x2f\45\x73\x2f\x74\155\160\57\142\x61\143\153\165\160\x2e\164\x61\x72", $siteUser); goto C9147; e9bb7: E1f90: goto f4fa3; f7f2d: } catch (\Exception $e) { throw $e; } finally { $deleteFileCommand = new DeleteFileCommand(); $deleteFileCommand->setFile($destinationFile); $this->commandExecutor->execute($deleteFileCommand, 120); } } catch (\Exception $e) { goto effea; effea: $errorMessage = $e->getMessage(); goto C702b; Ccea0: $this->addNotification($subject, $errorMessage); goto D3dbf; C702b: $subject = sprintf("\122\x65\x6d\x6f\x74\145\x20\x42\141\x63\x6b\x75\x70\x20\146\x61\x69\154\x65\x64\72\40\x25\x73", $domainName); goto Ccea0; D3dbf: } goto Bd209; B7cee: $isSiteExcluded = $this->isSiteExcluded($siteEntity); goto E4b83; E4b83: if (!(false === $isSiteExcluded)) { goto Cdc1c; } goto C1bd7; Bd209: Cdc1c: goto Ca913; Ca913: } private function isSiteExcluded(SiteEntity $siteEntity) : bool { goto F3815; D4f5d: foreach ($excludes as $exclude) { goto ba624; F1e3c: Af570: goto B3cfd; ba624: $exclude = rtrim($exclude, "\57"); goto ca6bb; C1252: $isSiteExcluded = true; goto Ca851; Ca851: goto f459f; goto F1e3c; B3cfd: Fd2e1: goto Db141; ca6bb: if (!($homeDirectory == $exclude)) { goto Af570; } goto C1252; Db141: } goto Afd5a; A3ab0: if (!(false === empty($excludes))) { goto C4416; } goto B9bca; c6383: $homeDirectory = sprintf("\x2f\150\x6f\155\145\x2f\x25\163", $siteUser); goto D4f5d; Afd5a: f459f: goto F8ab4; F3815: $isSiteExcluded = false; goto A4b46; F8ab4: C4416: goto cd22e; B9bca: $siteUser = $siteEntity->getUser(); goto c6383; cd22e: return $isSiteExcluded; goto fceb0; A4b46: $excludes = $this->getExcludes(); goto A3ab0; fceb0: } private function getExcludes() : array { goto Fac5c; Fac5c: if (!(true === empty($this->excludes))) { goto e7f1d; } goto a0c71; D0769: e7f1d: goto a39e9; dfec2: $this->excludes = json_decode($excludes); goto C09f7; a39e9: return $this->excludes; goto cd78b; C09f7: afcf7: goto D0769; E8fb6: if (!(false === empty($excludes))) { goto afcf7; } goto dfec2; a0c71: $excludes = $this->getConfigValue("\162\145\x6d\157\164\145\137\142\141\x63\153\x75\160\x5f\145\170\x63\154\165\144\x65\163"); goto E8fb6; cd78b: } private function getSiteExcludes(SiteEntity $siteEntity) : array { goto db4fd; Fb220: Aa003: goto A16e8; a0849: $siteUser = $siteEntity->getUser(); goto Bf023; e6e9f: foreach ($excludes as $exclude) { goto e551a; f4cc8: Cbb99: goto d0bd1; F9e0d: $siteExcludes[] = rtrim(ltrim($exclude, "\x2f"), "\x2f"); goto e3515; e551a: if (!($homeDirectory == substr($exclude, 0, strlen($homeDirectory)))) { goto bc7d2; } goto A9d19; A9d19: $exclude = substr($exclude, strlen($homeDirectory) - 1); goto Cbc61; e3515: C2377: goto Dd217; Cbc61: if (!(false === empty($exclude))) { goto C2377; } goto F9e0d; Dd217: bc7d2: goto f4cc8; d0bd1: } goto C0151; Bf023: $homeDirectory = sprintf("\x2f\x68\x6f\155\145\x2f\45\163\57", $siteUser); goto e6e9f; A16e8: return $siteExcludes; goto D8897; B45f4: $excludes = $this->getExcludes(); goto a45a1; db4fd: $siteExcludes = []; goto B45f4; C0151: Ea430: goto Fb220; a45a1: if (!(false === empty($excludes))) { goto Aa003; } goto a0849; D8897: } private function getServerDateTime() : \DateTime { goto E6f59; a43ed: D6b30: goto F30db; Bf64d: $timezone = $this->getConfigValue("\164\151\x6d\x65\x7a\x6f\156\x65"); goto D81d5; F30db: Eaa6b: goto ea852; ea852: return $this->serverDateTime; goto f3484; Ec1bb: $this->serverDateTime->setTimezone(new \DateTimeZone($timezone)); goto a43ed; f5794: $this->serverDateTime->setTimezone(new \DateTimeZone("\x55\124\x43")); goto B2acb; D81d5: $this->serverDateTime = new \DateTime("\156\157\x77"); goto f5794; E6f59: if (!(true === is_null($this->serverDateTime))) { goto Eaa6b; } goto Bf64d; B2acb: if (!(false === empty($timezone))) { goto D6b30; } goto Ec1bb; f3484: } private function getDestination(SiteEntity $siteEntity) : string { goto ee4de; F84a2: $siteUser = $siteEntity->getUser(); goto E44bb; ffd10: e1cc2: goto Fd015; Cceb7: $serverDateTime = $this->getServerDateTime(); goto b34b4; Ffd0c: if (!(StorageProvider::DROPBOX == $this->storageProvider)) { goto e1cc2; } goto F327f; F327f: $destination = ltrim($destination, "\57"); goto ffd10; Fd015: return $destination; goto C0e38; a79f8: switch ($this->storageProvider) { case StorageProvider::AMAZON_S3: case StorageProvider::WASABI: $destination = $this->getConfigValue("\162\x65\x6d\157\x74\145\x5f\142\x61\143\153\x75\x70\137\142\x75\143\153\145\164"); goto C2ad3; case StorageProvider::DIGITAL_OCEAN_SPACES: $destination = $this->getConfigValue("\x72\x65\155\x6f\164\x65\137\142\141\143\x6b\165\x70\x5f\x73\160\x61\143\145"); goto C2ad3; } goto F8759; b34b4: $destination = sprintf("\45\x73\x2f\45\163\57\45\163\57\x25\x73\57\150\157\x6d\145\x2f\x25\x73\57", $destination, rtrim(ltrim($storageDirectory, "\57"), "\x2f"), $serverDateTime->format("\x59\55\155\55\144"), $serverDateTime->format("\110\x3a\151"), $siteUser); goto Ffd0c; E5d19: C2ad3: goto F84a2; E44bb: $storageDirectory = $this->getConfigValue("\162\x65\155\157\164\x65\x5f\142\x61\143\153\165\160\x5f\163\164\157\162\141\147\x65\x5f\144\151\x72\x65\x63\164\x6f\x72\x79"); goto Cceb7; F8759: A5b8c: goto E5d19; ee4de: $destination = ''; goto a79f8; C0e38: } private function cleanBackups() : void { goto Faffe; B8b7f: $storageDirectory = $this->getConfigValue("\x72\x65\155\x6f\x74\x65\x5f\142\141\x63\153\x75\160\x5f\x73\x74\157\162\141\x67\145\137\144\x69\162\145\x63\164\x6f\x72\171"); goto ed505; Faffe: $retentionPeriod = (int) $this->getConfigValue("\x72\145\x6d\157\x74\x65\137\x62\141\143\x6b\x75\160\x5f\162\x65\164\x65\156\164\151\157\156\137\160\145\x72\151\157\x64"); goto B8b7f; D065b: b8087: goto C0cc1; ed505: if (!($retentionPeriod && false === empty($storageDirectory))) { goto b8087; } goto B44d9; B44d9: try { goto B650a; Fd8b5: $rclone = new Rclone(); goto Aafaa; E2121: $deleteDateTime = clone $dateTime; goto Fe4e0; c58d8: $remotePath = ''; goto Fd8b5; d44e2: Ac574: goto c83b4; B650a: $dateTime = new \DateTime(); goto E2121; c83b4: $directories = (array) $rclone->lsJson($remotePath, true); goto Dff74; d8f25: Ee113: goto Ebeff; C0054: F2f94: goto Dc5e2; f2eff: foreach ($directories as $directory) { goto f8d62; a6387: if (!(false === is_null($directoryName))) { goto dec8e; } goto f30ce; C27a5: if (!(StorageProvider::DROPBOX == $this->storageProvider)) { goto f5709; } goto E7de9; C69f4: $rclone->purge($purgeRemotePath); goto a45eb; D3930: if (!(true === isset($directoryDate) && $directoryDate <= $deleteDateTime)) { goto c6ab2; } goto Bd5d4; a45eb: c6ab2: goto b4852; c75fb: if (!(StorageProvider::SFTP == $this->storageProvider)) { goto d72ac; } goto aa8d3; cf535: if (!(true === $isValidDate)) { goto B6d1e; } goto D3930; B7ada: d72ac: goto C69f4; Af208: dec8e: goto aff34; f8d62: $directoryName = $directory["\x4e\141\155\x65"] ?? null; goto a6387; b4852: B6d1e: goto Af208; E7de9: $purgeRemotePath = ltrim($purgeRemotePath, "\x2f"); goto d74ff; f30ce: try { $isValidDate = true; $directoryDate = new \DateTime($directoryName); } catch (\Exception $e) { $isValidDate = false; } goto cf535; aff34: c5606: goto E393b; Bd5d4: $purgeRemotePath = sprintf("\x25\163\57\x25\163\57", rtrim(ltrim($remotePath, "\57"), "\57"), $directoryName); goto C27a5; d74ff: f5709: goto c75fb; aa8d3: $purgeRemotePath = sprintf("\x2f\x25\x73", ltrim($purgeRemotePath, "\x2f")); goto B7ada; E393b: } goto C0054; F2971: $deleteDateTime->setTime(0, 0, 0, 0); goto c58d8; Fe4e0: $deleteDateTime->modify(sprintf("\x2d\45\x73\40\x64\x61\171\x73", $retentionPeriod)); goto C0818; Dff74: if (!(false === empty($directories))) { goto Feaec; } goto f2eff; Ebeff: c90ae: goto F37c5; F37c5: $remotePath = sprintf("\x25\x73\57\45\x73\57", $remotePath, rtrim(ltrim($storageDirectory, "\x2f"), "\57")); goto D248b; C0818: $deleteDateTime->setTimezone(new \DateTimeZone("\x55\x54\x43")); goto F2971; Aafaa: switch ($this->storageProvider) { case StorageProvider::AMAZON_S3: case StorageProvider::WASABI: $remotePath = $this->getConfigValue("\162\145\x6d\x6f\164\x65\137\x62\x61\143\153\x75\160\x5f\142\165\143\153\x65\164"); goto c90ae; case StorageProvider::DIGITAL_OCEAN_SPACES: $remotePath = $this->getConfigValue("\162\x65\155\x6f\x74\x65\137\142\x61\x63\153\165\160\x5f\x73\160\141\143\x65"); goto c90ae; case StorageProvider::GOOGLE_DRIVE: goto E849c; E849c: $email = $this->getConfigValue("\x72\x65\x6d\157\164\145\x5f\142\141\143\153\x75\x70\137\145\x6d\x61\x69\154"); goto Cdc39; e16ca: goto c90ae; goto c6fd0; Cdc39: $rclone->addFlag("\55\x2d\144\162\151\166\x65\x2d\x69\x6d\x70\x65\x72\x73\157\x6e\141\164\145", $email); goto e16ca; c6fd0: } goto d8f25; D248b: if (!(StorageProvider::DROPBOX == $this->storageProvider)) { goto Ac574; } goto bf1d8; bf1d8: $remotePath = ltrim($remotePath, "\57"); goto d44e2; Dc5e2: Feaec: goto F56e4; F56e4: } catch (\Exception $e) { goto d49be; ba7bb: $subject = sprintf("\x52\x65\155\x6f\x74\x65\40\102\141\x63\x6b\x75\160\x20\143\154\145\141\x6e\165\x70\x20\146\x61\151\x6c\x65\x64\56"); goto Db57a; d49be: $errorMessage = $e->getMessage(); goto ba7bb; Db57a: $this->addNotification($subject, $errorMessage); goto Ec3d9; Ec3d9: } goto D065b; C0cc1: } private function refreshDropboxAccessToken(bool $delay) { try { goto aebc5; Eb4a6: $dropboxClient = new DropboxClient(); goto abd09; Fc8f4: $rcloneConfigTemplate->setToken($token); goto E2224; e81f1: $rcloneConfigTemplate = new DropboxConfigTemplate(); goto Fc8f4; Af820: $rcloneConfig = $rcloneConfigBuilder->build(); goto a336b; ad12f: d9482: goto dfcd3; c63ff: E114b: goto e81f1; a336b: $rclone = new Rclone(); goto A1ec7; fd33d: Dca75: goto c7f45; b018e: goto d9482; goto c63ff; C71a4: sleep(rand(5, 60)); goto fd33d; Fe4f4: if (false === empty($token)) { goto E114b; } goto Df411; abd09: $token = $dropboxClient->getAccessToken($refreshToken); goto Fe4f4; aebc5: if (!(true === $delay)) { goto Dca75; } goto C71a4; E2224: $rcloneConfigBuilder = new RcloneConfigBuilder($rcloneConfigTemplate); goto Af820; Df411: throw new \Exception("\101\143\143\145\x73\x73\40\124\157\153\145\156\40\143\141\156\x6e\x6f\x74\x20\x62\x65\x20\x65\x6d\160\x74\x79\x2e"); goto b018e; A1ec7: $rclone->writeConfig($rcloneConfig); goto ad12f; c7f45: $refreshToken = $this->getConfigValue("\162\x65\155\157\164\145\137\142\x61\x63\153\165\160\x5f\x72\x65\x66\162\x65\x73\x68\137\164\157\153\145\x6e"); goto Eb4a6; dfcd3: } catch (\Exception $e) { $errorMessage = $e->getMessage(); $this->addNotification("\x52\145\x66\x72\145\163\x68\x69\156\x67\40\x44\162\x6f\160\x62\x6f\170\40\101\143\x63\x65\163\163\x20\x54\157\153\145\156\40\x46\x61\x69\154\x65\144", $errorMessage); } } private function addNotification(string $subject, string $errorMessage) : void { goto A82e2; de428: NotificationQueue::addNotification($notification); goto cf914; A82e2: $notification = new Notification(); goto a908d; c028e: $notification->setSeverity(Notification::SEVERITY_CRITICAL); goto de428; A5d8a: $notification->setMessage($errorMessage); goto c028e; a908d: $notification->setSubject($subject); goto A5d8a; cf914: } }
