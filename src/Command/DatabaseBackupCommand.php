<?php
 namespace App\Command; use Symfony\Component\Console\Input\InputInterface; use Symfony\Component\Console\Input\InputOption; use Symfony\Component\Console\Output\OutputInterface; use Symfony\Component\Validator\Validator\ValidatorInterface; use App\Command\Command as BaseCommand; use App\Entity\Database as DatabaseEntity; use App\System\CommandExecutor; use App\Entity\Manager\SiteManager as SiteEntityManager; use App\Entity\Manager\DatabaseManager as DatabaseEntityManager; use App\Entity\Manager\DatabaseServerManager as DatabaseServerEntityManager; use App\System\Command\DeleteOldFilesRecursiveCommand; use App\System\Command\FindChmodCommand; use App\System\Command\ChownCommand; use App\Database\Exporter as DatabaseExporter; class DatabaseBackupCommand extends BaseCommand { private const RETENTION_PERIOD = 7; private SiteEntityManager $siteEntityManager; private DatabaseEntityManager $databaseEntityManager; private DatabaseServerEntityManager $databaseServerEntityManager; private CommandExecutor $commandExecutor; private ValidatorInterface $validator; private int $retentionPeriod = 0; public function __construct(SiteEntityManager $siteEntityManager, DatabaseEntityManager $databaseEntityManager, DatabaseServerEntityManager $databaseServerEntityManager, ValidatorInterface $validator) { goto Ff19d; Dba18: $this->commandExecutor = new CommandExecutor(); goto E360a; E360a: $this->validator = $validator; goto e057b; Ff19d: $this->siteEntityManager = $siteEntityManager; goto Dd332; e057b: parent::__construct(); goto a4f7a; b09ee: $this->databaseServerEntityManager = $databaseServerEntityManager; goto Dba18; Dd332: $this->databaseEntityManager = $databaseEntityManager; goto b09ee; a4f7a: } protected function configure() : void { goto c16b9; c16b9: $this->setName("\144\x62\x3a\142\x61\143\153\165\160"); goto f541f; aa7cc: $this->addOption("\x72\x65\x74\145\156\164\151\x6f\x6e\120\x65\x72\x69\157\144", null, InputOption::VALUE_OPTIONAL, '', self::RETENTION_PERIOD); goto b9b52; f541f: $this->setDescription("\143\154\160\143\164\154\x20\144\142\x3a\x62\x61\x63\153\x75\160\x20\x2d\x2d\x69\x67\156\157\x72\x65\104\141\164\x61\142\x61\x73\145\x73\75\x27\144\x62\61\54\x64\x62\62\47\x20\x2d\x2d\x72\x65\164\145\156\164\x69\x6f\156\120\x65\x72\151\157\144\75\x37"); goto E6bee; E6bee: $this->addOption("\151\x67\x6e\157\x72\145\104\x61\x74\x61\142\x61\163\x65\x73", null, InputOption::VALUE_OPTIONAL); goto aa7cc; b9b52: } protected function execute(InputInterface $input, OutputInterface $output) : int { try { goto E99eb; E99eb: $this->validateInput($input); goto cc7cc; cc7cc: $ignoredDatabases = explode("\54", $input->getOption("\x69\x67\156\157\162\x65\104\141\x74\141\142\x61\163\x65\163")); goto bc1c7; de6ea: Bce2c: goto A89b1; d5d88: return BaseCommand::SUCCESS; goto b0954; A89b1: Bc730: goto d5d88; C9342: foreach ($siteEntities as $siteEntity) { goto De5a9; Ce106: d3cca: goto c65dc; De5a9: $databaseEntities = $siteEntity->getDatabases(); goto Aa6f0; Ebb0f: f7f1d: goto Ce106; Aa6f0: if (!count($databaseEntities)) { goto f7f1d; } goto E5283; f2b55: De547: goto Ebb0f; E5283: foreach ($databaseEntities as $databaseEntity) { goto c87aa; F2f7e: a97f3: goto F9c84; F9c84: B9573: goto Dce30; D5659: $this->createDatabaseDump($databaseEntity); goto F2f7e; c87aa: $databaseName = $databaseEntity->getName(); goto Fc41c; Fc41c: if (!(false === in_array($databaseName, $ignoredDatabases))) { goto a97f3; } goto D5659; Dce30: } goto f2b55; c65dc: } goto de6ea; bc1c7: $this->retentionPeriod = (int) $input->getOption("\x72\145\164\145\x6e\x74\151\x6f\156\x50\x65\x72\151\x6f\144"); goto a8bca; a8bca: $siteEntities = $this->siteEntityManager->findAll(); goto c28d2; c28d2: if (!count($siteEntities)) { goto Bc730; } goto C9342; b0954: } catch (\Exception $e) { goto Ce250; Dab3d: return BaseCommand::FAILURE; goto aee5f; Ce250: $errorMessage = $e->getMessage(); goto d7d90; d7d90: $output->writeln(sprintf("\x3c\145\162\162\157\162\x3e\x25\163\74\x2f\145\162\x72\157\x72\76", $errorMessage)); goto Dab3d; aee5f: } } private function createDatabaseDump(DatabaseEntity $databaseEntity) : void { try { goto e9ee4; A286e: $databaseExporter->createOutputDirectory(); goto Cac48; B24ee: $databaseExporter = new DatabaseExporter($databaseEntity); goto Efcfa; cc4e4: $this->cleanUpBackups($databaseEntity); goto Fbae2; B5efe: $backupDirectory = sprintf("\57\150\x6f\x6d\x65\x2f\45\x73\57\x62\x61\143\153\x75\x70\163\x2f\144\141\x74\141\142\141\163\x65\x73\x2f", $siteUser); goto e567c; e567c: $outputDirectory = sprintf("\x25\x73\x2f\x25\x73\57\45\x73\57", rtrim($backupDirectory, "\x2f"), $databaseName, $dateTime->format("\131\55\155\55\144")); goto eb604; F6f39: $this->resetPermissions($databaseEntity); goto cc4e4; eb604: $outputFile = sprintf("\x25\x73\57\45\163", rtrim($outputDirectory, "\x2f"), sprintf("\x25\x73\x5f\45\163\x2e\x73\x71\x6c\x2e\x67\x7a", $databaseName, $dateTime->getTimestamp())); goto B24ee; e9ee4: $dateTime = new \DateTime("\156\x6f\167", new \DateTimeZone("\x55\124\103")); goto c22fd; cd223: $databaseName = $databaseEntity->getName(); goto B5efe; Cac48: $databaseExporter->export(); goto F6f39; d094e: $siteUser = $siteEntity->getUser(); goto cd223; c22fd: $siteEntity = $databaseEntity->getSite(); goto d094e; Efcfa: $databaseExporter->setFile($outputFile); goto A286e; Fbae2: } catch (\Exception $e) { $logger = $this->getLogger(); $logger->exception($e); } } private function resetPermissions(DatabaseEntity $databaseEntity) { goto D874f; a2a2a: $backupDirectoryChownCommand->setUser($siteUser); goto Ceea9; Fe3fc: $backupDirectoryChmodCommand->setDirectoryChmod(750); goto c733b; F343a: $backupDirectoryChownCommand->setFile($backupDirectory); goto d463e; db94a: $backupDirectory = sprintf("\57\x68\157\x6d\145\57\x25\x73\57\142\141\143\153\x75\x70\163\57\x64\141\164\x61\142\141\163\x65\x73\57", $siteUser); goto E057d; D874f: $siteEntity = $databaseEntity->getSite(); goto A452e; E5570: $this->commandExecutor->execute($backupDirectoryChmodCommand); goto Ad034; Cf0a7: $backupDirectoryChmodCommand->setFile($backupDirectory); goto Fe3fc; c733b: $backupDirectoryChmodCommand->setFileChmod(760); goto D89a1; D89a1: $this->commandExecutor->execute($backupDirectoryChownCommand); goto E5570; E057d: $backupDirectoryChownCommand = new ChownCommand(); goto F343a; d463e: $backupDirectoryChownCommand->setRecursive(true); goto a2a2a; A452e: $siteUser = $siteEntity->getUser(); goto db94a; D61d0: $backupDirectoryChmodCommand = new FindChmodCommand(); goto Cf0a7; Ceea9: $backupDirectoryChownCommand->setGroup($siteUser); goto D61d0; Ad034: } private function cleanUpBackups(DatabaseEntity $databaseEntity) { goto C5e0e; C5e0e: $siteEntity = $databaseEntity->getSite(); goto Ad322; Ad322: $siteUser = $siteEntity->getUser(); goto db5cc; db5cc: $databaseBackupDirectory = sprintf("\x2f\150\x6f\x6d\x65\x2f\x25\163\57\x62\x61\x63\x6b\x75\x70\x73\57\x64\141\x74\141\142\x61\x73\x65\x73\x2f", $siteUser); goto Ff342; C47f8: $this->commandExecutor->execute($deleteOldBackupsCommand, 360); goto B44c5; Ff342: $deleteOldBackupsCommand = new DeleteOldFilesRecursiveCommand(); goto b8ff0; caee4: $deleteOldBackupsCommand->setRetentionPeriod($this->retentionPeriod); goto C47f8; b8ff0: $deleteOldBackupsCommand->setDirectory($databaseBackupDirectory); goto caee4; B44c5: } }
