<?php
 namespace App\Command; use Symfony\Component\Console\Input\InputInterface; use Symfony\Component\Console\Output\OutputInterface; use Symfony\Component\Console\Command\Command; use App\Command\SiteCommand as SiteCommand; use App\Site\Ssl\PrivateKey; use App\Site\Ssl\LetsEncryptClient; use App\Site\Ssl\LetsEncrypt\CertificateOrder; class TestCommand extends SiteCommand { protected function configure() : void { $this->setName("\164\x65\x73\164\72\x74\145\163\x74"); $this->setDescription("\124\x65\x73\164\40\143\x6f\x6d\155\x61\156\144"); } protected function execute(InputInterface $input, OutputInterface $output) : int { try { goto dd380; Dbf3b: $muha = 1; goto f40d6; E3081: $muha = 1; goto Dbf3b; f40d6: return BaseCommand::SUCCESS; goto C8a69; dd380: $logger = $this->getLogger(); goto E3081; C8a69: } catch (\Exception $e) { goto Ef147; Ef147: $logger->exception($e); goto be6c2; E8d1f: $output->writeln(sprintf("\x3c\145\x72\162\157\x72\x3e\101\x6e\40\145\162\x72\x6f\x72\40\150\141\163\x20\x6f\143\x63\165\162\162\145\144\72\40\x22\x25\x73\x22\74\x2f\x65\x72\x72\157\x72\x3e", $errorMessage)); goto beb51; beb51: return Command::FAILURE; goto C79f9; be6c2: $errorMessage = $e->getMessage(); goto E8d1f; C79f9: } } }
