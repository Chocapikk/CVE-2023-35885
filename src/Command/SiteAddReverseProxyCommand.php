<?php
 namespace App\Command; use Symfony\Component\Console\Input\InputOption; use Symfony\Component\Console\Input\InputInterface; use Symfony\Component\Console\Output\OutputInterface; use Symfony\Component\Validator\ConstraintViolationList; use App\Command\SiteCommand as SiteCommand; use App\Entity\Site as SiteEntity; use App\Entity\Certificate as CertificateEntity; use App\Site\ReverseProxySite; use App\Site\Ssl\DistinguishedName; use App\Site\Ssl\Generator\RsaKeyGenerator; use App\Site\Ssl\Generator\CsrGenerator; use App\Site\Ssl\Util\Openssl; use App\Site\Nginx\Vhost\ReverseProxyTemplate as ReverseProxyVhostTemplate; use App\Site\Creator\ReverseProxySite as ReverseProxySiteCreator; use App\Site\Nginx\Vhost\Processor\ServerName as ServerNameProcessor; use App\Site\Nginx\Vhost\Processor\RedirectServerName as RedirectServerNameProcessor; use App\Site\Nginx\Vhost\Processor\RedirectDomain as RedirectDomainProcessor; class SiteAddReverseProxyCommand extends SiteCommand { private const VHOST_TEMPLATE_NAME = "\x52\x65\166\x65\x72\163\145\120\162\x6f\x78\171"; protected function configure() : void { goto Ff96c; cf969: $this->addOption("\163\151\x74\145\125\163\145\x72\120\x61\x73\163\x77\157\x72\x64", null, InputOption::VALUE_REQUIRED); goto f6146; bdeb9: $this->setDescription("\143\154\160\x63\x74\x6c\40\x73\151\164\145\72\141\144\144\72\x72\145\166\145\162\x73\x65\55\x70\162\157\x78\171\40\x2d\x2d\x64\157\x6d\x61\151\x6e\116\x61\155\x65\75\167\x77\x77\56\x64\x6f\x6d\x61\151\156\56\143\157\155\x20\55\x2d\162\145\x76\145\x72\x73\x65\x50\162\157\170\x79\125\x72\154\75\x27\150\x74\164\x70\72\57\x2f\x31\62\x37\x2e\x30\56\60\56\x31\72\x38\x30\60\x30\x27\x20\55\55\163\x69\x74\x65\x55\x73\145\162\x3d\152\x6f\x68\x6e\40\55\55\163\x69\164\x65\125\x73\145\162\120\x61\163\163\167\157\x72\144\75\x27\x21\x73\x65\x63\x72\145\x74\x50\x61\x73\163\x77\x6f\162\144\41\47"); goto Dcc47; Ff96c: $this->setName("\163\151\164\x65\x3a\x61\x64\x64\x3a\162\145\166\145\x72\163\x65\x2d\160\x72\157\x78\171"); goto bdeb9; e1606: $this->addOption("\162\x65\166\145\x72\163\145\x50\162\157\170\x79\x55\x72\154", null, InputOption::VALUE_REQUIRED); goto C8225; Dcc47: $this->setComment("\101\x64\144\x69\x6e\x67\x20\141\x20\122\x65\x76\145\162\163\145\40\120\x72\x6f\170\171"); goto ad73c; C8225: $this->addOption("\x73\x69\164\x65\125\163\145\162", null, InputOption::VALUE_REQUIRED); goto cf969; ad73c: $this->addOption("\144\157\x6d\141\151\156\116\x61\155\145", null, InputOption::VALUE_REQUIRED); goto e1606; f6146: } protected function execute(InputInterface $input, OutputInterface $output) : int { try { goto C1ce5; F71d5: $vhostTemplate->build(); goto aff24; ede97: $reverseProxySite->setRegistrableDomain($registrableDomain); goto ff10a; A063f: $certificateEntity->setCertificate($selfSignedCertificate); goto cafc9; C3b21: $reverseProxySite = new ReverseProxySite(); goto E9876; bc728: c0d77: goto dd9a0; ef907: $siteEntity->setVhostTemplate($vhostTemplate); goto fec92; E9876: $reverseProxySite->setUser($siteEntity->getUser()); goto bee08; A8ac5: $certificateEntity->setDefaultCertificate(true); goto c8edb; B51aa: if (0 == count($siteConstraints)) { goto Ea09a; } goto da6e6; Df9b1: $subjectAlternativeNames = []; goto d9473; b38ca: $certificateEntity->setPrivateKey($privateKey->getPEM()); goto A063f; C1ce5: $this->validateInput($input); goto Dde3f; Ed548: goto A621a; goto D28cc; B34d8: $selfSignedCertificate = Openssl::createSelfSignedCertificate($privateKey, $csr); goto A8ac5; b3135: be6d3: goto F70a5; D940d: $vhostTemplate = sprintf("\x25\x73\x25\x73", $redirectionVhostTemplate, $vhostTemplate); goto c5337; be562: $reverseProxySite->setRootDirectory($siteEntity->getRootDirectory()); goto D0f9d; b8e9b: $siteEntity->setUser($siteUser); goto A93aa; f5a35: $vhostTemplateEntity = $this->vhostTemplateEntityManager->findOneByName($vhostTemplate); goto Adbe5; D28cc: Ea09a: goto Aa994; Faf5f: $reversProxySiteCreator->createRootDirectory(); goto Fae2c; E020a: $certificateEntity->setSite($siteEntity); goto Eb4ec; aff24: $siteEntity->setVhostTemplate($vhostTemplate->getContent()); goto F4bb4; fd212: $output->writeln(sprintf("\x3c\151\x6e\x66\x6f\x3e\123\x69\164\x65\74\x2f\x69\156\146\x6f\76\40\x3c\x63\x6f\x6d\x6d\x65\x6e\x74\x3e\45\163\74\57\143\157\155\155\x65\x6e\x74\76\40\x3c\151\156\146\x6f\76\x68\141\x73\x20\142\145\145\x6e\40\x61\x64\144\x65\x64\x2e\x3c\57\x69\156\146\x6f\76", $domainName)); goto Ae2a0; B12c9: $csr = $csrGenerator->generate(); goto B34d8; Fa5c8: $registrableDomain = $resolvedDomainName->registrableDomain()->toString(); goto db640; F4959: $siteUserPassword = trim($input->getOption("\163\151\164\x65\x55\x73\x65\162\120\x61\x73\163\167\157\x72\x64")); goto C4711; d9473: if (!(true === is_null($subdomain))) { goto c0d77; } goto B34dc; a88e3: $reversProxySiteCreator->createPrivateKeyAndCertificate(); goto B2448; a4468: $reverseProxyUrl = trim($input->getOption("\162\x65\x76\x65\x72\x73\x65\x50\x72\x6f\x78\171\125\x72\x6c")); goto Aa6c7; D0f9d: $reverseProxySite->setCertificate($certificateEntity); goto A2b24; f1fd5: $vhostTemplate->addProcessor(new RedirectDomainProcessor()); goto F71d5; Ff0f9: A621a: goto d74b3; dd9a0: if (!(false === is_null($subdomain) && "\x77\167\167" == $subdomain)) { goto a99eb; } goto d3b8e; F70a5: $vhostTemplate = $vhostTemplateEntity->getTemplate(); goto Bc6a2; Da8e8: if (!(true === is_null($subdomain) || "\167\167\167" == $subdomain)) { goto f4c2e; } goto C3c1d; ff10a: $reverseProxySite->setSubdomain($subdomain); goto be562; A288f: $vhostTemplate->setContent($siteEntity->getVhostTemplate()); goto ea680; fec92: $siteConstraints = $this->validator->validate($siteEntity); goto B51aa; B4e44: $vhostTemplate = new ReverseProxyVhostTemplate($reverseProxySite); goto A288f; ea680: $vhostTemplate->resetProcessors(); goto f51f3; A8869: $reversProxySiteCreator->createUser(); goto Faf5f; e9461: $certificateEntity->setCsr($csr); goto b38ca; Bc6a2: $siteEntity = $this->siteEntityManager->createEntity(); goto ad06e; B8972: $siteEntity->setReverseProxyUrl($reverseProxyUrl); goto Da8e8; A93aa: $siteEntity->setUserPassword($siteUserPassword); goto Db180; df2dd: return $this->renderConstraints($constraints, $output); goto Ed548; Fd4fd: $privateKey = $rsaKeyGenerator->generatePrivateKey(); goto Df9b1; Ae2a0: return SiteCommand::SUCCESS; goto Ff0f9; Bf637: $this->siteEntityManager->updateEntity($siteEntity); goto fd212; B34dc: $subjectAlternativeNames[] = sprintf("\167\167\x77\56\x25\x73", $domainName); goto bc728; Adc91: $constraints->addAll($siteConstraints); goto df2dd; b3d1d: $subdomain = false === empty($subdomain) ? $subdomain : null; goto f5a35; c8edb: $certificateEntity->setType(CertificateEntity::TYPE_SELF_SIGNED); goto e9461; A2b24: $reverseProxySite->setReverseProxyUrl($reverseProxyUrl); goto c97af; Bc9b1: $reversProxySiteCreator->resetPermissions(); goto B4e44; Adbe5: if (false === is_null($vhostTemplateEntity)) { goto be6d3; } goto B1470; d74b3: a0cff: goto Dd5cc; cafc9: $siteEntity->setCertificate($certificateEntity); goto C3b21; Db180: $siteEntity->setRootDirectory($rootDirectory); goto B8972; Aab56: $reverseProxySite->setDomainName($domainName); goto ede97; ad06e: $siteEntity->setType(SiteEntity::TYPE_REVERSE_PROXY); goto F0dd5; F4bb4: $siteEntity->setApplication($vhostTemplateEntity->getName()); goto Bf637; d3b8e: $subjectAlternativeNames[] = $registrableDomain; goto Cc103; D71ac: $rootDirectory = $domainName; goto a4468; ea7e0: if (!(false === empty($redirectionVhostTemplate))) { goto c38cb; } goto D940d; Cc103: a99eb: goto Cc53f; c2eff: f4c2e: goto ef907; Eb4ec: $rsaKeyGenerator = new RsaKeyGenerator(); goto Fd4fd; Aed03: $vhostTemplate = self::VHOST_TEMPLATE_NAME; goto D71ac; e482b: goto a0cff; goto b3135; F0dd5: $siteEntity->setDomainName($domainName); goto b8e9b; Fae2c: $reversProxySiteCreator->createLogrotateFile(); goto a88e3; F8b15: $reversProxySiteCreator = new ReverseProxySiteCreator($reverseProxySite); goto A8869; C3c1d: $redirectionVhostTemplateFile = realpath(dirname(__FILE__) . "\57\56\56\x2f\56\56\57\x72\145\163\x6f\165\162\x63\145\163\57\x6e\147\x69\156\x78\x2f\x76\x68\157\163\x74\x5f\164\145\x6d\160\154\x61\164\145\57\162\145\x64\x69\x72\x65\x63\164"); goto A9695; da6e6: $constraints = new ConstraintViolationList(); goto Adc91; B1470: throw new \Exception(sprintf("\x56\150\157\x73\x74\x20\x54\145\x6d\x70\154\141\x74\x65\40\x22\45\163\x22\40\x64\157\145\x73\40\x6e\x6f\x74\40\145\170\151\163\x74\x2e", $vhostTemplate)); goto e482b; Dde3f: $domainName = trim($input->getOption("\x64\x6f\x6d\x61\x69\x6e\116\x61\x6d\145")); goto Aed03; A9695: $redirectionVhostTemplate = file_get_contents($redirectionVhostTemplateFile); goto ea7e0; db640: $subdomain = $resolvedDomainName->subDomain()->toString(); goto b3d1d; c5337: c38cb: goto c2eff; c97af: $reverseProxySite->setVhostTemplate($siteEntity->getVhostTemplate()); goto F8b15; f51f3: $vhostTemplate->addProcessor(new ServerNameProcessor()); goto e6042; C4711: $resolvedDomainName = $this->domainNameParser->resolveDomainName($domainName); goto Fa5c8; e6042: $vhostTemplate->addProcessor(new RedirectServerNameProcessor()); goto f1fd5; Aa994: $certificateEntity = $this->certificateEntityManager->createEntity(); goto E020a; D2e9c: $reversProxySiteCreator->reloadNginxService(); goto Bc9b1; bee08: $reverseProxySite->setUserPassword($siteEntity->getUserPassword()); goto Aab56; Cc53f: $distinguishedName = new DistinguishedName($domainName, $subjectAlternativeNames); goto b6c55; B2448: $reversProxySiteCreator->createNginxVhost(); goto D2e9c; Aa6c7: $siteUser = trim($input->getOption("\x73\x69\164\x65\x55\x73\145\x72")); goto F4959; b6c55: $csrGenerator = new CsrGenerator($privateKey, $distinguishedName); goto B12c9; Dd5cc: } catch (\Exception $e) { goto B3ea1; B3ea1: $errorMessage = $e->getMessage(); goto C898d; C898d: $output->writeln(sprintf("\74\x65\x72\162\157\x72\76\x25\x73\74\x2f\x65\162\x72\x6f\x72\76", $errorMessage)); goto b4ab9; b4ab9: return SiteCommand::FAILURE; goto d03de; d03de: } } }
