<?php
 namespace App\Log\Parser; class NginxAccessLogParser { const GROK_PATTERN = "\x25\x7b\x69\x70\157\x72\x68\157\x73\164\x3a\156\x65\x74\x77\157\162\x6b\x5f\x63\x6c\x69\x65\x6e\164\x5f\x69\160\175\40\x2d\40\45\x7b\x75\x73\145\x72\156\x61\x6d\145\x3a\x72\x65\x6d\157\164\x65\137\165\x73\145\162\175\x20\x5c\x5b\x25\x7b\150\x74\164\x70\144\141\x74\145\72\x64\141\x74\x65\175\x5c\x5d\40\x22\50\77\72\45\173\x77\157\162\144\x3a\x68\164\x74\x70\x5f\x6d\145\164\150\157\x64\175\40\x25\x7b\156\x6f\164\163\x70\x61\143\x65\x3a\165\x72\x6c\175\x28\x3f\x3a\x20\x48\124\124\120\x2f\45\x7b\156\165\155\142\x65\162\72\150\164\x74\x70\x5f\166\145\162\x73\151\x6f\156\x7d\51\x29\42\40\x25\173\156\x75\x6d\x62\145\162\x3a\150\x74\x74\160\x5f\x73\x74\141\164\x75\163\x5f\x63\x6f\x64\145\x7d\x20\x28\x3f\72\45\x7b\x6e\165\x6d\x62\145\x72\72\156\145\164\167\157\x72\x6b\x5f\x62\171\x74\x65\x73\x7d\x7c\55\x29\40\x5c\x22\45\x7b\x64\141\x74\x61\72\x68\x74\164\160\137\x72\x65\146\x65\x72\x65\162\175\x5c\x22\40\x5c\42\x25\x7b\144\141\x74\141\72\x68\x74\164\160\x5f\165\x73\x65\x72\x5f\x61\147\x65\156\164\175\134\42"; private ?string $logFileContent = null; private array $parsedLogLines = []; private ?GrokParser $grokParser = null; private $timezone = "\x45\165\x72\x6f\x70\x65\57\102\x65\x72\x6c\x69\156"; public function __construct(string $logfileContent) { $this->logFileContent = $logfileContent; } public function parse() : array { goto E3b82; afb93: Cb5fb: goto Fb441; D36c3: foreach ($logLines as $logLine) { goto dc1f2; dc1f2: $parsedLogLine = $this->parseLogLine($logLine); goto c9115; C38a0: f918e: goto ce98f; c9115: if (!(false === empty($parsedLogLine))) { goto D80f8; } goto E0005; E0005: $this->parsedLogLines[] = $parsedLogLine; goto b226f; b226f: D80f8: goto C38a0; ce98f: } goto b4a76; F402c: if (!count($logLines)) { goto Cb5fb; } goto D36c3; Fb441: return $this->parsedLogLines; goto b9025; b4a76: fbe81: goto afb93; E3b82: $logLines = explode(PHP_EOL, $this->logFileContent); goto F402c; b9025: } private function parseLogLine($logLine) : array { goto aebaf; eed40: $networkClientIp = $parseResult["\x6e\x65\164\167\157\162\x6b\x5f\143\154\x69\145\156\164\137\151\160"] ?? ''; goto B36ba; B36ba: $remoteUser = $parseResult["\x72\145\155\x6f\164\145\x5f\165\163\145\x72"] ?? ''; goto C5eec; ae880: $httpStatusCode = $parseResult["\x68\x74\164\x70\137\x73\164\141\164\165\163\137\143\157\144\x65"] ?? ''; goto C35fb; ab00f: return $parsedLogLine; goto e310f; f695a: $dateTime->setTimezone(new \DateTimeZone($timezone)); goto D9af9; B4bed: c8d28: goto ab00f; C35fb: $networkBytes = $parseResult["\x6e\x65\x74\167\x6f\x72\153\137\x62\171\x74\145\163"] ?? ''; goto dfd6c; f1d45: $grokParser = $this->getGrokParser(); goto a8597; ae18b: $parsedLogLine = ["\x6e\x65\x74\167\157\x72\153\x43\154\x69\x65\156\x74\x49\160" => $networkClientIp, "\x72\x65\x6d\x6f\x74\145\125\163\x65\162" => $remoteUser, "\x64\141\164\x65" => $dateTime->format("\x59\x2d\x6d\55\144\40\110\72\151\x3a\x73"), "\x64\x61\164\x65\x52\x61\167" => $date, "\150\x74\x74\160\115\145\164\x68\x6f\x64" => $httpMethod, "\165\162\154" => $url, "\x68\x74\x74\x70\126\145\162\x73\x69\x6f\x6e" => $httpVersion, "\x68\x74\x74\160\123\x74\x61\164\x75\x73\103\x6f\x64\145" => $httpStatusCode, "\x6e\x65\164\x77\157\x72\x6b\102\171\x74\x65\163" => $networkBytes, "\x68\164\164\160\122\145\x66\145\x72\145\162" => $httpReferer, "\150\164\x74\160\125\x73\x65\162\x41\147\145\156\x74" => $httpUserAgent]; goto B4bed; F65f0: $httpVersion = $parseResult["\x68\164\164\160\x5f\166\x65\x72\x73\151\x6f\156"] ?? ''; goto ae880; f625c: $dateTime = new \DateTime($date, new \DateTimeZone("\125\x54\x43")); goto f695a; aebaf: $parsedLogLine = []; goto f1d45; e6c48: if (!(false !== $parseResult && count($parseResult))) { goto c8d28; } goto eed40; C9ce3: if (!(false === empty($date))) { goto E6475; } goto A84b5; Fba84: $httpMethod = $parseResult["\150\164\164\160\x5f\155\x65\164\x68\157\x64"] ?? ''; goto ddc75; A84b5: $timezone = $this->getTimezone(); goto f625c; a8597: $parseResult = $grokParser->parse($logLine); goto e6c48; D9af9: E6475: goto Fba84; fc49b: $httpUserAgent = $parseResult["\150\x74\x74\x70\137\x75\163\145\x72\x5f\141\147\145\156\164"] ?? ''; goto ae18b; ddc75: $url = $parseResult["\x75\162\154"] ?? ''; goto F65f0; dfd6c: $httpReferer = $parseResult["\150\164\164\x70\x5f\162\145\x66\x65\162\145\162"] ?? ''; goto fc49b; C5eec: $date = $parseResult["\144\141\x74\x65"] ?? ''; goto C9ce3; e310f: } public function getParsedLogLines() : array { return $this->parsedLogLines; } public function setTimezone(string $timezone) : void { $this->timezone = $timezone; } public function getTimezone() : ?string { return $this->timezone; } private function getGrokParser() : ?GrokParser { goto F692c; F692c: if (!(true === is_null($this->grokParser))) { goto B4e2a; } goto d797e; ffb05: $this->grokParser->setPattern(self::GROK_PATTERN); goto e5502; E958b: return $this->grokParser; goto cd076; e5502: B4e2a: goto E958b; d797e: $this->grokParser = new GrokParser(); goto ffb05; cd076: } }
