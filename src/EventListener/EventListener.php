<?php
 namespace App\EventListener; use Symfony\Component\EventDispatcher\EventSubscriberInterface; use Symfony\Component\Console\ConsoleEvents; use Symfony\Component\HttpKernel\KernelEvents; use App\Service\Logger; use App\Event\EventQueue; use App\Entity\Manager\EventManager; class EventListener implements EventSubscriberInterface { private EventManager $eventManager; private Logger $logger; public function __construct(EventManager $eventManager, Logger $logger) { $this->eventManager = $eventManager; $this->logger = $logger; } public function onTerminate() : void { goto D5c0f; D5c0f: $queuedEvents = EventQueue::getQueuedEvents(); goto Ab950; Ab950: if (!count($queuedEvents)) { goto E96d6; } goto Ad72a; D8021: E96d6: goto E99f5; Ad72a: try { foreach ($queuedEvents as $event) { goto b6e82; A48e0: Ba7e8: goto F8b21; e0e17: B28d3: goto bdcea; bdcea: if (!(false === empty($userAgent))) { goto D4db0; } goto b8b1a; D627b: $eventEntity->setCreatedAt($event["\145\x76\x65\x6e\x74\124\151\x6d\145"]); goto e657b; b6e82: $user = $event["\165\163\145\162"]; goto Fca27; d6374: $eventEntity->setUserRole($user->getRole()); goto a9ee3; d5645: $eventEntity = $this->eventManager->createEntity(); goto D627b; a9ee3: if (!(false === is_null($request))) { goto A59ac; } goto a0ab5; a8bc6: a1aa9: goto be0c8; F8b21: $this->eventManager->updateEntity($eventEntity); goto a8bc6; a0ab5: $sourceIpAddress = $request->getClientIp(); goto D2147; Cb1d8: if (!(false === empty($eventData))) { goto Ba7e8; } goto Aead1; B102b: D4db0: goto ec9cc; e657b: $eventEntity->setEventName($event["\145\166\x65\x6e\x74\x4e\141\155\145"]); goto fe245; Cefa6: $eventData = $event["\145\x76\x65\156\164\x44\141\x74\x61"]; goto d5645; fe245: $eventEntity->setUserName($user->getUserName()); goto d6374; Fca27: $request = $event["\x72\145\161\165\145\163\x74"]; goto Cefa6; Aead1: $eventEntity->setEventData($eventData); goto A48e0; D2147: $userAgent = $request->headers->get("\x55\x73\x65\162\x2d\x41\147\145\156\x74"); goto F4825; F4825: if (!(false === empty($sourceIpAddress))) { goto B28d3; } goto E38a4; ec9cc: A59ac: goto Cb1d8; E38a4: $eventEntity->setSourceIpAddress($sourceIpAddress); goto e0e17; b8b1a: $eventEntity->setUserAgent($userAgent); goto B102b; be0c8: } C6614: } catch (\Exception $e) { $this->logger->exception($e); } goto D8021; E99f5: } public static function getSubscribedEvents() : array { return [KernelEvents::TERMINATE => [["\x6f\156\x54\145\162\x6d\x69\x6e\x61\164\145", 50]], ConsoleEvents::TERMINATE => [["\x6f\156\124\145\x72\155\151\156\x61\x74\145", 50]]]; } }
