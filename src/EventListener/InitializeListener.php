<?php
 namespace App\EventListener; use Symfony\Component\HttpKernel\Event\RequestEvent; use Symfony\Component\EventDispatcher\EventSubscriberInterface; use Symfony\Component\Console\Event\ConsoleCommandEvent; use Symfony\Component\HttpKernel\KernelEvents; use Symfony\Component\Console\ConsoleEvents; use Symfony\Contracts\Cache\ItemInterface; use Psr\Cache\CacheItemPoolInterface as CachePool; use GuzzleHttp\Client as HttpClient; use GuzzleHttp\Psr7\Request; use Twig\Environment as TwigEnvironment; use App\Entity\Manager\ConfigManager; use App\Entity\Manager\UserManager; use App\Entity\Manager\DatabaseServerManager; use App\Command\Command; use App\Util\PasswordGenerator; use App\CloudPanel\Environment as CloudPanelEnvironment; use App\CloudPanel\Aws\Instance as AwsInstance; use App\CloudPanel\Do\Instance as DoInstance; use App\CloudPanel\Gce\Instance as GceInstance; use App\CloudPanel\Hetzner\Instance as HetznerInstance; use App\CloudPanel\Vultr\Instance as VultrInstance; use App\CloudPanel\Instance; use App\Do\Client as DoClient; use App\Gce\Client as GceClient; use App\Hetzner\Client as HetznerClient; use App\Vultr\Client as VultrClient; use App\System\CommandExecutor; use App\System\Command\ChangeDatabaseUserPasswordCommand; use App\Entity\DatabaseServer; use App\Service\Crypto; use App\Site\Ssl\Generator\RsaKeyGenerator; use App\Database\Connection as DatabaseConnection; use App\Util\Retry; class InitializeListener implements EventSubscriberInterface { private const IP_REQUEST_URL = "\150\x74\164\x70\163\72\x2f\x2f\144\x33\161\x6e\144\65\64\x71\x38\147\142\x33\152\145\56\143\x6c\157\165\x64\146\x72\157\156\164\56\156\x65\x74\57"; private ConfigManager $configManager; private DatabaseServerManager $databaseServerManager; private UserManager $userManager; private CachePool $cachePool; private TwigEnvironment $twig; public function __construct(ConfigManager $configManager, DatabaseServerManager $databaseServerManager, UserManager $userManager, CachePool $cachePool, TwigEnvironment $twig) { goto Ece57; Fa87e: $this->twig = $twig; goto Cbc2c; Ece57: $this->configManager = $configManager; goto df8b8; c2ba1: $this->cachePool = $cachePool; goto Fa87e; B3204: $this->userManager = $userManager; goto c2ba1; df8b8: $this->databaseServerManager = $databaseServerManager; goto B3204; Cbc2c: } public function onKernelRequest(RequestEvent $event) : void { goto D8e5d; Dea56: return; goto befd1; befd1: a56e8: goto Fecaa; Fecaa: $this->initialize($event); goto d17b8; D8e5d: if (!(false === $event->isMainRequest())) { goto a56e8; } goto Dea56; d17b8: } public function onConsoleCommand(ConsoleCommandEvent $event) : void { goto be6f4; f2a30: $this->initialize($event); goto e561a; e561a: F2868: goto f4183; be6f4: $command = $event->getCommand(); goto cc315; cc315: if (!$command instanceof Command) { goto F2868; } goto f2a30; f4183: } private function initialize(RequestEvent|ConsoleCommandEvent $event) : void { goto F79b2; bb2d6: $this->setCloudPanelReleaseChannel(); goto b0a69; Dbfc4: $this->setLetsEncryptPrivateKey(); goto fae87; d7c53: $this->setDatabaseServer($event); goto Bf051; b0a69: if (!$event instanceof RequestEvent) { goto c8956; } goto Dbfc4; B8b0d: $this->setInstanceUid(); goto eef28; fae87: c8956: goto d7c53; F79b2: $this->setTimezone(); goto B8b0d; eef28: $this->setCloudPanelVersion(); goto bb2d6; Bf051: $this->setEnvironment($event); goto Bce90; Bce90: } private function setTimezone() : void { goto e821e; e689a: if (!(true === is_null($timezone))) { goto e56b8; } goto Acfd2; e821e: $timezone = $this->configManager->get("\x74\151\x6d\145\x7a\157\x6e\145"); goto e689a; Acfd2: $this->configManager->set("\164\x69\x6d\x65\172\x6f\156\x65", "\x55\124\x43"); goto C8408; C8408: e56b8: goto Fcf57; Fcf57: } private function setInstanceUid() : void { goto D9aef; b079e: if (!(true === is_null($instanceUid))) { goto bbb47; } goto a01fc; ee741: bbb47: goto a6ef4; fbbbb: $this->configManager->set("\x69\x6e\x73\164\x61\x6e\x63\x65\x5f\165\151\144", $instanceUid); goto ee741; a01fc: $instanceUid = substr(sha1(uniqid(mt_rand(), true)), 0, 16); goto fbbbb; D9aef: $instanceUid = $this->configManager->get("\151\x6e\x73\x74\141\156\x63\x65\137\x75\151\144"); goto b079e; a6ef4: } private function setCloudPanelVersion() : void { goto C2c59; aea9f: if (!(false === is_null($appVersion))) { goto fba0a; } goto A06c0; A06c0: $this->configManager->set("\141\160\160\x5f\166\x65\162\163\x69\157\156", trim($appVersion)); goto Fe74a; Fe74a: fba0a: goto B8cb6; C2c59: $appVersion = $_ENV["\x41\x50\120\137\126\105\122\123\x49\117\116"] ?? null; goto aea9f; B8cb6: } private function setCloudPanelReleaseChannel() : void { goto Ca930; d8727: $this->configManager->set("\x72\145\x6c\145\x61\163\145\x5f\143\150\x61\x6e\156\x65\154", CloudPanelEnvironment::RELEASE_CHANNEL_STABLE); goto D15de; b5972: if (!(true === is_null($releaseChannel))) { goto A6b32; } goto d8727; Ca930: $releaseChannel = $this->configManager->get("\x72\x65\x6c\145\141\x73\145\x5f\143\150\141\156\x6e\x65\154"); goto b5972; D15de: A6b32: goto E2ce6; E2ce6: } private function setLetsEncryptPrivateKey() { goto d18a5; de603: if (!(true === is_null($letsEncryptPrivateKey))) { goto D55a5; } goto Af284; Bfd6b: D55a5: goto Cf73a; b4af6: $privateKey = $rsaKeyGenerator->generatePrivateKey(); goto E81e3; d18a5: $letsEncryptPrivateKey = $this->configManager->get("\x6c\145\137\160\162\x69\166\x61\x74\145\137\153\145\171"); goto de603; Af284: $rsaKeyGenerator = new RsaKeyGenerator(); goto b4af6; E81e3: $this->configManager->set("\154\145\x5f\160\162\151\x76\141\x74\x65\137\153\x65\171", $privateKey->getPEM()); goto Bfd6b; Cf73a: } private function setDatabaseServer(RequestEvent|ConsoleCommandEvent $event) : void { goto C581c; aeb08: $password = "\162\x6f\x6f\x74"; goto Cc069; Dbf57: $databaseConnection = new DatabaseConnection($databaseServer); goto b99c1; D7271: A39b6: goto de65c; ec312: $password = $passwordGenerator->generate(); goto Fead7; F06b2: $databaseServer->setPassword(Crypto::encrypt("\162\x6f\x6f\164")); goto c5088; f4f17: $databaseServer->setIsDefault(true); goto Dbf57; C62de: $databaseServer->setPassword($encryptedPassword); goto A5e61; de65c: $this->databaseServerManager->updateEntity($databaseServer); goto F5f4d; F4d66: $databaseServer->setUserName("\x72\157\x6f\164"); goto F06b2; d46d4: $databaseServer = $this->databaseServerManager->createEntity(); goto b0bcd; Edec8: $passwordGenerator = new PasswordGenerator(); goto ec312; A2b81: if (!(0 < $numberOfUsers && 0 == count($databaseServers))) { goto aa858; } goto A371b; c5088: $databaseServer->setPort(DatabaseServer::DEFAULT_PORT); goto E8791; d1cf2: $commandExecutor = new CommandExecutor(); goto f87fd; e343e: $tmpDatabaseServer = clone $databaseServer; goto D43e0; b99c1: $databaseServer->setEngine($databaseConnection->getEngine()); goto b96c2; D43e0: $tmpDatabaseServer->setPassword("\x72\157\157\x74"); goto d1cf2; aaf4d: $changeDatabaseUserPasswordCommand->setUserName("\x72\x6f\x6f\164"); goto D92f5; f87fd: $changeDatabaseUserPasswordCommand = new ChangeDatabaseUserPasswordCommand(); goto aaf4d; D92f5: $changeDatabaseUserPasswordCommand->setNewPassword($password); goto Fc54a; C581c: $numberOfUsers = $this->userManager->countAll(); goto A18f0; Abe02: a60e6: goto aeb08; E8e35: $encryptedPassword = Crypto::encrypt($password); goto d46d4; F2547: $commandExecutor->execute($changeDatabaseUserPasswordCommand); goto D7271; b96c2: $databaseServer->setVersion($databaseConnection->getVersion()); goto C62de; F5f4d: aa858: goto F3658; E8791: $databaseServer->setIsActive(true); goto f4f17; Fead7: goto B894d; goto Abe02; A371b: if ("\x64\x65\x76" == $_ENV["\x41\120\x50\137\105\x4e\x56"]) { goto a60e6; } goto Edec8; A18f0: $databaseServers = $this->databaseServerManager->findAll(); goto A2b81; b0bcd: $databaseServer->setHost("\x31\62\x37\x2e\x30\56\x30\56\x31"); goto F4d66; A5e61: if (!("\x64\x65\166" != $_ENV["\101\x50\x50\x5f\x45\116\x56"])) { goto A39b6; } goto e343e; Cc069: B894d: goto E8e35; Fc54a: $changeDatabaseUserPasswordCommand->setDatabaseServer($tmpDatabaseServer); goto F2547; F3658: } private function setEnvironment(RequestEvent|ConsoleCommandEvent $event) : void { goto E7cd0; C9b50: if (!(true === empty($ipv4PublicIp))) { goto E1407; } goto B332e; Ceea3: $isDarkMode = false === is_null($request->cookies->get("\x74\150\145\155\x65")) && "\x64\x61\162\153" == $request->cookies->get("\x74\x68\x65\155\x65") ? true : false; goto f41fd; B9a74: $command = $event->getCommand(); goto F8114; ec625: if (!(false === is_null($instanceUid))) { goto E8f29; } goto E368d; a45bc: d41d1: goto C0e33; B332e: $ipv4PublicIp = ''; goto Dcea3; Dcea3: try { $ipv4PublicIp = $this->cachePool->get("\x69\x70\166\64\137\160\x75\142\x6c\151\143\137\x69\160", function (ItemInterface $item) { goto fb24e; d1464: if (!(200 == $responseStatusCode)) { goto Dbc4a; } goto ce3b3; fb24e: $item->expiresAfter(3600); goto feaf0; B6e74: $config = ["\164\x69\x6d\145\x6f\165\x74" => 5, "\x76\x65\162\151\x66\x79" => false, "\150\145\x61\144\x65\x72\163" => ["\x55\163\x65\x72\x2d\x41\x67\145\x6e\164" => "\x43\154\x6f\x75\144\x50\141\156\x65\x6c\x20\x76\62"]]; goto ae448; A2351: $request = new Request("\107\x45\x54", self::IP_REQUEST_URL); goto c0533; abc73: return $ipv4PublicIp; goto e96f8; ce3b3: $ipv4PublicIp = trim((string) $response->getBody()); goto Ae341; feaf0: $ipv4PublicIp = null; goto B6e74; ae448: $httpClient = new HttpClient($config); goto A2351; Ae341: Dbc4a: goto abc73; c0533: $response = $this->retry(function () use($httpClient, $request) { $response = $httpClient->send($request); return $response; }); goto e75be; e75be: $responseStatusCode = $response->getStatusCode(); goto d1464; e96f8: }); } catch (\Exception $e) { } goto B823d; C0e33: A50ab: goto A7dbc; b1cee: $instance->setEnvironment($environment); goto db944; bc224: $request->attributes->set("\151\156\163\x74\141\x6e\x63\145", $instance); goto Ed9ed; db944: $hostname = gethostname(); goto C4805; Fe442: goto C9e07; goto e208b; baf88: C9e07: goto af70b; C4805: $instance->setHostname($hostname); goto Dc96a; cc06c: $environment = new CloudPanelEnvironment(); goto f4201; F8114: $command->setInstance($instance); goto Fe442; ceb85: E1407: goto bc224; e208b: c1155: goto ff16a; Ed9ed: $request->attributes->set("\151\163\104\141\162\153\x4d\157\144\x65", $isDarkMode); goto A4273; A7dbc: $instanceUid = $this->configManager->get("\151\156\163\164\x61\156\143\145\x5f\165\x69\144"); goto ec625; B823d: $instance->setIpv4PublicIp($ipv4PublicIp); goto ceb85; E7cd0: $cloud = $this->configManager->get("\x63\x6c\157\x75\144"); goto cc06c; ad1fd: E8f29: goto b1cee; Dc96a: if ($event instanceof RequestEvent) { goto c1155; } goto B9a74; E368d: $instance->setUid($instanceUid); goto ad1fd; f6e93: $this->twig->addGlobal("\x69\163\x44\141\162\153\x4d\x6f\x64\x65", $isDarkMode); goto baf88; A4273: $this->twig->addGlobal("\151\156\x73\x74\x61\x6e\143\x65", $instance); goto f6e93; f4201: switch ($cloud) { case CloudPanelEnvironment::CLOUD_PROVIDER_AWS: goto A5302; Df764: goto A50ab; goto c7a12; bf669: if (!("\144\145\x76" == $_ENV["\101\x50\120\137\x45\116\126"])) { goto f5cc3; } goto a2841; b5414: $region = $_ENV["\x44\x45\126\x5f\x41\127\x53\x5f\x52\x45\x47\111\117\x4e"] ?? ''; goto Bd0a9; Bd0a9: $instance->setInstanceId($instanceId); goto F5fe0; a2841: $instanceId = $_ENV["\104\105\x56\x5f\x41\x57\x53\137\111\x4e\123\124\101\x4e\103\105\x5f\111\x44"] ?? ''; goto b5414; A7a5a: $instance->setRegion($region); goto D5bb7; B387b: $instance = new AwsInstance(); goto bf669; F5fe0: $instance->setInstanceType("\164\63\56\170\154\141\x72\147\145"); goto A7a5a; A5302: $environment->setCloudProvider(CloudPanelEnvironment::CLOUD_PROVIDER_AWS); goto B387b; D5bb7: f5cc3: goto Df764; c7a12: case CloudPanelEnvironment::CLOUD_PROVIDER_DO: goto ca60a; a0819: $instance->setIpv4PublicIp("\x31\62\x37\56\60\x2e\60\x2e\61"); goto b1ca8; Caa8b: $dropletId = $_ENV["\x44\x45\126\137\x44\x4f\x5f\104\x52\x4f\120\x4c\105\x54\x5f\111\x44"] ?? ''; goto D5cfc; dbaed: $instance = new DoInstance($doClient); goto d55e4; C097e: goto A50ab; goto fe406; B7bcc: $instance->setFloatingIp("\x31\x32\x37\56\x30\x2e\60\x2e\x31"); goto a0819; C7c86: d11f5: goto dbaed; ca60a: $environment->setCloudProvider(CloudPanelEnvironment::CLOUD_PROVIDER_DO); goto B0580; d58f9: $token = $this->configManager->get("\x64\x6f\x5f\x61\x63\x63\x65\163\x73\x5f\x74\157\153\x65\x6e"); goto f00f3; Ba233: $instance->setDropletId($dropletId); goto c70c3; B0580: $doClient = new DoClient(); goto d58f9; f00f3: if (!(false === is_null($token))) { goto d11f5; } goto Fe49c; D5cfc: $region = $_ENV["\x44\x45\x56\137\104\117\137\122\105\107\111\117\116"] ?? ''; goto Ba233; d55e4: $doClient->setInstance($instance); goto Ac459; c70c3: $instance->setRegion($region); goto B7bcc; b1ca8: fad8b: goto C097e; Ac459: if (!("\144\145\166" == $_ENV["\101\x50\120\137\x45\x4e\x56"])) { goto fad8b; } goto Caa8b; Fe49c: $doClient->setToken($token); goto C7c86; fe406: case CloudPanelEnvironment::CLOUD_PROVIDER_GCE: goto A76ff; Ca7e5: $instance->setMachineType($machineType); goto ba3ae; f0f15: A2479: goto ffd08; fdd44: $instance->setInstanceName($instanceName); goto Ca7e5; A76ff: $environment->setCloudProvider(CloudPanelEnvironment::CLOUD_PROVIDER_GCE); goto f18f0; E95b5: $instance->setIpv4PublicIp("\61\62\x37\56\x30\56\x30\x2e\x31"); goto C00c9; Bb012: $gceClient->setAuthConfig($serviceAccountKeys); goto f0f15; A8463: $instance->setInstanceId($instanceId); goto fdd44; F12c4: e26c5: goto a8a73; C00c9: $instance->setProjectId($projectId); goto A8463; E9a98: $instanceName = $_ENV["\104\x45\126\137\107\x43\105\137\x49\116\123\x54\101\x4e\103\x45\137\x4e\101\x4d\105"] ?? ''; goto b4c53; b9f64: $gceClient->setGceInstance($instance); goto ae44f; df4b2: $projectId = $_ENV["\104\105\126\x5f\107\x43\105\137\120\x52\x4f\x4a\x45\103\x54\137\x49\104"] ?? ''; goto F5fbb; ba3ae: $instance->setZone($zone); goto F12c4; f18f0: $gceClient = new GceClient(); goto c1731; F5fbb: $instanceId = $_ENV["\x44\x45\x56\x5f\107\x43\x45\x5f\x49\116\x53\x54\x41\x4e\103\105\x5f\111\104"] ?? ''; goto E9a98; Fc8d8: $serviceAccountKeys = (array) json_decode($serviceAccountKeys, true); goto Bb012; F29d7: $zone = $_ENV["\x44\x45\x56\137\107\x43\x45\x5f\132\117\x4e\105"] ?? ''; goto E95b5; ae44f: if (!("\144\145\166" == $_ENV["\x41\x50\120\x5f\105\x4e\x56"])) { goto e26c5; } goto df4b2; ffd08: $instance = new GceInstance($gceClient); goto b9f64; c1731: $serviceAccountKeys = $this->configManager->get("\147\x63\x65\137\163\x65\x72\x76\151\x63\x65\x5f\x61\x63\143\157\165\x6e\x74\137\153\145\x79\x73"); goto c8c43; a8a73: goto A50ab; goto E2e12; c8c43: if (!(false === is_null($serviceAccountKeys))) { goto A2479; } goto Fc8d8; b4c53: $machineType = $_ENV["\104\105\x56\x5f\107\103\105\x5f\115\x41\x43\x48\111\x4e\105\137\124\131\x50\x45"] ?? ''; goto F29d7; E2e12: case CloudPanelEnvironment::CLOUD_PROVIDER_HETZNER: goto Cd7c1; f4aa7: $instance->setInstanceId($instanceId); goto f64ee; d54d6: goto A50ab; goto a4feb; Dbea1: $apiToken = $this->configManager->get("\x68\145\164\172\x6e\145\162\137\141\160\151\137\x74\x6f\153\145\x6e"); goto b447e; Aabda: $hetznerClient = new HetznerClient(); goto Dbea1; f64ee: dc73a: goto d54d6; ad6a3: $hetznerClient->setInstance($instance); goto bf7d1; b447e: if (!(false === is_null($apiToken))) { goto cb73f; } goto Ddcaf; bf7d1: if (!("\x64\x65\166" == $_ENV["\101\x50\x50\137\105\116\126"])) { goto dc73a; } goto f2647; f2647: $instanceId = $_ENV["\x44\105\126\137\110\105\x54\132\116\x45\x52\137\x49\116\123\x54\x41\116\x43\x45\137\x49\104"] ?? ''; goto a1645; a1645: $instance->setIpv4PublicIp("\61\62\67\56\60\56\60\x2e\x31"); goto f4aa7; Dd0d3: cb73f: goto B1143; Cd7c1: $environment->setCloudProvider(CloudPanelEnvironment::CLOUD_PROVIDER_HETZNER); goto Aabda; Ddcaf: $hetznerClient->setToken($apiToken); goto Dd0d3; B1143: $instance = new HetznerInstance($hetznerClient); goto ad6a3; a4feb: case CloudPanelEnvironment::CLOUD_PROVIDER_VULTR: goto B2632; Ec9a4: $instance->setInstanceId($instanceId); goto ab875; ab875: E3a4f: goto B2a6e; E9e83: db71f: goto dc30b; E8f02: $instance->setIpv4PublicIp($ipv4PublicIp); goto Ec9a4; A70ea: $vultrClient->setApiKey($apiKey); goto E9e83; b19d3: $apiKey = $this->configManager->get("\x76\x75\x6c\x74\x72\137\x61\160\x69\137\x6b\145\x79"); goto ce846; C6cff: $vultrClient = new VultrClient(); goto b19d3; Bc640: $vultrClient->setVultrInstance($instance); goto c9c6c; ce846: if (!(false === is_null($apiKey))) { goto db71f; } goto A70ea; B2a6e: goto A50ab; goto fb2a5; dc30b: $instance = new VultrInstance($vultrClient); goto Bc640; B2632: $environment->setCloudProvider(CloudPanelEnvironment::CLOUD_PROVIDER_VULTR); goto C6cff; E3f5b: $instanceId = $_ENV["\x44\105\126\137\x56\x55\114\124\122\137\111\116\x53\x54\101\116\x43\105\x5f\111\x44"] ?? ''; goto bb780; bb780: $ipv4PublicIp = $_ENV["\104\x45\x56\137\x56\x55\114\x54\x52\137\x49\120\137\126\64\x5f\x50\125\102\x4c\111\x43"] ?? "\61\x32\67\56\60\56\x30\x2e\x31"; goto E8f02; c9c6c: if (!("\x64\x65\x76" == $_ENV["\x41\x50\x50\137\x45\x4e\x56"])) { goto E3a4f; } goto E3f5b; fb2a5: default: $instance = new Instance(); goto A50ab; } goto a45bc; ff16a: $request = $event->getRequest(); goto A476d; f41fd: $ipv4PublicIp = $instance->getIpv4PublicIp(); goto C9b50; A476d: $host = $request->getHost(); goto Ceea3; af70b: } private function retry(callable $fn, $retries = 1, $delay = 3) { return Retry::retry($fn, $retries, $delay); } public static function getSubscribedEvents() : array { return [KernelEvents::REQUEST => [["\x6f\156\x4b\145\x72\156\145\x6c\122\145\161\x75\x65\163\x74", 25]], ConsoleEvents::COMMAND => [["\x6f\156\103\x6f\156\163\157\x6c\x65\103\157\x6d\155\141\x6e\144", 25]]]; } }
