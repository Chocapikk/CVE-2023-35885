<?php
 namespace App\System\Command; use App\System\Command; class ChmodCommand extends Command { private ?string $chmod = null; private ?string $file = null; private bool $recursive = false; public function getCommand() : string { goto B5727; daf55: $file = $this->getFile(); goto Abf8b; Abf8b: $recursive = $this->getRecursive(); goto e0bf4; e0bf4: $this->command = sprintf("\57\165\163\162\x2f\142\151\156\x2f\x73\x75\x64\x6f\40\57\142\151\x6e\x2f\x63\150\x6d\x6f\x64\x20\x25\x73\x20\45\163\x20\45\163", true === $recursive ? "\x2d\x52" : '', $chmod, escapeshellarg($file)); goto dbffb; aa567: return $this->command; goto ef8dc; dbffb: C9f8e: goto aa567; B5727: if ($this->command) { goto C9f8e; } goto C7cc4; C7cc4: $chmod = $this->getChmod(); goto daf55; ef8dc: } public function isSuccessful() : bool { goto B995b; B995b: $output = $this->getOutput(); goto c4115; C8680: return $isSuccessful; goto Dac86; c4115: $isSuccessful = empty($output); goto C8680; Dac86: } public function setChmod(string $chmod) : void { $this->chmod = $chmod; } public function getChmod() : ?string { return $this->chmod; } public function setFile(string $file) : void { $this->file = $file; } public function getFile() : ?string { return $this->file; } public function setRecursive(bool $flag) : void { $this->recursive = $flag; } public function getRecursive() : bool { return $this->recursive; } }
